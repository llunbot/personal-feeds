{"title":"Amazon SageMaker HyperPod introduces Amazon EKS support","link":"https://aws.amazon.com/blogs/aws/amazon-sagemaker-hyperpod-introduces-amazon-eks-support/","date":1725987237000,"content":"<p>Today, we are pleased to announce <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-eks.html\">Amazon Elastic Kubernetes Service (EKS) support in Amazon SageMaker HyperPod</a> — purpose-built infrastructure engineered with resilience at its core for foundation model (FM) development. This new capability enables customers to orchestrate HyperPod clusters using EKS, combining the power of <a href=\"https://kubernetes.io/\">Kubernetes</a> with <a href=\"https://aws.amazon.com/sagemaker/hyperpod/\">Amazon SageMaker HyperPod</a>‘s resilient environment designed for training large models. Amazon SageMaker HyperPod helps efficiently scale across more than a thousand artificial intelligence (AI) accelerators, reducing training time by up to 40%.</p> \n<p>Amazon SageMaker HyperPod now enables customers to manage their clusters using a Kubernetes-based interface. This integration allows seamless switching between Slurm and Amazon EKS for optimizing various workloads, including training, fine-tuning, experimentation, and inference. The CloudWatch Observability EKS add-on provides comprehensive monitoring capabilities, offering insights into CPU, network, disk, and other low-level node metrics on a unified dashboard. This enhanced observability extends to resource utilization across the entire cluster, node-level metrics, pod-level performance, and container-specific utilization data, facilitating efficient troubleshooting and optimization.</p> \n<p><a href=\"https://aws.amazon.com/es/blogs/aws/introducing-amazon-sagemaker-hyperpod-a-purpose-built-infrastructure-for-distributed-training-at-scale/\">Launched at re:Invent 2023</a>, <a href=\"https://aws.amazon.com/es/sagemaker/hyperpod/\">Amazon SageMaker HyperPod</a> has become a go-to solution for AI startups and enterprises looking to efficiently train and deploy large scale models. It is compatible with <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/distributed-training.html\">SageMaker’s distributed training libraries</a>, which offer <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/model-parallel-intro.html\">Model Parallel</a> and <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/data-parallel.html\">Data Parallel</a> software optimizations that help reduce training time by up to 20%. SageMaker HyperPod automatically detects and repairs or replaces faulty instances, enabling data scientists to train models uninterrupted for weeks or months. This allows data scientists to focus on model development, rather than managing infrastructure.</p> \n<p>The integration of Amazon EKS with Amazon SageMaker HyperPod uses the advantages of Kubernetes, which has become popular for machine learning (ML) workloads due to its scalability and rich open-source tooling. Organizations often standardize on Kubernetes for building applications, including those required for generative AI use cases, as it allows reuse of capabilities across environments while meeting compliance and governance standards. Today’s announcement enables customers to scale and optimize resource utilization across more than a thousand AI accelerators. This flexibility enhances the developer experience, containerized app management, and dynamic scaling for FM training and inference workloads.</p> \n<p>Amazon EKS support in Amazon SageMaker HyperPod strengthens resilience through deep health checks, automated node recovery, and job auto-resume capabilities, ensuring uninterrupted training for large scale and/or long-running jobs. Job management can be streamlined with the optional <a href=\"https://github.com/aws/sagemaker-hyperpod-cli\">HyperPod CLI</a>, designed for Kubernetes environments, though customers can also use their own CLI tools. Integration with <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html\">Amazon CloudWatch Container Insights</a> provides advanced observability, offering deeper insights into cluster performance, health, and utilization. Additionally, data scientists can use tools like Kubeflow for automated ML workflows. The integration also includes Amazon SageMaker managed MLflow, providing a robust solution for experiment tracking and model management.</p> \n<p>At a high level, Amazon SageMaker HyperPod cluster is created by the cloud admin using the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-ref.html#sagemaker-hyperpod-ref-api\">HyperPod cluster API</a> and is fully managed by the HyperPod service, removing the undifferentiated heavy lifting involved in building and optimizing ML infrastructure. Amazon EKS is used to orchestrate these HyperPod nodes, similar to how Slurm orchestrates HyperPod nodes, providing customers with a familiar Kubernetes-based administrator experience.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/09/04/hyperpod-eks-diagram.png\"><img title=\"Amazon SageMaker HyperPod Architecture - EKS\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/09/04/hyperpod-eks-diagram-1024x905.png\" width=\"1024\" height=\"905\" /></a></p> \n<p><span><strong>Let’s explore how to get started with Amazon EKS support in Amazon SageMaker HyperPod</strong></span><br /> I start by preparing the scenario, checking the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-eks-prerequisites.html\">prerequisites</a>, and creating an Amazon EKS cluster with a single <a href=\"https://aws.amazon.com/cloudformation/\">AWS CloudFormation</a> stack following the <a href=\"https://catalog.us-east-1.prod.workshops.aws/workshops/2433d39e-ccfe-4c00-9d3d-9917b729258e\">Amazon SageMaker HyperPod EKS workshop</a>, configured with VPC and storage resources.</p> \n<p>To create and manage Amazon SageMaker HyperPod clusters, I can use either the <a href=\"https://aws.amazon.com/console/\">AWS Management Console</a> or <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface (AWS CLI)</a>. Using the AWS CLI, I specify my cluster configuration in a JSON file. I choose the Amazon EKS cluster created previously as the orchestrator of the SageMaker HyperPod Cluster. Then, I create the cluster worker nodes that I call “worker-group-1”, with a private <code>Subnet,</code> <code>NodeRecovery</code> set to <code>Automatic</code> to enable automatic node recovery<strong> </strong>and for <code>OnStartDeepHealthChecks</code> I add <code>InstanceStress</code> and <code>InstanceConnectivity</code> to enable deep health checks.</p> \n<pre><code>cat &gt; eli-cluster-config.json &lt;&lt; EOL\n{\n    \"ClusterName\": \"example-hp-cluster\",\n    \"Orchestrator\": {\n        \"Eks\": {\n            \"ClusterArn\": \"${EKS_CLUSTER_ARN}\"\n        }\n    },\n    \"InstanceGroups\": [\n        {\n            \"InstanceGroupName\": \"worker-group-1\",\n            \"InstanceType\": \"ml.p5.48xlarge\",\n            \"InstanceCount\": 32,\n            \"LifeCycleConfig\": {\n                \"SourceS3Uri\": \"s3://${BUCKET_NAME}\",\n                \"OnCreate\": \"on_create.sh\"\n            },\n            \"ExecutionRole\": \"${EXECUTION_ROLE}\",\n            \"ThreadsPerCore\": 1,\n            \"OnStartDeepHealthChecks\": [\n                \"InstanceStress\",\n                \"InstanceConnectivity\"\n            ],\n        },\n  ....\n    ],\n    \"VpcConfig\": {\n        \"SecurityGroupIds\": [\n            \"$SECURITY_GROUP\"\n        ],\n        \"Subnets\": [\n            \"$SUBNET_ID\"\n        ]\n    },\n    \"ResilienceConfig\": {\n        \"NodeRecovery\": \"Automatic\"\n    }\n}\nEOL\n</code></pre> \n<p>You can add <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ClusterInstanceGroupSpecification.html#sagemaker-Type-ClusterInstanceGroupSpecification-InstanceStorageConfigs\">InstanceStorageConfigs</a> to provision and mount an additional <a href=\"https://docs.aws.amazon.com/ebs/latest/userguide/ebs-volumes.html\">Amazon EBS volumes</a> on HyperPod nodes.</p> \n<p>To create the cluster using the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-ref.html#sagemaker-hyperpod-ref-api\">SageMaker HyperPod APIs</a>, I run the following AWS CLI command:</p> \n<pre><code>aws sagemaker create-cluster \\ \n--cli-input-json file://eli-cluster-config.json</code></pre> \n<p>The AWS command returns the ARN of the new HyperPod cluster.</p> \n<pre><code>{\n\"ClusterArn\": \"arn:aws:sagemaker:us-east-2:ACCOUNT-ID:cluster/wccy5z4n4m49\"\n}</code></pre> \n<p>I then verify the HyperPod cluster status in the <a href=\"https://console.aws.amazon.com/sagemaker/\">SageMaker Console</a>, awaiting until the status changes to <code>InService</code>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/08/30/InService-1024x323.jpg\" width=\"1024\" height=\"323\" /></p> \n<div> \n <p>Alternatively, you can check the cluster status using the AWS CLI running the <code>describe-cluster</code> command:</p> \n <pre><code>aws sagemaker describe-cluster --cluster-name my-hyperpod-cluster</code></pre> \n <p>Once the cluster is ready, I can access the SageMaker HyperPod cluster nodes. For most operations, I can use <code>kubectl</code> commands to manage resources and jobs from my development environment, using the full power of Kubernetes orchestration while benefiting from SageMaker HyperPod’s managed infrastructure. On this occasion, for advanced troubleshooting or direct node access, I use <a href=\"https://aws.amazon.com/es/systems-manager/\">AWS Systems Manager</a> (SSM) to log into individual nodes, following the instructions in the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-run-jobs-access-nodes.html\">Access your SageMaker HyperPod cluster nodes</a> page.</p> \n <p>To run jobs on the SageMaker HyperPod cluster orchestrated by EKS, I follow the steps outlined in the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-eks-run-jobs.html\">Run jobs on SageMaker HyperPod cluster through Amazon EKS page</a>. You can use the HyperPod CLI and the native <code>kubectl</code> command to find avaible HyperPod clusters and submit training jobs (Pods). For managing ML experiments and training runs, you can use <a href=\"https://www.kubeflow.org/docs/components/training/overview/\">Kubeflow Training Operator</a>, <a href=\"https://kueue.sigs.k8s.io/docs/overview/\">Kueue</a> and <a href=\"https://aws.amazon.com/sagemaker/experiments/?nc1=h_ls\">Amazon SageMaker-managed MLflow.</a></p> \n <p>Finally, in the SageMaker Console, I can view the <strong>Status</strong> and <strong>Kubernetes version</strong> of recently added EKS clusters, providing a comprehensive overview of my SageMaker HyperPod environment.</p> \n <p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/08/30/Screenshot-2024-08-21-at-3.07.40-PM-1024x689.png\" width=\"1024\" height=\"689\" /></p> \n</div> \n<p>And I can monitor cluster performance and health metrics using <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html\">Amazon CloudWatch Container Insights</a>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/09/09/Screenshot-2024-09-09-at-4.11.36 PM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/09/09/Screenshot-2024-09-09-at-4.11.36 PM-1024x535.png\" width=\"1024\" height=\"535\" /></a></p> \n<p><span><strong>Things to know</strong></span><br /> Here are some key things you should know about Amazon EKS support in Amazon SageMaker HyperPod:</p> \n<p><strong>Resilient Environment</strong> – This integration provides a more resilient training environment with deep health checks, automated node recovery, and job auto-resume. SageMaker HyperPod automatically detects, diagnoses, and recovers from faults, allowing you to continually train foundation models for weeks or months without disruption. This can reduce training time by up to 40%.</p> \n<p><strong>Enhanced GPU Observability</strong> –<a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html\"> Amazon CloudWatch Container Insights</a> provides detailed metrics and logs for your containerized applications and microservices. This enables comprehensive monitoring of cluster performance and health.</p> \n<p><strong>Scientist-Friendly Tool</strong> – This launch includes a custom HyperPod CLI for job management, Kubeflow Training Operators for distributed training, Kueue for scheduling, and integration with SageMaker Managed MLflow for experiment tracking. It also works with SageMaker’s distributed training libraries, which provide Model Parallel and Data Parallel optimizations to significantly reduce training time. These libraries, combined with auto-resumption of jobs, enable efficient and uninterrupted training of large models.</p> \n<p><strong>Flexible Resource Utilization</strong> – This integration enhances developer experience and scalability for FM workloads. Data scientists can efficiently share compute capacity across training and inference tasks. You can use your existing Amazon EKS clusters or create and attach new ones to HyperPod compute, bring your own tools for job submission, queuing and monitoring.</p> \n<p>To get started with Amazon SageMaker HyperPod on Amazon EKS, you can explore resources such as the <a href=\"https://catalog.us-east-1.prod.workshops.aws/workshops/2433d39e-ccfe-4c00-9d3d-9917b729258e\">SageMaker HyperPod EKS Workshop</a>, the aws-do-hyperpod project, and the <a href=\"https://bit.ly/awsome-dt\">awsome-distributed-training project</a>. This release is generally available in the AWS Regions where Amazon SageMaker HyperPod is available except Europe(London). For pricing information, visit the <a href=\"https://aws.amazon.com/sagemaker/pricing/\">Amazon SageMaker Pricing page</a>.</p> \n<p>This blog post was a collaborative effort. I would like to thank Manoj Ravi, Adhesh Garg, Tomonori Shimomura, Alex Iankoulski, Anoop Saha, and the entire team for their significant contributions in compiling and refining the information presented here. Their collective expertise was crucial in creating this comprehensive article.</p> \n<p>– <a href=\"https://www.linkedin.com/in/lizfue/\">Eli.</a></p>","author":"Elizabeth Fuentes","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"9737c6fee72665dba11988432d0225d7b7b2df28ece8bae991368af07d47ee3a","category":"Tech"}