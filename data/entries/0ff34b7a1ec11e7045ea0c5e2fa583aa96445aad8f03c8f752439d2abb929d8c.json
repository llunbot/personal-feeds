{"title":"AWS Database Migration Service now automates time-intensive schema conversion tasks using generative AI","link":"https://aws.amazon.com/blogs/aws/aws-data-migration-service-improves-database-schema-conversion-with-generative-ai/","date":1733085895000,"content":"<p>Starting today, <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_SchemaConversion.html\">AWS Database Migration Service Schema Conversion (AWS DMS SC)</a> introduces a new capability to improve the database schema conversion experience by automatically converting up to 90 percent of schema objects from commercial databases to <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.AuroraPostgreSQL.html\">PostgreSQL</a> migrations.</p> \n<p><a href=\"https://aws.amazon.com/dms/\"><span>AWS DMS</span></a> is a cloud service that makes it possible to migrate relational databases, data warehouses, NoSQL databases, and other types of data stores. You can use <span>AWS DMS</span> to migrate your data into the <a href=\"https://aws.amazon.com/\">Amazon Web Services (AWS)</a> Cloud or between combinations of cloud and on-premises setups.</p> \n<p>Today, more than 1 million databases have been migrated using AWS Database Migration Service. <span>AWS DMS</span> helps you migrate your data from one database system to another. And, when migrating between different database engines, AWS DMS SC helps to convert the source database schema and procedures to the target database system.</p> \n<p>However, although AWS DMS SC automates many steps in these migrations, certain complex database code elements still require manual intervention, which can extend migration timelines and add cost. This is particularly the case with proprietary system functions or procedures, and data type conversions, which don’t always have direct equivalents in PostgreSQL.</p> \n<p>The new <a href=\"https://aws.amazon.com/ai/generative-ai/\">generative AI</a> capability in AWS DMS SC is designed to address these challenges by automating some of the most time-intensive schema conversion tasks. Using <a href=\"https://aws.amazon.com/what-is/large-language-model/\">large language models (LLMs)</a> hosted on <a href=\"https://aws.amazon.com/bedrock/\">Amazon Bedrock</a>, the new capability expands the existing conversion capabilities. It converts code snippets in the source database that were otherwise not supported by traditional rule-based techniques, including complex procedures and functions.</p> \n<p>Generative AI–assisted code conversion helps to reduce migration costs and accelerate project timelines. Because AWS DMS SC automates more of the schema conversion process, you can focus on higher value tasks such as refining and optimizing your applications post-migration rather than manually resolving conversion gaps. Our beta customers have already experienced success with these AI-powered features in AWS DMS SC, achieving cost savings and faster migrations.</p> \n<p><span><strong>Let’s find out how it works<br /> </strong></span>To demonstrate the ease of using this new generative AI capability, I’ll walk through the schema conversion process in AWS DMS SC. <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_SchemaConversion.html\">AWS DMS SC</a> simplifies database migration by automatically converting my source database’s structure, including tables, views, stored procedures, functions, and more, to a format compatible with my target database. Any objects that can’t be automatically converted are flagged for manual attention.</p> \n<p>I start with a self-managed commercial database running on <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a>. I use the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a> to define the <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/getting-started-instance.html\">instance profile</a> and the <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/getting-started-data-providers.html\">data providers</a>. This is where I configure the replication instance network details, the database engine and its endpoint, the secret where the database password is securely stored, and more. I also create a migration project. These steps aren’t new, and you can refer to <a href=\"https://aws.amazon.com/blogs/database/accelerate-your-database-migration-journey-using-aws-dms-schema-conversion/\">Accelerate your database migration journey using AWS DMS Schema Conversion</a> in the AWS Database Blog to learn about the details.</p> \n<p>After my project is created, I select it, and on the <strong>Schema conversion</strong> tab, I choose <strong>Launch schema conversion</strong>. It takes a couple of minutes to launch the conversion tool the first time.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_13-37-14.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_13-37-14.png\" alt=\"DMS : Launch migration project\" width=\"1612\" height=\"496\" /></a></p> \n<p>AWS DMS SC with generative AI is an opt-in capability. I first activate the option. On the <strong>Settings</strong> tab, I turn on <strong>Enable Generative AI feature for conversion</strong>.<a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/08/2024-11-08_18-33-02.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/08/2024-11-08_18-33-02.png\" alt=\"DMS : enable GenAI feature\" width=\"400\" height=\"272\" /></a></p> \n<p>Before diving into the details of the conversion, I would like to get an overall assessment of the migration complexity. I select the schema I want to migrate. Then I select <strong>Assess</strong> in the menu.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-24-41.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-24-41.png\" alt=\"DMS : Assess schema\" width=\"1612\" height=\"620\" /></a></p> \n<p>After a few minutes, a high-level <strong>Summary</strong> is available. The <strong>Action items</strong> tab has more details. I choose <strong>Export results</strong> and choose <strong>PDF</strong> to receive a report to share with my colleagues. The report is generated and available from an S3 bucket.</p> \n<p>The summary screen shows the percentage of <strong>Database storage objects</strong> and <strong>Database code objects</strong> that can be converted by the rule-based method. That’s <strong>100%</strong> and <strong>57%</strong> in this example. Let’s see how the generative AI-based conversion will change that.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-27-04.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-27-04.png\" alt=\"DMS : Assess schema summary\" width=\"1612\" height=\"816\" /></a></p> \n<p>The PDF contains an executive summary, various statistics about the number of objects to be migrated, the feasibility of conversion with generative AI, and the complexity of the migration.</p> \n<table> \n <tbody> \n  <tr> \n   <td><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-30-03.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-30-03.png\" alt=\"DMS : Assess schema PDF page 1\" width=\"2168\" height=\"1866\" /></a></td> \n   <td><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-30-14.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-30-14.png\" alt=\"DMS : Assess schema PDF page 2\" width=\"2168\" height=\"1866\" /></a></td> \n  </tr> \n </tbody> \n</table> \n<p>By reading the report, I learn there is no blocker detected to migrate the stored procedures. I select the stored procedure I want to migrate (<code>PRC_AIML_DEMO6</code>). Then, I select the <strong>Actions</strong> menu on the source database (the left one) and choose <strong>Convert</strong>.</p> \n<p>After a minute or two, I can read the original procedure code in the left pane and the proposed migrated version on the right panel.</p> \n<p>The summary screen has been updated. Now,<strong> it shows that 100 percent of the code can be converted automatically</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-56-34.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-56-34.png\" alt=\"DNS : view proposed modifications\" width=\"3382\" height=\"1700\" /></a></p> \n<p>I can edit the code and make changes as required. When I’m comfortable with the proposed new version, I select the <strong>Actions</strong> menu on the target database side (the right one) and choose <strong>Apply changes</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-57-10.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/2024-11-06_14-57-10.png\" alt=\"DMS : Apply changes\" width=\"400\" height=\"319\" /></a></p> \n<p>With this new generative AI capability, AWS DMS SC can automatically convert up to 90 percent of schema objects from commercial databases to PostgreSQL.</p> \n<p>To support your compliance requirements, this capability is initially turned off, and you can enable it as needed. If you choose to use the generative AI features in AWS DMS SC, it will flexibly decide between traditional rule-based methods and generative AI based on the complexity of the objects being converted. Customers with strict policies against generative AI can continue to rely solely on the rule-based approach, with any unconverted or partially converted objects requiring manual adjustments.</p> \n<p><span><strong>Availability<br /> </strong></span>This new capability is available today in the following <a href=\"https://docs.aws.amazon.com/glossary/latest/reference/glos-chap.html#region\">AWS Regions</a>: US East (N. Virginia), US West (Oregon), and Europe (Frankfurt).</p> \n<p><span>AWS DMS</span> Schema Conversion with generative AI provides you with a faster migration pathway and helps you accelerate your transition to AWS.</p> \n<p>To get started, visit the <a href=\"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_SchemaConversion.html\"><span>AWS DMS</span> Schema Conversion</a> documentation and learn how this generative AI capability can simplify your next database migration.</p> \n<p><a href=\"https://twitter.com/sebsto\">-- seb</a></p>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"0ff34b7a1ec11e7045ea0c5e2fa583aa96445aad8f03c8f752439d2abb929d8c","category":"Tech"}