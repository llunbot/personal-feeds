{"title":"New – Amazon VPC Network Access Analyzer","link":"https://aws.amazon.com/blogs/aws/new-amazon-vpc-network-access-analyzer/","date":1638401052000,"content":"<p>If you are a member of your organization’s networking, cloud operations, or security teams, you are going to love this new feature. The new Amazon VPC Network Access Analyzer helps you identify network configurations that lead to unintended network access. As you will see in a moment, it will point out ways that you can improve your security posture while still letting you and your organization be agile and flexible. In contrast to manual checking of network configurations, which is error prone and hard to scale, this tool lets you analyze your AWS networks of any size and complexity.</p> \n<p><span><strong>Introducing Network Access Analyzer</strong></span><br /> Network Access Analyzer takes advantage of our <a href=\"https://www.allthingsdistributed.com/2019/06/proving-security-at-scale-with-automated-reasoning.html\">automated reasoning technology</a> that already powers <a href=\"https://aws.amazon.com/iam/features/analyze-access/\">AWS IAM Access Analyzer</a>, <a href=\"https://docs.aws.amazon.com/vpc/latest/reachability/what-is-reachability-analyzer.html\">Amazon VPC Reachability Analyzer</a>, <a href=\"https://docs.aws.amazon.com/inspector/latest/userguide/inspector_network-reachability.html\">Amazon Inspector Network Reachability</a>, and other <a href=\"https://aws.amazon.com/security/provable-security/\">provable security</a> tools.</p> \n<p>This new tool uses Network Access Scopes to specify the desired connectivity between your AWS resources. You can get started with a set of Amazon-created scopes, and then either copy &amp; customize them, or create your own from scratch. The scopes are high-level and independent of any particular network architecture or configuration, and can be thought of as a language for specifying the proper level of access &amp; connectivity for your network. You can, for example, create a scope to verify that all web apps use a firewall to access Internet resources, or to indicate that AWS resources used by your Finance team are separate, distinct, and unreachable from the resources used by your Development team.</p> \n<p>To evaluate your network against a particular scope, you select it and initiate an analysis. It runs for a few minutes and then generates a set of findings, each of which indicates an unexpected network path between the AWS resources defined in the scope. You can analyze the findings, adjust your configuration or modify the scope in response to the findings, and re-run the analysis, all in just a few minutes.</p> \n<p>The analysis process examines a very wide range of AWS resources including Security Groups, CIDR blocks, prefix lists, Elastic Network Interfaces, EC2 instances, Load Balancers, VPC, VPC subnets, VPC endpoints, VPC endpoint services, Transit Gateways, NAT Gateways, Internet Gateways, VPN Gateways, Peering Connections, and Network Firewalls. Your scopes can use <a href=\"https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/\">Resource Groups</a> to reference all resources that are tagged in a particular way.</p> \n<p><span><strong>Using Network Access Analyzer</strong></span><br /> To get started, I open the VPC Console, find the <strong>Network Analysis</strong> section on the left-side navigation, and click <strong>Network Access Analyzer</strong>:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/naa_nav_1.png\" /></p> \n<p>I can see all of my scopes. Initially, I have four, all created by Amazon and ready to use:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/naa_def_scopes_2.png\" /></p> \n<p>To conduct an analysis, I select a scope (<strong>AWS-VPC-Ingress (Amazon created)</strong>) and click <strong>Analyze.</strong> The scope’s description reads:</p> \n<blockquote>\n <p>“Identify ingress paths into your VPCs from Internet Gateways, Peering Connections, VPC Service Endpoints, VPN and Transit Gateways.”</p>\n</blockquote> \n<p>The analysis runs for a couple of minutes and displays the findings as soon as it is done:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/naa_findings_1.png\" /></p> \n<p>There’s a lot of very useful information here! The spectrum chart provides an overview of the resources that are in the findings. I can hover my mouse over any of the segments to learn more, or click on one in order to filter the findings and show only those that reference a particular resource or resource type:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/26/naa_sunburst_2.png\" /></p> \n<p>For example, I click <strong>VPC Peering Connections</strong> and I can see all of the findings that reference the VPC peering connection:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/26/naa_peering_findings_1.png\" /></p> \n<p>As you can see, the <strong>Path details</strong> highlight the VPC peering connection in the path! The next step is to examine the findings, decide which ones are expected, and to add them to the scope so that they are excluded from future findings (more on that in a bit).</p> \n<p><span><strong>Inside a Network Access Scope</strong></span><br /> Let’s take a quick look inside of the Network Access Scope that I used above, and then build another scope from scratch using the visual builder. Each scope is represented in JSON format, and indicates what is considered in-scope (acceptable) traffic between sources and destinations:</p> \n<div> \n <pre><code>{\n          \"networkInsightsAccessScopeId\": \"nis-070dc1d37ca315e86\",\n          \"matchPaths\": [\n                    {\n                              \"source\": {\n                                        \"resourceStatement\": {\n                                                  \"resources\": [],\n                                                  \"resourceTypes\": [\n                                                            \"AWS::EC2::InternetGateway\",\n                                                            \"AWS::EC2::VPCPeeringConnection\",\n                                                            \"AWS::EC2::VPCEndpointService\",\n                                                            \"AWS::EC2::TransitGatewayAttachment\",\n                                                            \"AWS::EC2::VPNGateway\"\n                                                  ]\n                                        }\n                              },\n                              \"destination\": {\n                                        \"resourceStatement\": {\n                                                  \"resources\": [],\n                                                  \"resourceTypes\": [\n                                                            \"AWS::EC2::NetworkInterface\"\n                                                  ]\n                                        }\n                              }\n                    }\n          ],\n          \"excludePaths\": []\n}</code></pre> \n</div> \n<p>The <code>matchPaths</code> element contains <code>source</code> and <code>destination</code> elements. Each of these elements, in turn, identifies AWS resource types and specific resources. While not shown here, scopes can also contain source and destination IP addresses, ports, prefix lists, and traffic types (TCP or UDP). The <code>excludePaths</code> can contain resource types, specific resources, and so forth. I could, for example, define sources and destinations that match all Internet Gateway ingress traffic, but exclude traffic that flows through a Load Balancer, or I could exclude SSH traffic destined for my bastion instances.</p> \n<p><span><strong>Building a Network Access Scope</strong></span><br /> I can build a new scope in three ways. I can <strong>Duplicate and modify</strong> an existing one, I can start from scratch and use the visual builder, or I can write my own JSON and use either the CLI or the API to create a scope. I click <strong>Create Network Access Scope</strong> to use the builder:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/naa_butt_1.png\" /></p> \n<p>I can start with one of five predefined templates, or I can build my own:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/naa_pick_template_1.png\" /></p> \n<p>I enter a name and a description:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/naa_def_top_1.png\" /></p> \n<p>Then I define the source and destinations by resource type, id, traffic type, and so forth:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/naa_match_1.png\" /></p> \n<p>I have many options for matching the traffic type. This allows me to create scopes for very specific purposes:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/naa_def_mid_1.png\" /></p> \n<p>I can use a similar interface to add any optional exclusions.</p> \n<p><span><strong>Things to Know</strong></span><br /> This is a very powerful tool and one that I think you are going to love. Here are a couple of things to know about it:</p> \n<p><strong>Pricing</strong> – You pay $0.002 for each Elastic Network Interface (ENI) analyzed as part of an assessment.</p> \n<p><strong>Regions</strong> – Network Access Analyzer is available in the US East (N. Virginia), US East (Ohio), US West (N. California), US West (Oregon), Africa (Cape Town), Asia Pacific (Hong Kong), Asia Pacific (Mumbai), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central), Europe (Frankfurt), Europe (Ireland), Europe (London), Europe (Milan), Europe (Paris), Europe (Stockholm), South America (São Paulo), and Middle East (Bahrain) Regions.</p> \n<p><strong>In the Works</strong> – We have lots of additional features on the product roadmap including support for <a href=\"https://aws.amazon.com/organizations/\">AWS Organizations</a>, the ability to run your analyses on a regular schedule, and support for IPv6 address ranges and resources.</p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"b3a34b0873ac401c51ac6c552324d5980b951c44b44f3bb313ce0cb2548eb735","category":"Tech"}