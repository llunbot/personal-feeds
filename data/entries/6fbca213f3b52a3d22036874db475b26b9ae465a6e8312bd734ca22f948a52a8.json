{"title":"เปรียบเทียบการใช้ Bard และ ChatGPT เขียนโปรแกรม","link":"https://www.blognone.com/node/133539","date":1682362873000,"content":"<div><div><div><p>ปัญญาประดิษฐ์ด้านภาษาอย่าง ChatGPT กำลังเป็นที่นิยมอย่างสูง และกูเกิลก็เปิดตัว Bard มาได้ระยะหนึ่งแล้ว แม้จะเป็นบริการทดสอบวงปิด (ต้องขอใช้งานล่วงหน้า) แต่ตอนนี้คิวการใช้งานก็ใช้งานได้แทบทันที ทำให้หลายคนอาจจะใช้ปัญญาประดิษฐ์สองตัวคู่กันเสมอๆ</p>\n<p>การใช้งานมีหลายด้าน แต่ด้านหนึ่งที่หลายคนอาจจะใช้งานกัน คือการใช้ปัญญาประดิษฐ์มาช่วยเขียนโปรแกรม โดยการใช้แชตบอตเช่น Bard และ ChatGPT นั้นมีข้อดีเหนือกว่า การใช้ปัญญาประดิษฐ์เขียนโค้ดโดยตรง เพราะเรามักสามารถกำหนดความต้องการ รอผลลัพธ์ และสามารถสั่งแก้ไขเพิ่มเติม จนกว่าจะได้โปรแกรมที่เราต้องการ เราสามารถขอสคริปต์หรือโครงร่างโปรแกรมอย่างง่าย ที่เราต้องการใช้ไลบรารีหรือเฟรมเวิร์คใหม่ๆ โดยผลที่ได้ตรงตามต้องการทันที</p>\n<p><img alt=\"No Description\" src=\"https://www.blognone.com/sites/default/files/externals/511d6678b529e6158c27447faeee3291.png\" /></p>\n<p>ข้อดีสำคัญการใช้แชตบอทในการเขียนโปรแกรมอีกอย่าง คือ แชตบอทมักมีคำอธิบายโค้ดที่มันสร้างขึ้นมาให้ด้วย ทำให้ประหยัดเวลาที่จะอ่านเอกสารที่เกี่ยวข้องซึ่งหลายครั้งอยู่กระจัดกระจายกันไป</p>\n<p>ผมตั้งโจทย์การเขียนโปรแกรมเป็นเว็บอันหนึ่ง โดยต้องการให้แชตบอทเขียน API ที่คืนค่าเป็น JSON จากนั้นจึงเพิ่มเงื่อนไขเพิ่มเติมไปเรื่อยๆ เช่น</p>\n<ul>\n<li>เพิ่มคอนฟิกสำหรับเว็บผ่านทาง environment variable</li>\n<li>ให้เพิ่ม basic authentication ลงไปยัง route</li>\n<li>ทำให้ path หนึ่งของเว็บเป็นการ proxy ไปยังเซิร์ฟเวอร์ปลายทาง</li>\n<li>filter HTTP Header ที่ได้จากเซิร์ฟเวอร์ต้นทาง</li>\n</ul>\n<p>ผมใช้ทั้งสองตัวในเวอร์ชั่นฟรี ดังนั้นจึงไม่ได้ใช้ GPT-4</p>\n<h3>คำสั่งแรก โปรแกรมอย่างง่าย</h3>\n<p>ทั้ง Bard และ ChatGPT ได้รับ คือ <code>Write a flask application with a route /blognone_test which will return json {\"msg\": \"Hello Blognone\"}</code> ทั้งสองตัวสามารถเขียนโปรแกรมได้โดยไม่มีปัญหาใดๆ โดยทั้งสองตัวพยายามอธิบายวิธีการรันไว้ด้วย ความพิเศษสักหน่อยของ Bard คือมันพยายามบอกด้วยว่าเมื่อรันและเข้าเว็บด้วยเบราว์เซอร์แล้วจะเห็นผลอย่างไร</p>\n<pre><code>from flask import Flask, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"/blognone_test\")\ndef blognone_test():\n    return jsonify({\"msg\": \"Hello Blognone\"})\n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n</code></pre><h3>คำสั่งสอง เพิ่มคอนฟิก</h3>\n<p>คำสั่งต่อมาขอให้เปลี่ยน `/blognone_test เป็นค่าที่ได้รับจาก environment variable ชื่อว่า API_PATH</p>\n<blockquote><p>Make the route /blognone_test configurable by get the path from environment variable named \"API_PATH\"</p></blockquote>\n<p><img alt=\"No Description\" src=\"https://www.blognone.com/sites/default/files/externals/1f27778d81798126d4e19b5dc20d8643.png\" /></p>\n<p>คำสั่งแม้ว่าทั้งสองตัวจะตอบได้คล้ายกันมาก แต่ Bard ก็เริ่มแสดงอาการ ด้วยการลืม <code>import os</code> ไปเสียเฉยๆ ทำให้โค้ดรันไม่ได้ แต่เมื่อนำ error บรรทัดสุดท้ายไปแจ้ง Bard มันก็ตอบวิธีแก้ไขได้อย่างถูกต้อง</p>\n<h3>คำสั่งสาม เพิ่ม Basic Authentication</h3>\n<p>คำสั่งต่อมาสั่งเพียงสั้นๆ ว่า <code>Add basic authentication</code> เพื่อให้แชตบอตเพิ่มการล็อกอินก่อนจะเรียก API คำสั่งนี้ Bard เลือกใช้ flask_httpauth ขณะที่ ChatGPT เลือกใช้ flask_basicauth แต่โดยรวมโค้ดทั้งสองชุดสามารถทำงานได้ตามคำสั่ง แต่โค้ดของ Bard ยังคงลืม <code>import os</code> แม้เพิ่มสั่งแก้ไขไป และโค้ดของ ChatGPT นั้นไม่ใส่คอนฟิกที่สั่งไปในข้อที่แล้วมาด้วย</p>\n<h3>คำสั่งสี่ ทำตัวเป็นพรอกซี่ไปยัง httpbin.org</h3>\n<p>คำสั่งที่สี่ขอให้แก้ไขโค้ด <code>Make blognone_test proxy the request to https://httpbin.org/anything</code> เพื่อส่งต่อ request ไปยัง httpbin.org</p>\n<p>Bard ตีความการทำตัวเป็น proxy ได้แม่นกว่า ด้วยการพยายามส่งค่า header ทั้งหมดไปยังเซิร์ฟเวอร์ต้นทางด้วย อย่างไรก็ดี โค้ดที่สร้างออกมานั้นกลับใช้ออปเจกต์ request ของ flask ผิดพลาด Bard พยายาม copy ด้วยฟังก์ชั่น <code>copy()</code> ตรงๆ แต่กลับใช้งานไม่ได้ และเมื่อนำ error ไปวาง Bard ก็พยายามเปลี่ยนไปใช้ <code>to_dict()</code> ซึ่งรันไม่ได้เช่นกัน แต่เมื่อนำ error ไปวางรอบที่สอง Bard ก็แก้ไขจนโค้ดทำงานได้</p>\n<p>ChatGPT สร้างโค้ดที่ไม่ได้ส่ง header ไปยัง httpbin แต่กลับสร้าง header ใหม่ทั้งหมด อย่างไรก็ดีมันส่ง arguments ไปด้วย ทำให้อาจจะถือว่าชนะบางส่วน</p>\n<h3>ChatGPT ยังดีกว่า แต่ Bard ตามมาใกล้แล้ว</h3>\n<p>การทดสอบครั้งนี้เป็นเพียงส่วนหนึ่งของการใช้งาน โดยรวมแล้วประสบการณ์มักคล้ายๆ แบบนี้ Bard มีแนวโน้มว่าจะสร้างโค้ดผิดพลาดจนถึงกับรันไม่ได้อยู่เสมอๆ หากสั่งคำสั่งซับซ้อนไปบ้าง และ ChatGPT นั้นสามารถสร้างโค้ดที่ \"รันได้\" ตามคำสั่งที่ซับซ้อนมากกว่าพอสมควร แม้ว่าหากใส่คำสั่งที่ซับซ้อนเกินไปก็จะมีความผิดพลาด หรือบางครั้งก็แก้ไขโค้ดโดยทิ้งบางฟีเจอร์ที่สั่งไว้ก่อนหน้าออกไปเสียเฉยๆ</p>\n<p>อาการหลอน (hallucination) ยังคงพบได้เรื่อยๆ ในแชตบอตทั้งสองตัว เช่น หากถามถึง Flask extensions โดยขอจำนวนดาวใน GitHub ด้วย Bard ก็จะแสดงตารางสวยงาม แต่ตัวเลขกลับเกินกว่าจำนวนดาวจริงๆ ของแต่ละโครงการไปมาก ChatGPT ตอบได้ใกล้เคียงกว่าแต่ก็เป็นข้อมูลเก่าตั้งแต่ปี 2021</p>\n<p>โดยทั่วไปแล้ว ทั้งสองตัวสามารถใช้งานช่วยเหลือระหว่างการเขียนโปรแกรมได้ โดยเฉพาะการเรียนเฟรมเวิร์คหรือภาษาใหม่ๆ ที่ผู้เขียนยังไม่ชินว่ากระบวนการแต่ละอย่างทำอย่างไรบ้าง หากเป็นตัวอย่างที่ง่ายพอก็มักจะได้คำตอบที่ตรงประเด็นพร้อมคำอธิบายที่ชัดเจน แต่ควรตระหนักว่าหากคำสั่งซับซ้อนขึ้น หรือหากเฟรมเวิร์คที่ใช้ไม่เป็นที่นิยมนัก แชตบอตทั้งสองตัวก็มักจะทำงานผิดพลาดได้ง่ายขึ้น</p>\n<p>โค้ดที่ได้จากการทดสอบนี้อยู่ใน <a href=\"https://gist.github.com/lewcpe/9feeff9bd82b50911b599302aab1e3b6\">GitHub Gist</a></p>\n</div></div></div><div><div>Topics: </div><div><div><a href=\"/topics/artificial-intelligence\">Artificial Intelligence</a></div><div><a href=\"/topics/bard\">Bard</a></div><div><a href=\"/topics/chatgpt\">ChatGPT</a></div><div><a href=\"/topics/programming\">Programming</a></div></div></div>","author":"lew","siteTitle":"Blognone","siteHash":"ededadcf18490b3937e7dd89ebe8c00dc129addbdf1ebe4aff1f458146693da0","entryHash":"6fbca213f3b52a3d22036874db475b26b9ae465a6e8312bd734ca22f948a52a8","category":"Thai"}