{"title":"AWS Step Functions Workflow Studio is now available in AWS Application Composer","link":"https://aws.amazon.com/blogs/aws/aws-step-functions-workflow-studio-is-now-available-in-aws-application-composer/","date":1701147537000,"content":"<p>Today, we’re announcing that <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/workflow-studio.html\">AWS Step Functions Workflow Studio</a> is now available in <a href=\"https://aws.amazon.com/application-composer/\">AWS Application Composer</a>. This new integration brings together the development of workflows and application resources into a unified visual infrastructure as code (IaC) builder.</p> \n<p>Now, you can have a seamless transition between authoring workflows with AWS Step Functions Workflow Studio and defining resources with AWS Application Composer. This announcement allows you to create and manage all resources at any stage of your development journey. You can visualize the full application in AWS Application Composer, then zoom into the workflow details with AWS Step Functions Workflow Studio—all within a single interface.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-0.jpg\" width=\"2489\" height=\"1470\" /></p> \n<p><span><strong>Seamlessly build workflow and modern application</strong></span><br /> To help you design and build modern applications, we launched <a href=\"https://aws.amazon.com/blogs/aws/aws-application-composer-now-generally-available-visually-build-serverless-applications-quickly/\">AWS Application Composer</a> in March 2023. With AWS Application Composer, you can use a visual builder to compose and configure serverless applications from AWS services backed by deployment-ready IaC.</p> \n<p>In various use cases of building modern applications, you may also need to orchestrate microservices, automate mission-critical business processes, create event-driven applications that respond to infrastructure changes, or build machine learning (ML) pipelines. To solve these challenges, you can use AWS Step Functions, a fully managed service that makes it easier to coordinate distributed application components using visual workflows. To simplify workflow development, in 2021 we introduced <a href=\"https://aws.amazon.com/blogs/aws/new-aws-step-functions-workflow-studio-a-low-code-visual-tool-for-building-state-machines/\">AWS Step Functions Workflow Studio</a>, a low-code visual tool for rapid workflow prototyping and development across 12,000+ API actions from over 220 AWS services.</p> \n<p>While AWS Step Functions Workflow Studio brings simplicity to building workflows, customers that want to deploy workflows using IaC had to manually define their state machine resource and migrate their workflow definitions to the IaC template.</p> \n<p><span><strong>Better together: AWS Step Functions Workflow Studio in AWS Application Composer</strong></span><br /> With this new integration, you can now design AWS Step Functions workflows in AWS Application Composer using a drag-and-drop interface. This accelerates the path from prototyping to production deployment and iterating on existing workflows.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/08/2023-appcomposersfn-0.gif\" width=\"1440\" height=\"694\" /></p> \n<p>You can start by composing your modern application with AWS Application Composer. Within the canvas, you can add a workflow by adding an AWS Step Functions state machine resource. This new capability provides you with the ability to visually design and build a workflow with an intuitive interface to connect workflow steps to resources.</p> \n<p><span><strong>How it works</strong></span><br /> Let me walk you through how you can use AWS Step Functions Workflow Studio in AWS Application Composer. For this demo, let’s say that I need to improve handling e-commerce transactions by building a workflow and integrating with my existing serverless APIs.</p> \n<p>First, I navigate to AWS Application Composer. Because I already have an existing project that includes application code and IaC templates from AWS Application Composer, I don’t need to build anything from scratch.</p> \n<p>I open the menu and select <strong>Project folder</strong> to open the files in my local development machine.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-1.jpg\" width=\"2560\" height=\"877\" /></p> \n<p>Then, I select the path of my local folder, and AWS Application Composer automatically detects the IaC template that I currently have.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-2.jpg\" width=\"1920\" height=\"968\" /></p> \n<p>Then, AWS Application Composer visualizes the diagram in the canvas. What I really like about using this approach is that AWS Application Composer activates <a href=\"https://docs.aws.amazon.com/application-composer/latest/dg/reference-features-local-sync.html\">Local sync</a> mode, which automatically syncs and saves any changes in IaC templates into my local project.</p> \n<p>Here, I have a simple serverless API running on Amazon API Gateway, which invokes an AWS Lambda function and integrates with Amazon DynamoDB.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-3.jpg\" width=\"2560\" height=\"1187\" /></p> \n<p>Now, I’m ready to make some changes to my serverless API. I configure another route on Amazon API Gateway and add AWS Step Functions state machine to start building my workflow.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-4.jpg\" width=\"2560\" height=\"1076\" /></p> \n<p>When I configure my Step Functions state machine, I can start editing my workflow by selecting <strong>Edit in Workflow Studio</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-5.jpg\" width=\"2560\" height=\"1478\" /></p> \n<p>This opens Step Functions Workflow Studio within the AWS Application Composer canvas. I have the same experience as Workflow Studio in the AWS Step Functions console. I can use the canvas to add actions, flows , and patterns into my Step Functions state machine.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-6.jpg\" width=\"2560\" height=\"1202\" /></p> \n<p>I start building my workflow, and here’s the result that I exported using <strong>Export PNG</strong> image in Workflow Studio.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-7.jpg\" width=\"711\" height=\"1070\" /></p> \n<p>But here’s where this new capability really helps me as a developer. In the workflow definition, I use various AWS resources, such as AWS Lambda functions and Amazon DynamoDB. If I need to reference the AWS resources I defined in AWS Application Composer, I can use an AWS CloudFormation substitution.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-8.jpg\" width=\"2560\" height=\"1186\" /></p> \n<p>With AWS CloudFormation substitutions, I can add a substitution using an AWS CloudFormation convention, which is a dynamic reference to a value that is provided in the IaC template. I am using a placeholder substitution here so I can map it with an AWS resource in the AWS Application Composer canvas in a later step.</p> \n<p>I can also define the AWS CloudFormation substitution for my Amazon DynamoDB table.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-9.jpg\" width=\"2560\" height=\"989\" /></p> \n<p>At this stage, I’m happy with my workflow. To review the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon States Language</a> as my AWS Step Functions state machine definition, I can also open the <strong>Code</strong> tab. Now I don’t need to manually copy and paste this definition into IaC templates. I only need to save my work and choose <strong>Return to Application Composer</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-10-1024x492.jpg\" width=\"1024\" height=\"492\" /></p> \n<p>Here, I can see that my AWS Step Functions state machine is updated both in the visual diagram and in the state machine definition section.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-11-1024x594.jpg\" width=\"1024\" height=\"594\" /></p> \n<p>If I scroll down, I will find AWS Cloudformation <strong>Definition Substitutions</strong> for resources that I defined in Workflow Studio. I can manually replace the mapping here, or I can use the canvas.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/2023-appcomposer-stepfunctions-14-1-1024x610.jpg\" width=\"1024\" height=\"610\" /></p> \n<p>To use the canvas, I simply drag and drop the respective resources in my Step Functions state machine and in the Application Composer canvas. Here, I connect the <code>Inventory Process</code> task state with a new AWS Lambda function. Also, my Step Functions state machine tasks can reference existing resources.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-12-1024x471.jpg\" width=\"1024\" height=\"471\" /></p> \n<p>When I choose <strong>Template</strong>, the state machine definition is integrated with other AWS Application Composer resources. With this IaC template I can easily deploy using AWS Serverless Application Model Command Line Interface (AWS SAM CLI) or CloudFormation.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/2023-appcomposer-stepfunctions-13-1024x446.jpg\" width=\"1024\" height=\"446\" /></p> \n<p><span><strong>Things to know<br /> </strong></span>Here is some additional information for you:</p> \n<p><strong>Pricing</strong> – The AWS Step Functions Workflow Studio in AWS Application Composer comes at no additional cost.</p> \n<p><strong>Availability</strong> – This feature is available in all AWS Regions where Application Composer is available.</p> \n<p>AWS Step Functions Workflow Studio in AWS Application Composer provides you with an easy-to-use experience to integrate your workflow into modern applications. Get started and learn more about this feature on the <a href=\"https://docs.aws.amazon.com/application-composer/latest/dg/using-composer-services-sf.html?trk=fb5df19e-9e79-4747-a1f5-bea0e4af88ae&amp;sc_channel=el\">AWS Application Composer</a> page.</p> \n<p>Happy building!<br /> — <a href=\"https://www.linkedin.com/in/donnieprakoso\">Donnie</a></p>","author":"Donnie Prakoso","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"3b334de3fc04fda0b18b5bcb2bba9d61d95b79f5905de2e2c8c686417de82cf2","category":"Tech"}