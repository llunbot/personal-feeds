{"title":"Enhance real-time applications with AWS AppSync Events data source integrations","link":"https://aws.amazon.com/blogs/aws/enhance-real-time-applications-with-aws-appsync-events-data-source-integrations/","date":1745528620000,"content":"<p>Today, we are announcing that <a href=\"https://aws.amazon.com/appsync/product-details/#AWS_AppSync_Events\">AWS AppSync Events</a> now supports data source integrations for channel namespaces, enabling developers to create more sophisticated real-time applications. With this new capability you can associate <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> functions, <a href=\"https://aws.amazon.com/dynamodb/\">Amazon DynamoDB</a> tables, <a href=\"https://aws.amazon.com/rds/aurora/\">Amazon Aurora</a> databases, and other data sources with channel namespace handlers. With AWS AppSync Events, you can build rich, real-time applications with features like data validation, event transformation, and persistent storage of events.</p> \n<p>With these new capabilities, developers can create sophisticated event processing workflows by transforming and filtering events using Lambda functions or save batches of events to DynamoDB using the new <a href=\"https://docs.aws.amazon.com/appsync/latest/eventapi/runtime-reference.html\">AppSync_JS</a> batch utilities. The integration enables complex interactive flows while reducing development time and operational overhead. For example, you can now automatically persist events to a database without writing complex integration code.</p> \n<p><b><u>First look at data source integrations</u></b></p> \n<p>Let’s walk through how to set up data source integrations using the <a href=\"https://aws.amazon.com/console/\">AWS Management Console</a>. First, I’ll navigate to AWS AppSync in the console and select my Event API (or create a new one).</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/04/16/appsync-events-namespaces-01-1-1024x613.png\" alt=\"Screenshot of the AWS Console\" width=\"1024\" height=\"613\" /></p> \n<p><span><strong>Persisting event data directly to DynamoDB</strong></span></p> \n<p>There are multiple kinds of data source integrations to choose from. For this first example, I’ll create a DynamoDB table as a data source. I’m going to need a DynamoDB table first, so I head over to DynamoDB in the console and create a new table called <code>event-messages</code>. For this example, all I need to do is create the table with a Partition Key called <code>id</code>. From here, I can click <strong>Create table</strong> and accept the default table configuration before I head back to AppSync in the console.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/04/16/appsync-events-namespaces-02-1024x533.png\" alt=\"Screenshot of the AWS Console for DynamoDB\" width=\"1024\" height=\"533\" /></p> \n<p>Back in the <a href=\"https://aws.amazon.com/console/\">AppSync console</a>, I return to the Event API I set up previously, select <strong>Data Sources</strong> from the tabbed navigation panel and click the <strong>Create data source</strong> button.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/04/16/appsync-events-namespaces-03-1024x380.png\" alt=\"Screenshot of the AWS Console\" width=\"1024\" height=\"380\" /></p> \n<p>After giving my Data Source a name, I select <strong>Amazon DynamoDB</strong> from the <strong>Data source</strong> drop down menu. This will reveal configuration options for DynamoDB.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/04/16/appsync-events-namespaces-04-2-1024x701.png\" alt=\"Screenshot of the AWS Console\" width=\"1024\" height=\"701\" /></p> \n<p>Once my data source is configured, I can implement the handler logic. Here’s an example of a Publish handler that persists events to DynamoDB:</p> \n<pre><code>import * as ddb from '@aws-appsync/utils/dynamodb'\nimport { util } from '@aws-appsync/utils'\n\nconst TABLE = 'events-messages'\n\nexport const onPublish = {\n  request(ctx) {\n    const channel = ctx.info.channel.path\n    const timestamp = util.time.nowISO8601()\n    return ddb.batchPut({\n      tables: {\n        [TABLE]: ctx.events.map(({id, payload}) =&gt; ({\n          channel, id, timestamp, ...payload,\n        })),\n      },\n    })\n  },\n  response(ctx) {\n    return ctx.result.data[TABLE].map(({ id, ...payload }) =&gt; ({ id, payload }))\n  },\n}</code></pre> \n<p>To add the handler code, I go the tabbed navigation for <strong>Namespaces</strong> where I find a new <strong>default</strong> namespace already created for me. If I click to open the default namespace, I find the button that allows me to add an <strong>Event handler</strong> just below the configuration details.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/04/16/appsync-events-namespaces-05-1024x376.png\" alt=\"Screenshot of the AWS Console\" width=\"1024\" height=\"376\" /></p> \n<p>Clicking on <strong>Create event handlers</strong> brings me to a new dialog where I choose <strong>Code with data source</strong> as my configuration, and then select the DynamoDB data source as my publish configuration.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/04/16/appsync-events-namespaces-06-1024x593.png\" alt=\"Screenshot of the AWS Console\" width=\"1024\" height=\"593\" /></p> \n<p>After saving the handler, I can test the integration using the built-in testing tools in the console. The default values here should work, and as you can see below, I’ve successfully written two events to my DynamoDB table.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/04/16/appsync-events-namespaces-07-1024x735.png\" alt=\"Screenshot of the AWS Console\" width=\"1024\" height=\"735\" /></p> \n<p>Here’s all my messages captured in DynamoDB!</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/04/16/appsync-events-namespaces-08-1024x456.png\" alt=\"Screenshot of the AWS Console\" width=\"1024\" height=\"456\" /></p> \n<p><span><strong>Error handling and security</strong></span></p> \n<p>The new data source integrations include comprehensive error handling capabilities. For synchronous operations, you can return specific error messages that will be logged to <a href=\"https://aws.amazon.com/cloudwatch/\">Amazon CloudWatch</a>, while maintaining security by not exposing sensitive backend information to clients. For authorization scenarios, you can implement custom validation logic using Lambda functions to control access to specific channels or message types.</p> \n<p><span><strong>Available now</strong></span></p> \n<p>AWS AppSync Events data source integrations are available today in all AWS Regions where AWS AppSync is available. You can start using these new features through the AWS AppSync console, <a href=\"https://aws.amazon.com/cli/\">AWS command line interface</a> (CLI), or <a href=\"https://aws.amazon.com/developer/tools/\">AWS SDK</a>s. There is no additional cost for using data source integrations – you pay only for the underlying resources you use (such as Lambda invocations or DynamoDB operations) and your existing AppSync Events usage.</p> \n<p>To learn more about AWS AppSync Events and data source integrations, visit the <a href=\"https://docs.aws.amazon.com/appsync/latest/eventapi/event-api-welcome.html\">AWS AppSync Events documentation</a> and get started building more powerful real-time applications today.</p> \n<a href=\"https://linktr.ee/micahwalter\">— Micah;</a> \n<hr /> \n<p>How is the News Blog doing? Take this <a href=\"https://amazonmr.au1.qualtrics.com/jfe/form/SV_eyD5tC5xNGCdCmi\">1 minute survey</a>!</p> \n<p><em>(This <a href=\"https://amazonmr.au1.qualtrics.com/jfe/form/SV_eyD5tC5xNGCdCmi\">survey</a> is hosted by an external company. AWS handles your information as described in the <a href=\"https://aws.amazon.com/privacy/?trk=4b29643c-e00f-4ab6-ab9c-b1fb47aa1708&amp;sc_channel=blog\">AWS Privacy Notice</a>. AWS will own the data gathered via this survey and will not share the information collected with survey respondents.)</em></p>","author":"Micah Walter","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"245411b6a3a93ed059375128d75ad2a36433858eef7e054f5461a8fe7e195150","category":"Tech"}