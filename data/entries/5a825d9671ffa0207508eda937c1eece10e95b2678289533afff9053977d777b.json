{"title":"Vault 1.14 brings ACME for PKI, AWS roles, and more improvements","link":"https://www.hashicorp.com/blog/vault-1-14-brings-acme-for-pki-aws-roles-and-more-improvements","date":1687449600000,"content":"<p>HashiCorp is pleased to announce the general availability of <a href=\"https://developer.hashicorp.com/vault/downloads\">Vault 1.14</a>. HashiCorp Vault provides secrets management, data encryption, identity management, and other workflow improvements for applications on any infrastructure.</p>\n\n<p>Vault 1.14 focuses on Vault’s core secrets workflows as well as team workflows, integrations, and visibility. Key additions in this release include:</p>\n\n<ul>\n<li>Vault Secrets Operator (GA)</li>\n<li>ACME PKI</li>\n<li>OpenLDAP secrets engine</li>\n<li>Multi-issuer functionality for the Vault Terraform provider</li>\n<li>Vault Agent decoupling</li>\n<li>Replication improvements</li>\n<li>Licensing utilization improvements</li>\n<li>User experience improvements for sidebars, banners, and PKI</li>\n<li>Environmental variable injection with Vault Agent</li>\n<li>AWS static secrets roles</li>\n<li>MongoDB Atlas secrets engine X.509 auth support</li>\n</ul>\n\n<p>Let’s take a closer look at each of these updates:</p>\n\n<h2>Vault Secrets Operator (GA)</h2>\n\n<p>The <a href=\"https://developer.hashicorp.com/vault/docs/platform/k8s/vso\">Vault Secrets Operator</a> connects Vault secrets directly into native Kubernetes secrets, freeing application developers to focus on application code while returning control over secrets to your security and operations teams.</p>\n\n<p>The Vault Secrets Operator insulates the application from any complexity of interacting with Vault. The application consumes these secrets as native Kubernetes Secrets and the Vault Secrets Operator maintains them within Vault as the source of truth.</p>\n\n<p>As secrets change in Vault, the Vault Secrets Operator can be configured to roll the affected pods to pick up the new secrets without having to modify applications. This centralizes control and simplifies the <a href=\"https://www.hashicorp.com/blog/why-we-need-dynamic-secrets\">transition from static to dynamic secrets</a>. The Vault Secrets Operator also reduces footprint and compute load by running at the cluster level in Kubernetes.</p>\n\n<p>This approach presents a native experience for application developers and platform operations team. It returns control over secrets back to the platform security team, helping them manage secrets, update policies, control access in a consistent way, and report on access events through central auditing.</p>\n\n<h2>PKI ACME support</h2>\n\n<p>Automated Certificate Management Environment (ACME) is a protocol that automates the creation, issuance, and renewal of certificates without human interaction. Prior to Vault 1.14, organizations interested in ACME for their PKI could not leverage Vault or would be dependent on manual processes, Vault APIs, or other alternatives to automate certificate lifecycle management. </p>\n\n<p>Vault 1.14 introduces ACME to help customers automate certificate lifecycle management using industry-standard tooling for private PKI needs, eliminating dependency on manual processes or alternate products. Standard ACME clients, such as <a href=\"https://dwdraju.medium.com/securing-hashicorp-vault-with-lets-encrypt-ssl-19cad1eb294\">Certbot</a>, CNCF's Kubernetes cert-manager, can automate certificate requests from Vault without needing to know Vault APIs or auth mechanisms.</p>\n\n<h2>OpenLDAP secrets engine</h2>\n\n<p>Early versions of Vault added support for the Active Directory (AD) secrets engine and management of service accounts beyond AD, leading to the development and release of the OpenLDAP secrets engine today in Vault 1.14.</p>\n\n<p>In past versions of Vault, support for AD and LDAP were in independent workstreams. Vault 1.14 merges features from the AD secrets engine into the OpenLDAP secrets engine. This enhancement reduces the need for ongoing maintenance of existing features on both engines and eliminates separate mounts by users who want to use non-overlapping features from both engines.</p>\n\n<p>The AD secrets engine will be deprecated, and it will be updated only for security-related fixes until its removal. Going forward, new features will be added to OpenLDAP secrets engine. The transition of deprecation to removal will occur over an extended period of time, longer than Vault's 24 month schedule, to allow more time for users to migrate to the OpenLDAP secrets engine.</p>\n\n<h2>Multi-issuer functionality added to Vault Terraform provider</h2>\n\n<p>Multi-issuer functionality was introduced to the PKI secrets engine in <a href=\"https://developer.hashicorp.com/vault/api-docs/secret/pki#notice-about-new-multi-issuer-functionality\">Vault 1.11</a>. While the long term sustainability and feature parity of the Terraform Vault provider has been improving, it is still a few versions behind Vault on some key features, including multi-issuer functionality. In some use cases this has led to users being unable to configure multi-issuers using the Vault provider. Vault 1.14 extends multi-issuer functionality so customers can take advantage of automation provided by the Terraform Vault provider for Vault PKI. </p>\n\n<h2>Vault Agent decoupling</h2>\n\n<p>The <a href=\"https://developer.hashicorp.com/vault/docs/agent\">Vault Agent</a> supports two primary use cases: template and proxy. <a href=\"https://developer.hashicorp.com/vault/docs/agent/template\">Templating </a>involves using Vault Agent to abstract the Vault API calls from an application requiring secrets so the application can read the secrets from a file generated by Vault Agent.</p>\n\n<p>The Vault Agent also supports another use case, called <a href=\"https://developer.hashicorp.com/vault/docs/agent/apiproxy\">API proxying</a>. This use case supports requests that will ultimately be forwarded to Vault itself. Unlike the templating use case, there is no API abstraction, and clients must know how to use Vault’s APIs. We do, however, offer caching capabilities (currently limited to a small subset of requests) to reduce the load on Vault when requests are sent through the proxy this way. </p>\n\n<p>Vault 1.14 decouples these two modes so customers can run Vault Agent for templating or Vault Proxy. We plan to deprecate support for running in both modes by Vault 1.17. New features, such as static secret caching, are scheduled to be added to Vault Proxy in future releases.</p>\n\n<h2>Replication improvements</h2>\n\n<p>Vault 1.14 resolves a race condition that could result in tokens being created on a previous disaster recovery (DR) primary. This was due to the sscGenCounter key being reverted by <a href=\"https://developer.hashicorp.com/vault/docs/enterprise/replication\">DR replication</a>. To learn more, please refer to the <a href=\"https://developer.hashicorp.com/vault/tutorials/new-release\">Vault 1.14 release notes</a>.</p>\n\n<h2>Licensing utilization improvements</h2>\n\n<p>Vault 1.14 includes features to improve clarity for license utilization. To learn more about these features and potential impacts to customers, please see our <a href=\"https://www.datocms-assets.com/2885/1684160815-hashicorp_licenseutilizationreportingfaq.pdf\">license utilization reporting reporting FAQ</a>.</p>\n\n<h2>User experience improvements</h2>\n\n<p>Vault 1.14 introduces a number of user experience upgrades:</p>\n\n<p><strong>Sidebar-based navigation:</strong> Vault 1.14 implements a new sidebar-based navigation system in Vault’s GUI using the unified <a href=\"https://helios.hashicorp.design/\">HashiCorp Design System</a> to reorganize the navigation. This feature streamlines HCP Vault and Vault GUIs, removes some UX challenges, clarifies system status, and makes features more discoverable. </p>\n\n<p><strong>Dismissable banners:</strong> We’ve found that customers can sometimes be confused when they see banners in Vault’s GUI, which can lead to unnecessary support requests regarding the licensing banner. VaultVault 1.14 allows users to disable banners.</p>\n\n<p><strong>PKI user experience:</strong> Customers using the Vault PKI UI had to perform numerous manual steps for <a href=\"https://www.hashicorp.com/blog/certificate-management-with-vault\">managing X.509 certificates</a> and had no support for non-disruptive PKI root certificate rotation. Vault 1.14 improves the PKI workflow to make it easier to manage certificates. It includes an intuitive configuration and reasonable defaults for workflows, metadata, issuer info, cross signing, and multi-issuers.</p>\n\n<h2>Environmental variable injection with Vault Agent</h2>\n\n<p>In recent years, the industry has been moving in the direction of <a href=\"https://12factor.net/\">12-factor applications</a>, which consume their configurations <a href=\"https://12factor.net/config\">from environmental variables</a>. A typical 12-factor service starts by reading all environmental variables and using them to initialize connections to various databases, message queues, and other services. For 12-factor applications, secrets (such as database credentials, certificates, and API keys) can be seen as special configuration entries loaded through environment variables.</p>\n\n<p>Vault 1.14 introduces easy-to-use, first-class support for environmental variable injection with Vault Agent. This support includes three elements:</p>\n\n<ol>\n<li>The Vault Agent provides secrets as environmental variables to a command</li>\n<li>A Helper command generates the agent configuration</li>\n<li>An agent can restart the child process with static or dynamic secret updates</li>\n</ol>\n\n<h2>AWS static secret roles</h2>\n\n<p>Historically, <a href=\"https://developer.hashicorp.com/vault/docs/auth/aws\">AWS secrets engine</a> has not managed static users and has created new users every time credentials are read from Vault, making user management difficult with respect to hard limits and time-to-live (TTL) considerations. Vault 1.14 includes support for static users via the AWS secrets engine. Support for static roles includes the rotation frequency at which Vault must change the associated IAM user’s access keys.</p>\n\n<h2>Upgrade details</h2>\n\n<p>This release also includes more new features, workflow enhancements, general improvements, and bug fixes. All of these updates can be found in the <a href=\"https://github.com/hashicorp/vault/blob/master/CHANGELOG.md\">Vault 1.14 changelog</a>. Please visit the <a href=\"https://learn.hashicorp.com/collections/vault/new-release\">Vault release highlights</a> page for step-by-step tutorials demonstrating the new features.</p>\n\n<p>As always, we recommend upgrading and testing new releases in an isolated environment. If you experience any issues, please report them on the <a href=\"https://github.com/hashicorp/vault/issues\">Vault GitHub issue tracker</a> or post to the <a href=\"https://discuss.hashicorp.com/c/vault/30\">Vault discussion forum</a>. As a reminder, if you believe you have found a security issue in Vault, please responsibly disclose it by emailing <a href=\"mailto:security@hashicorp.com\">security@hashicorp.com</a> — do not use the public issue tracker. For more information, please consult <a href=\"https://www.hashicorp.com/security\">our security policy and our PGP key</a>.</p>\n\n<p>For more information about Vault Enterprise, visit <a href=\"https://www.hashicorp.com/products/vault\">hashicorp.com/products/vault</a>.</p>\n","author":"Rich Dubose","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"5a825d9671ffa0207508eda937c1eece10e95b2678289533afff9053977d777b","category":"Tech"}