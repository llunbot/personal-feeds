{"title":"Useful CSS Tips And Techniques","link":"https://smashingmagazine.com/2024/06/css-tips-and-techniques/","date":1717758000000,"content":"<p>If you’ve been in the web development game for longer, you might recall the days when CSS was utterly confusing and you had to come up with hacks and workarounds to make things work. Luckily, these days are over and new features such as <a href=\"https://ishadeed.com/article/css-container-query-guide/\">container queries</a>, cascade layers, <a href=\"https://css-irl.info/css-nesting-is-here/\">CSS nesting</a>, the <code>:has</code> selector, grid and subgrid, and even <a href=\"https://web.dev/blog/color-spaces-and-functions\">new color spaces</a> make CSS <strong>more powerful than ever before</strong>.</p>\n<p>And the innovation doesn’t stop here. We also might have <a href=\"https://developer.chrome.com/docs/css-ui/style-queries\">style queries</a> and perhaps even <a href=\"https://ishadeed.com/article/css-state-queries/\">state queries</a>, along with <a href=\"https://cloudfour.com/thinks/responsive-headlines-are-about-to-get-awesome/\">balanced text-wrapping</a> and <a href=\"https://developer.chrome.com/blog/tether-elements-to-each-other-with-css-anchor-positioning\">CSS anchor positioning</a> coming our way.</p>\n<p>With all these <strong>lovely new CSS features</strong> on the horizon, in this post, we dive into the world of CSS with a few helpful techniques, a deep-dive into specificity, hanging punctuation, and self-modifying CSS variables. We hope they’ll come in handy in your work.</p>\nCascade And Specificity Primer\n<p>Many fear the cascade and specificity in CSS. However, the concept isn’t as hard to get to grips with as one might think. To help you get more comfortable with <strong>two of the most fundamental parts of CSS</strong>, Andy Bell wrote a wonderful <a href=\"https://piccalil.li/blog/a-primer-on-the-cascade-and-specificity\">primer on the cascade and specificity</a>.</p>\n<p><img src=\"https://files.smashing.media/articles/css-tips-and-techniques/cascade-opt.png\" /></p>\n<p>The guide explains how certain CSS property types will be prioritized over others and dives deeper into <strong>specificity scoring</strong> to help you assess how likely it is that the CSS of a specific rule will apply. Andy uses practical examples to illustrate the concepts and simplifies the underlying mental model to make it easy to adopt and utilize. A power boost for your CSS skills.</p>\nTesting HTML With Modern CSS\n<p>Have you ever considered testing HTML with CSS instead of JavaScript? <strong>CSS selectors</strong> today are so powerful that it is actually possible to test for most kinds of HTML patterns using CSS alone. A proponent of the practice, Heydon Pickering summarized everything you need to know about <a href=\"https://heydonworks.com/article/testing-html-with-modern-css/\">testing HTML with CSS</a>, whether you want to test accessibility, uncover HTML bloat, or check the general usability.</p>\n<p><img src=\"https://files.smashing.media/articles/css-tips-and-techniques/testing-html-opt.png\" /></p>\n<p>As Heydon points out, testing with CSS has quite some benefits. Particularly if you work in the browser and prefer exploring <strong>visual regressions</strong> and inspector information over command line logs, testing with CSS could be for you. It also shines in situations where you don’t have direct access to a client’s stack: Just provide a test stylesheet, and clients can locate instances of bad patterns you have identified for them without having to onboard you to help them do so. Clever!</p>\nSelf-Modifying CSS Variables\n<p>The CSS spec for custom properties does not allow a <strong>custom property to reference itself</strong> — although there are quite some use cases where such a feature would be useful. To close the gap, Lea Verou <a href=\"https://github.com/w3c/csswg-drafts/issues/2864\">proposed an <code>inherit()</code> function</a> in 2018, which the CSSWG added to the specs in 2021. It hasn’t been edited-in yet, but Roman Komarov found a <a href=\"https://kizu.dev/self-modifying-variables/\">workaround</a> that makes it possible to start involving its behavior.</p>\n<p><img src=\"https://files.smashing.media/articles/css-tips-and-techniques/self-modifying-variables-opt.png\" /></p>\n<p>Roman’s approach uses container-style queries as a way to access the previous state of a custom property. It can be useful when you want to <strong>cycle through various hues</strong> without having a static list of values, to match the <code>border-radius</code> visually, or to nest menu lists, for example. The workaround is still strictly experimental (so do not use it in production!), but since it is likely that style queries will gain broad browser support before <code>inherit()</code>, it has great potential.</p>\nHanging Punctuation In CSS\n<p><code>hanging-punctuation</code> is a neat little CSS property. It extends punctuation marks such as <strong>opening quotes</strong> to cater to nice, clean blocks of text. And while it’s currently only supported in Safari, it doesn’t hurt to include it in your code, as the property is a perfect example of progressive enhancement: It leaves things as they are in browsers that don’t support it and adds the extra bit of polish in browsers that do.</p>\n<p><img src=\"https://files.smashing.media/articles/css-tips-and-techniques/hanging-punctuation-opt.png\" /></p>\n<p>Jeremy Keith noticed an <a href=\"https://adactio.com/journal/21027\">unintended side-effect</a> of <code>hanging-punctuation</code>, though. When you apply it globally, it’s also applied to form fields. So, if the text in a form field starts with a quotation mark or some other piece of punctuation, it’s pushed outside the field and hidden. Jeremy shares a fix for it: Add <code>input, textarea { hanging-punctuation: none; }</code> to prevent your quotation marks from disappearing. A small tip that can save you a lot of headaches.</p>\nFixing <code>aspect-ratio</code> Issues\n<p>The <code>aspect-ratio</code> property shines in fluid environments. It can handle anything from inserting a square-shaped <code>&lt;div&gt;</code> to matching the 16:9 size of a <code>&lt;video&gt;</code>, without you thinking in exact dimensions. And most of the time, it does so flawlessly. However, there are some <strong>things that can break <code>aspect-ratio</code></strong>. Chris Coyier takes a closer look at three <a href=\"https://frontendmasters.com/blog/things-that-can-break-aspect-ratio-in-css/\">reasons why your <code>aspect-ratio</code> might not work as expected</a>.</p>\n<p><img src=\"https://files.smashing.media/articles/css-tips-and-techniques/breaking-aspect-ratio-opt.png\" /></p>\n<p>As Chris explains, one potential breakage is setting both dimensions — which might seem obvious, but it can be confusing if one of the dimensions is set from somewhere you didn’t expect. Stretching and content that forces height can also lead to unexpected results. A great overview of what to look out for when <code>aspect-ratio</code> breaks.</p>\nMasonry Layout With CSS\n<p>CSS Grid has taken layouts on the web to the next level. However, as powerful as CSS is today, not every layout that can be imagined is feasible. Masonry layout is one of those things that can’t be accomplished with CSS alone. To change that, the CSS Working Group is <strong>asking for your help</strong>.</p>\n<p><img src=\"https://files.smashing.media/articles/css-tips-and-techniques/masonry-layout-opt.png\" /></p>\n<p>There are currently <strong>two approaches</strong> in discussion at the CSS Working Group about how CSS should handle masonry-style layouts — and they are asking for insights from real-world developers and designers to find the best solution.</p>\n<p>The first approach would expand CSS Grid to include masonry, and the second approach would be to introduce a masonry layout as a <code>display: masonry</code> display type. Jen Simmons summarized <a href=\"https://webkit.org/blog/15269/help-us-invent-masonry-layouts-for-css-grid-level-3/\">what you need to know about the ongoing debate</a> and how you can contribute your thoughts on which direction CSS should take.</p>\n<p>Before you come to a conclusion, also be sure to read <a href=\"https://developer.chrome.com/blog/masonry\">Rachel Andrew’s post</a> on the topic. She explains why the Chrome team has concerns about implementing a masonry layout as a part of the CSS Grid specification and clarifies what the alternate proposal enables.</p>\nBoost Your CSS Skills\n<p>If you’d like to dive deeper into CSS, we’ve got your back — with a few friendly events and SmashingConfs coming up this year:</p>\n<ul>\n<li><a href=\"https://smashingconf.com/online-workshops/workshops/modern-css-manuel-matuzovic/\">Advanced Modern CSS Masterclass</a> with Manuel Matuzović, <strong>June 24 – July 8</strong></li>\n<li><a href=\"https://smashingconf.com/freiburg-2024\">SmashingConf Freiburg 2024</a> 🇩🇪 — The Web, <strong>Sep 9–11</strong></li>\n<li><a href=\"https://smashingconf.com/ny-2024\">SmashingConf New York 2024</a> 🇺🇸 — Front-End &amp; UX, <strong>Oct 7–10</strong></li>\n<li><a href=\"https://smashingconf.com/antwerp-2024\">SmashingConf Antwerp 2024</a> 🇧🇪 — Design &amp; UX, <strong>Oct 28–31</strong></li>\n</ul>\n<p>We’d be absolutely delighted to welcome you to one of our special Smashing experiences — be it online or in person!</p>\nSmashing Weekly Newsletter\n<p><a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\"><img src=\"https://www.smashingmagazine.com/images/smashing-cat/cat-with-slippers.svg\" /></a>With our <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">weekly newsletter</a>, we aim to bring you <strong>useful, practical tidbits</strong> and share some of the helpful things that folks are working on in the web industry. There are <em>so</em> many talented folks out there working on brilliant projects, and we’d appreciate it if you could help spread the word and give them the credit they deserve!<br /><br />Also, <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">by subscribing</a>, there are no third-party mailings or hidden advertising, and your support really helps us pay the bills. ❤️</p>\n\n<p><em>Interested in sponsoring? Feel free to check out our <a href=\"https://smashingmagazine.com/provide/SmashingMag_SmashingConf_Partnership_2020.pdf\">partnership options</a> and <a href=\"mailto:advertising@smashingmagazine.com\">get in touch</a> with the team anytime — they’ll be sure to get back to you as soon as they can.</em></p>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"d24a5ac718109da1311daf0a4694271f747184cc678cfe3e77a7afbbbc0b7d05","category":"Tech"}