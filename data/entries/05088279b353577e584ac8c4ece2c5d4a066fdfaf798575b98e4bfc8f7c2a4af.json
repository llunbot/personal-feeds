{"title":"Amazon CodeCatalyst now supports GitLab and Bitbucket repositories, with blueprints and Amazon Q feature development","link":"https://aws.amazon.com/blogs/aws/amazon-codecatalyst-now-supports-gitlab-and-bitbucket-repositories-with-blueprints-and-amazon-q-feature-development/","date":1719509583000,"content":"<p>I’m happy to announce that we’re further integrating <a href=\"https://codecatalyst.aws/explore\">Amazon CodeCatalyst</a> with two popular code repositories: <a href=\"https://about.gitlab.com/\">GitLab</a> and <a href=\"https://bitbucket.org/product\">BitBucket</a>, in addition to <a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/extensions-github.html\">the existing integration with GitHub</a>. We bring <a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/extensions.html\">the same set of capabilities</a> that you use today on CodeCatalyst with <a href=\"https://github.com/\">GitHub</a> to <strong>GitLab.com and Bitbucket Cloud</strong>.</p> \n<p>Amazon CodeCatalyst is a unified software development and delivery service. It enables software development teams to quickly and easily plan, develop, collaborate on, build, and deliver applications on <a href=\"https://aws.amazon.com\">Amazon Web Services (AWS)</a>, reducing friction throughout the development lifecycle.</p> \n<p>The GitHub, GitLab.com, and Bitbucket Cloud repositories extension for CodeCatalyst simplifies managing your development workflow. The extension allows you to view and manage external repositories directly within CodeCatalyst. Additionally, you can store and manage workflow definition files alongside your code in external repositories while also creating, reading, updating, and deleting files in linked repositories from CodeCatalyst dev environments. The extension also triggers CodeCatalyst workflow runs automatically upon code pushes and when pull requests are opened, merged, or closed. Furthermore, it allows you to directly utilize source files from linked repositories and execute actions within CodeCatalyst workflows, eliminating the need to switch platforms and maximizing efficiency.</p> \n<p>But there’s more: starting today, <strong>you can create a CodeCatalyst project in a GitHub, GitLab.com, or Bitbucket Cloud repository from a blueprint</strong>, you can add a blueprint to an existing code base in a repository on any of those three systems, and you can also create custom blueprints stored in your external repositories hosted on GitHub, GitLab.com, or Bitbucket Cloud.</p> \n<p><a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/blueprints.html\">CodeCatalyst blueprints</a> help to speed up your developments. These pre-built templates provide a source repository, sample code, continuous integration and delivery (CI/CD) workflows, and integrated issue tracking to get you started quickly. Blueprints automatically update with best practices, keeping your code modern. IT leaders can create custom blueprints to standardize development for your team, specifying technology, access controls, deployment, and testing methods. And now, you can use blueprints even if your code resides in GitHub, GitLab.com, or Bitbucket Cloud.</p> \n<p><span><strong>Link your CodeCatalyst space with a git repository hosting service<br /> </strong></span>Getting started using any of these three source code repository providers is easy. As a <a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/spaces.html\">CodeCatalyst space</a> administrator, I select the space where I want to configure the extensions. Then, I select <strong>Settings</strong>, and in the <strong>Installed extensions</strong> section, I select <strong>Configure</strong> to link my CodeCatalyst space with my GitHub, GitLab.com, or Bitbucket Cloud account.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/06/2024-06-06_12-25-52.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/06/2024-06-06_12-25-52.png\" alt=\"Link CodeCatalyst with a git repository hosting service\" width=\"800\" height=\"462\" /></a></p> \n<p>This is a one-time operation for each CodeCatalyst space, but you might want to connect your space to multiple source providers’ accounts.</p> \n<p>When using GitHub, I also have to link my personal CodeCatalyst user to my GitHub user. Under my personal menu on the top right side of the screen, I select <strong>My settings</strong>. Then, I navigate down to the <strong>Personal connections</strong> section. I select <strong>Create</strong> and follow the instructions to authenticate on GitHub and link my two identities.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/06/2024-06-06_12-33-35.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/06/2024-06-06_12-33-35.png\" alt=\"Link personal CodeCatalyst account to your git hosting provider account\" width=\"800\" height=\"272\" /></a></p> \n<p>This is a one-time operation for each user in the CodeCatalyst space. This is only required when you’re using GitHub with blueprints.</p> \n<p><span><strong>Create a project from a blueprint and host it on GitHub, GitLab.com, and Bitbucket Cloud<br /> </strong></span>Let’s show you how to create a project in an external repository from a blueprint and later add other blueprints to this project. You can use any of the three git hosting providers supported by CodeCatalyst. In this demo, I chose to use GitHub.</p> \n<p>Let’s imagine I want to create a new project to implement an API. I start from a blueprint that implements an API with <a href=\"https://www.python.org/\">Python</a> and the <a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html\">AWS Serverless Application Model (AWS SAM)</a>. The blueprint also creates a CI <a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/workflow.html\">workflow</a> and an <a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/issues.html\">issue</a> management system. <strong>I want my project code to be hosted on GitHub</strong>. It allows me to directly use source files from my repository in GitHub and execute actions within CodeCatalyst workflows, eliminating the need to switch platforms.</p> \n<p>I start by selecting <strong>Create project</strong> on my CodeCatalyst space page. I select <strong>Start with a blueprint</strong> and select the <strong>CodeCatalyst blueprint</strong> or <strong>Space blueprint</strong> I want to use. Then, I select <strong>Next</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_18-21-48.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_18-21-48.png\" alt=\"Amazon CodeCatalyst create project from blueprint\" width=\"800\" height=\"555\" /></a></p> \n<p>I enter a name for my project. I open the <strong>Advanced</strong> section, and I select GitHub as <strong>Repository provider</strong> and my <strong>GitHub account</strong>. You can configure additional connections to GitHub by selecting <strong>Connect a GitHub account</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_18-23-10.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_18-23-10.png\" alt=\"Amazon CodeCatalyst - select a github account\" width=\"800\" height=\"677\" /></a></p> \n<p>The rest of the configuration depends on the selected blueprint. In this case, I chose the language version, the AWS account to deploy the project to, the name of the <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> function, and the name of the <a href=\"https://aws.amazon.com/cloudformation/\">AWS CloudFormation</a> stack.</p> \n<p>After the project is created, I navigate to my GitHub account, and I can see that a new repository has been created. It contains the code and resources from the blueprint.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_18-26-15.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_18-26-15.png\" alt=\"Amazon CodeCatalyst - creation f new GitHub repository\" width=\"800\" height=\"580\" /></a></p> \n<p><span><strong>Add a blueprint to an existing GitHub, GitLab.com, or Bitbucket Cloud project<br /> </strong></span>You can apply multiple blueprints in a project to incorporate functional components, resources, and governance to existing CodeCatalyst projects. Your projects can support various elements that are managed independently in separate blueprints. <a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/lifecycle-management-user.html\">The service documentation helps you learn more about lifecycle management with blueprints on existing projects</a>.</p> \n<p>I can now add a blueprint to an existing project in an external source code repository. Now that my backend API project has been created, I want to add a web application to my project.</p> \n<p>I navigate to the <strong>Blueprints</strong> section in the left-side menu, and I select the orange <strong>Add blueprint</strong> button on the top-right part of the screen.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/27/2024-06-27_11-12-41.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/27/2024-06-27_11-12-41.png\" alt=\"CodeCatalyst - add blue print to an existing project\" width=\"800\" height=\"231\" /></a></p> \n<p>I select the <strong>Single-page application</strong> blueprint and select <strong>Next</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_19-09-15.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_19-09-15.png\" width=\"800\" height=\"531\" /></a></p> \n<p>On the next screen, I make sure to select my GitHub connection, as I did when I created the project. I also fill in the required information for this specific template. On the right side of the screen, I review the proposed changes.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_19-19-00.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_19-19-00.png\" alt=\"CodeCatalyst - add a blueprint to a project in GitHub\" width=\"800\" height=\"526\" /></a></p> \n<p>Similarly, when using <a href=\"https://aws.amazon.com/about-aws/whats-new/2023/11/amazon-codecatalyst-enterprise-tier/\">CodeCatalyst Enterprise Tier</a>, <a href=\"https://aws.amazon.com/blogs/aws/amazon-codecatalyst-introduces-custom-blueprints-and-a-new-enterprise-tier/\">I can create my own custom blueprints</a> to share with my teammates or other groups within my organization. For brevity, I don’t share step-by-step instructions to do so in this post. For more information, see <a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/custom-blueprints.html\">Standardizing projects with custom blueprints</a> in the documentation.</p> \n<p>When CodeCatalyst finishes installing the new blueprint, I can see a second repository on GitHub.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_19-47-49.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/20/2024-05-20_19-47-49.png\" alt=\"Amazon CodeCatalyst - multiple repositories\" width=\"800\" height=\"285\" /></a></p> \n<p><strong><span>Single or multiple repository strategies<br /> </span></strong>When organizing code, you can choose between a single large repository, like a toolbox overflowing with everything, or splitting it into smaller, specialized ones for better organization. Single repositories simplify dependency management for tightly linked projects but can become messy at scale. Multiple repositories offer cleaner organization and improved security but require planning to manage dependencies between separate projects.</p> \n<p>CodeCatalyst lets you use the best strategy for your project. For more information, see the section <a href=\"https://docs.aws.amazon.com/codecatalyst/latest/userguide/source.html\">Store and collaborate on code with source repositories in CodeCatalyst</a> in the documentation.</p> \n<p>In the example I showed before, the blueprint I selected proposed to apply the second blueprint as a separate repository in GitHub. Depending on the blueprint you selected, the blueprint may propose that you create a separate repository or merge the new code in an existing repository. In the latter case, the blueprint will submit a pull request for you to merge into your repository.</p> \n<p><span><strong>Region and availability<br /> </strong></span>This new GitHub integration is available at no additional cost in the two AWS Regions where Amazon CodeCatalyst is available, US West (Oregon) and Europe (Ireland) at the time of publication.</p> \n<p><a href=\"https://console.aws.amazon.com/codecatalyst/home\">Try it now</a>!</p> \n<a href=\"https://twitter.com/sebsto\">-- seb</a>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"05088279b353577e584ac8c4ece2c5d4a066fdfaf798575b98e4bfc8f7c2a4af","category":"Tech"}