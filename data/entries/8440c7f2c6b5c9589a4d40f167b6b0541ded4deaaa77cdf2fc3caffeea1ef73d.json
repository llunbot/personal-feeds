{"title":"สรุปจากบทความเรื่อง The SPACE of Developer Productivity","link":"https://www.somkiat.cc/note-the-space-of-developer-productivity/","date":1686043548000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2023/06/space-150x150.jpeg\" alt srcset=\"https://www.somkiat.cc/wp-content/uploads/2023/06/space-150x150.jpeg 150w, https://www.somkiat.cc/wp-content/uploads/2023/06/space-75x75.jpeg 75w\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/06/space-1024x576.jpeg\" alt width=\"539\" height=\"303\" /></figure>\n\n\n\n<p>จากบทความเรื่อง <strong><a href=\"https://queue.acm.org/detail.cfm?id=3454124\">The SPACE of Developer Productivity</a></strong><br />โดยอธิบายถึง Productivity ของนักพัฒนา และ ทีม<br />ซึ่งมีความซับซ้อนอย่างมาก<br />การจับวัดเพียงมุมใดมุมหนึ่ง คงไม่ใช่เรื่องที่ถูกต้อง<br />ดังนั้นจึงแนะนำแนวทางไว้ดังนี้</p>\n\n\n\n<span></span>\n\n\n\n<p>ก่อนอื่นต้องทำให้ชัดเจนก่อนว่า คืออะไร<br />มีการวัดอย่างไร<br />ทั้งบริษัท ทีม  manager และ ตัวบุคคล<br />ซึ่งล้วนส่งผลต่อการส่งมอบ software<br />ด้านคุณภาพ และ ประสิทธิภาพ</p>\n\n\n\n<p>ในการวัดผลนั้นได้นำข้อมูลในหลาย ๆ มุมมอง หรือ หลาย ๆ มิติ<br />โดยถูกสร้างมาเป็น framework ชื่อว่า <strong>SPACE</strong></p>\n\n\n\n<p><strong>โดยคำว่า SPACE เป็นคำย่อ ประกอบไปด้วย</strong></p>\n\n\n\n<ul><li>Satisfaction and well-being</li><li>Performance</li><li>Activity</li><li>Communication and Collaboration</li><li>Efficiency and Flow</li></ul>\n\n\n\n<p>มาดูรายละเอียดคร่าว ๆ ของแต่ละเครื่อง</p>\n\n\n\n<p><strong>Satisfaction and well-being</strong></p>\n\n\n\n<p>ว่าด้วยเรื่องความพึงพอใจของนักพัฒนา<br />ที่มีต่องาน ต่อทีม ต่อเครื่องมือ ต่อวัฒนธรรมขององค์กร<br />เรื่องของสุขภาพที่ดี แข็งแรง<br />เรื่องของงานที่ทำว่ามี impact อย่างไร</p>\n\n\n\n<p>โดยทั้งสองเรื่องมีส่วนเกี่ยวข้องกับ productivity อย่างมาก</p>\n\n\n\n<p><strong>Performance</strong></p>\n\n\n\n<p>เรื่องของประสิทธิภาพมันคือ ผลลัพธ์ที่ออกมาจากขั้นตอนการทำงาน<br />ซึ่งยากมากต่อการวัดผล<br />เพราะว่า คนที่ทำเยอะ ใช่ว่าจะ performance ดี ถ้าไร้ซึ่งคุณภาพ<br />หรือคนทำน้อยก็ใช่ว่า performance จะไม่ดี<br />หรือทำไปอย่างดี แต่ผลที่รับคือ ผู้ใช้งานไม่ชอบ<br />แบบนี้ก็ไม่ดีต่อ business อีก<br />ดังนั้นดูตัดสินใจว่า จะดู performance ในมุมไหนบ้าง</p>\n\n\n\n<p>ยกตัวอย่างเช่น</p>\n\n\n\n<ul><li><strong>ด้านคุณภาพ</strong> ให้ดูเรื่องความเสถียรของระบบ จำนวน bug</li><li><strong>ด้านสิ่งที่ทำมี impact อย่างไร</strong>  ให้ดูที่ความพึงพอใจของลูกค้า การใช้งานของลูกค้า จำนวนการใช้งาน และ ช่วยลดค่าใช้จ่ายไปเท่าไร</li></ul>\n\n\n\n<p><strong>Activity</strong></p>\n\n\n\n<p>ใช้วัดการทำงานต่าง ๆ ที่ออกมาจากนักพัฒนา<br />แต่ก็ไม่ง่าย<br />เพราะว่าว่าทำเยอะใช่ว่าจะดีเสมอไปอีกแล้ว<br />ดังนั้นก็จะมอง Activity ที่เกิดขึ้นในหลาย ๆ มิติ เช่น</p>\n\n\n\n<ul><li>มุมมองของการออกแบบระบบ เช่น เอกสาร spec ต่าง ๆ</li><li>มุมมองของการพัฒนาระบบ เช่น การ commit การเปิด PR และการทำ Code review เป็นต้น</li><li>มุมมองเรื่องของ CI/CD เช่น จำนวนการ build, test, deploy และการใช้งาน infrastructure ต่าง ๆ</li><li>มุมมองทางด้าน operation เช่นจำนวน incident/issue ต่าง ๆ ในแต่ละรอบการ deploy, หรือระดับความรุนแรงของปัญหาต่าง ๆ</li></ul>\n\n\n\n<p><strong>Communication and Collaboration</strong></p>\n\n\n\n<p>เป็นสิ่งที่บ่งบอกว่าในการทำงาน<br />มีการพูดคุยและทำงานร่วมกันอย่างไร<br />เพราะว่าการพัฒนาระบบงาน ต้องทำงานกันจากหลากหลายทีมอยู่แล้ว<br />ถ้าเรื่องนี้ไม่ดี ก็ส่งผลต่อ productivity อย่างมาก</p>\n\n\n\n<p>ถ้าต่างทีมต่างทำ<br />ถ้าต่างทีมต่างมีแผนงานที่แตกต่างกัน<br />แต่ละคนหรือแต่ละทีมบอกว่าเสร็จแล้ว<br />แต่ยังไม่เคยเอามารวมกัน หรือ integrate กัน<br />แบบนี้ก็น่ากลัวมาก ๆ </p>\n\n\n\n<p>การทำงานร่วมกัน แผนงานควรเป้นเป้นงานเดียวกัน<br />มีความโปร่งใสต่อกัน<br />เห็นว่า process การทำงานปัจจุบันเป็นอย่างไร</p>\n\n\n\n<p><strong>ตัวอย่างที่ใช้วัดในส่วนนี้ก็ไม่ว่ายเลย ยกตัวอย่างเช่น</strong></p>\n\n\n\n<ul><li>การค้นหาเอกสารที่ใช้งานยากหรือง่าย</li><li>การทำงานร่วมกัน หรือ integrate งานเข้าหากัน ยากหรือง่าย หรือใช้เวลานานไหม เท่าไร</li><li>คุณภาพของการ review หรือ การมีส่วนร่วมของคนในทีมเป็นอย่างไร</li><li>จำนวนการติดต่อสื่อสารของการทำงาน ว่าเยอะเพียงใด และ อย่างไรบ้าง</li><li>เมื่อมีคนเข้ามาในทีม ใช้เวลาในการศึกษา หรือ เตรียมตัวก่อนเริ่มงานจริง ๆ นานไหม</li></ul>\n\n\n\n<p><strong>Efficiency and Flow</strong></p>\n\n\n\n<p>เป็นการวัด หรือ ดูว่า ในการทำงานนั้น<br />มีสิ่งที่เข้ามารบกวน หรือ ทำให้เกิดความล้าช้าอะไรบ้าง<br />ตั้งแต่เริ่มต้น จนถึง สิ้นสุด หรือ ส่งมอบระบบงาน</p>\n\n\n\n<p>เพราะมักพบว่า ยิ่งงานมีความซับซ้อนมากเท่าไร<br />สิ่งรบกวน หรือ สิ่งที่ทำให้ล่าช้า จะเยอะมาก ๆ<br />หรืออาจจะต้องรอยาวนานไปอีก (waste)</p>\n\n\n\n<p><strong>ดังนั้นจึงมีตัวอย่างของการวัดในส่วนนี้ ดังนี้</strong></p>\n\n\n\n<ul><li>จำนวนขั้นตอนในการรับงานหนึ่งว่าเป็นอย่างไร ยิ่งเยอะ และเป็น manual ยิ่งไม่ดีใช่ไหม</li><li>จำนวนของสิ่งรบกวนเป็นอย่างไร ใช้เวลาเท่าไร และส่งผลต่อการพัฒนาหรือส่งมอบระบบงานอย่างไร</li><li>ทำการ tracking  เวลาต่าง ๆ ไว้ให้ครบ หรือเยอะที่สุด เช่น  เวลาทำงานหนึ่ง ๆ เวลาที่เพิ่มเข้ามา เวลาในการรอ เป็นต้น</li></ul>\n\n\n\n<p><strong>ยกตัวอย่างของ Metric</strong></p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/06/example_metrics.jpg\" alt width=\"555\" height=\"545\" /></figure>\n\n\n\n<p>เป็นอีกหนึ่ง framework ที่น่าสนใจ<br />และลองนำไปประยุกต์ใช้งานกันดูครับ</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"8440c7f2c6b5c9589a4d40f167b6b0541ded4deaaa77cdf2fc3caffeea1ef73d","category":"Thai"}