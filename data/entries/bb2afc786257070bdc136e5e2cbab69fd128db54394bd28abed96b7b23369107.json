{"title":"สรุปสิ่งที่น่าสนใจจาก Testing methodologies ของ Jakarta EE project","link":"https://www.somkiat.cc/note-testing-methodologies-of-jakarta-ee-project/","date":1713536259000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/04/testing-jakarta-ee-150x150.jpg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/04/testing-jakarta-ee-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2024/04/testing-jakarta-ee-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/04/testing-jakarta-ee.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/04/testing-jakarta-ee-1024x486.jpg\" width=\"630\" height=\"298\" /></a></figure>\n\n\n\n<p>จากบทความเรื่อง <a href=\"https://www.infoq.com/articles/jakartaee-testing-deep-dive/\"><strong>Modernizing Testing Practices for Jakarta EE Projects</strong></a> นั้น<br />มีแนวทางการทดสอบระบบงานที่น่าสนใจ<br />มีการปรับเปลี่ยนแนวคิดของการทดสอบ เพื่อให้เข้ากับสิ่งที่เปลี่ยนไป<br />โดยทั้ง developer และ quality engineer จะต้องทำงานร่วมกัน<br />มีการกำหนดขั้นตอนการทำงาน<br />มีการ approach และ guildeline การทดสอบไว้ให้ชัดเจน<br />รวมทั้งเครื่องมือ และ ชุดของ library อีกด้วย<br />ดังนั้นจึงทำการสรุปสิ่งที่น่าสนใจ เอาไว้นิดหน่อย</p>\n\n\n\n<span></span>\n\n\n\n<p>มีสิ่งที่สำคัญมาก ๆ สำหรับ Testing Methodologies <br />เพื่อช่วยให้ project มีความน่าเชื่อถือมากยิ่งขึ้น<br />ประกอบไปด้วย</p>\n\n\n\n<p><strong>เรื่องที่ 1 <a href=\"https://github.com/jakartaee/data/blob/main/TESTING-GUIDELINE.adoc\" target=\"_blank\">Test guideline</a></strong></p>\n\n\n\n<p>เป็นเอกสารสรุปการทดสอบอย่างชัดเจน<br />เพื่อให้ทีม และ คนที่เข้ามาร่วม contribute อ่านก่อน<br />ดังนั้นยิ่งทีมใหญ่ขึ้น เอกสารเหล่านี้จึงสำคัญมาก ๆ</p>\n\n\n\n<p>ยกตัวอย่างเช่น</p>\n\n\n\n<ul>\n<li>การกำหนดเครื่องมือที่ใช้งาน</li>\n\n\n\n<li>การตั้งชื่อ</li>\n\n\n\n<li>การเขียนชื่อ test case</li>\n</ul>\n\n\n\n<p><strong>เรื่องที่ 2 กำหนด หรือ ใช้งาน modern library</strong></p>\n\n\n\n<p>เพื่อช่วยให้ชุดการทดสอบนั้นมีประสิทธิภาพยิ่งขึ้น<br />อ่านเข้าใจได้ง่าย<br />สามารถทดสอบระบบงานที่ใช้ feature ใหม่ ๆ ได้<br />ยกตัวอย่างมีการใช้งาน advance feature ของ JUnit5 และ AssertJ<br />และแนะนำให้ใช้งาน soft assertion มากกว่า hard assertion</p>\n\n\n\n<p><strong>เรื่องที่ 3 นำเอา Data-Driven มาใช้งาน ในการทดสอบ</strong></p>\n\n\n\n<p>ซึ่งช่วยให้การทดสอบครอบคลุมในส่วนของ edge case ต่างๆ <br />รวมทั้งพวก bug หรือ issue ต่าง ๆ อีกด้วย<br />รวมทั้งจากการใช้งาน ช่วยให้ทีมเข้าใจมากยิ่งขึ้น<br />เช่นการใช้งาน @ParameterizedTest เป็นต้น</p>\n\n\n\n<p><strong>เรื่องที่ 4 ทำการตรวจสอบที่ละเอียด และ ครอบคลุม</strong></p>\n\n\n\n<p>ให้ทำการ assert พฤติกรรมการทำงานของ project ให้ละเอียด<br />เพื่อทำให้คุณภาพของ project ตรงตาม standard ที่ตั้งเอาไว้</p>\n\n\n\n<p><strong>เรื่องที่ 5 ปรับปรุง test coverage ให้ดีขึ้น</strong></p>\n\n\n\n<p>จะใช้เครื่องมือทั้ง <a href=\"https://pitest.org/\" target=\"_blank\">PiTest</a>, Jacoco และ Cobertura<br />สำหรับตรวจสอบว่า code ส่วนไหนใน project จำเป็นต้องมีการปรับปรุงเรื่อง coverage ให้ดีขึ้น</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/04/pitest.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/04/pitest-1024x394.jpg\" width=\"488\" height=\"188\" /></a></figure>\n\n\n\n<p><strong>เรื่องที่ 6  Container for testing</strong></p>\n\n\n\n<p>มีการนำ container เข้ามาช่วยสร้าง environment สำหรับการทดสอบ<br />เพื่อให้การทดสอบมีคุณภาพ มีความถูกต้อง และ น่าเชื่อถือ<br />รวมทั้งยังช่วยให้สามารถ reproduce ในแต่ละ case ได้ง่ายอีกด้วย<br />เช่น <a href=\"https://testcontainers.com/\" target=\"_blank\">test container</a> เป็นต้น</p>\n\n\n\n<p>ลองนำไปประยุกต์ใช้งานกันดูครับ</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"bb2afc786257070bdc136e5e2cbab69fd128db54394bd28abed96b7b23369107","category":"Thai"}