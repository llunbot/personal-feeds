{"title":"CSS Responsive Multi-Line Ribbon Shapes (Part 2)","link":"https://smashingmagazine.com/2023/11/css-responsive-multi-line-ribbon-shapes-part2/","date":1700647200000,"content":"<p>In my <a href=\"https://www.smashingmagazine.com/2023/11/css-responsive-multi-line-ribbon-shapes-part1/\">previous article</a>, we tackled ribbons in CSS. The idea was to create a classic ribbon pattern using a single element and values that allow it to adapt to however much content it contains. We established a shape with repeating CSS gradients and tailor-cut the ribbon’s ends with <code>clip-path()</code> to complete the pattern, then used it and wound up with two ribbon variations: one that stacks vertically with straight strands of ribbons and another that tweaks the shape by introducing pseudo-elements.</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/1-lines-white-text-red-background.png\" /></p>\n<p>If you are wondering why I am using <code>80%</code>, then there is no particular logic to my approach. It’s because I found that covering more space with the color and leaving less space between lines produces a better result for my eye. I could have assigned variables to control the space without touching the core code, but there’s already more than enough complexity going on. So, that’s the reasoning behind the hard-coded value.</p>\nStyling The First Ribbon\n<p>We’ll start with the red ribbon from the demo. This is what we’re attempting to create:</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/2-lines-text-background-ribbon.png\" /></p>\n<p>It may look complex, but we will break it down into a combination of basic shapes.</p>\n<h3>Stacking Gradients</h3>\n<p>Let’s start with the gradient configuration, and below is the result we are aiming for. I am adding a bit of transparency to better see both gradients.</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/3-highlighted-two-gradients-pattern.png\" /></p>\n<div>\n<pre><code>h1 {\n  --c: #d81a14;\n\n  padding-inline: .8lh;\n  background:\n    /* Gradient 1 */\n    linear-gradient(var(--c) 80%, #0000 0) \n      0 .1lh / 100% 1lh,\n    /* Gradient 2 */\n    linear-gradient(90deg, color-mix(in srgb, var(--c), #000 35%) 1.6lh, #0000 0) \n      -.8lh 50% / 100% calc(100% - .3lh) repeat-x;\n}\n</code></pre>\n</div>\n\n<p>We already know all about the first gradient because we set it up in the last section. The second gradient, however, is placed behind the first one to simulate the folded part. It uses the same color variable as the first gradient, but it’s blended with black (<code>#000</code>) in the <code>color-mix()</code> function to darken it a smidge and create depth in the folds.</p>\n<p>The thing with the second gradient is that we do not want it to reach the top and bottom of the element, which is why its height is equal to <code>calc(100% - .3lh)</code>.</p>\n<p>Note the <strong>use of padding in the inline direction</strong>, which is required to avoid text running into the ribbon’s folds.</p>\n<h3>Masking The Folded Parts</h3>\n<p>Now, it’s time to introduce a CSS mask. If you look closely at the design of the ribbon, you will notice that we are cutting triangular shapes from the sides.</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/4-highlighted-masked-areas-pattern.png\" /></p>\n<p>We have applied a triangular shape on the left and right sides of the ribbon. Unlike the backgrounds, <strong>they repeat every two lines</strong>, giving us the complex repetition we want. </p>\n<p>Imagine for a moment that those parts are transparent.</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/5-text-background-ribbon-pattern.png\" /></p>\n<p>That will give us the final shape! We can do it with masks, but this time, let’s try using <code>conic-gradient()</code>, which is nice because it allows us to create triangular shapes. And since there’s one shape on each side, we’ll use two conical gradients — one for the left and one for the right — and repeat them in the vertical direction.</p>\n<div>\n<pre><code>\nmask:\n  conic-gradient(from 225deg at .9lh, #0000 25%, #000 0) \n    0 1lh / 50% 2lh repeat-y,\n  conic-gradient(from 45deg at calc(100% - .9lh), #0000 25%, #000 0) \n    100% 0 / 50% 2lh repeat-y;\n</code></pre>\n</div>\n\n<p>Each gradient covers half the width (<code>50%</code>) and takes up two lines of text (<code>2lh</code>). Also, note the <code>1lh</code> offset of the first gradient, which is what allows us to alternate between the two as the ribbon adapts in size. It’s pretty much a zig-zag pattern and, guess what, I have an article that covers <a href=\"https://css-tricks.com/css-borders-using-masks/\">how to create zig-zag shapes with CSS masks</a>. I highly recommend reading that for more context and practice applying masks with conical gradients.</p>\n<h3>Masking The Ribbon’s Ends</h3>\n<p>We are almost done! All we are missing are the ribbon’s cut edges. This is what we have so far:</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/6-outlined-area-ribbon-end.png\" /></p>\n<p>We can fill that in by adding a third gradient to the mask:</p>\n<div>\n<pre><code>mask:\n  /* New gradient */\n  linear-gradient(45deg, #000 50%, #0000 0) 100% .1lh / .8lh .8lh no-repeat,\n\n  conic-gradient(from 225deg at .9lh, #0000 25%, #000 0) \n   0 1lh / 50% 2lh repeat-y,\n  conic-gradient(from 45deg  at calc(100% - .9lh), #0000 25%, #000 0) \n   100% 0 / 50% 2lh repeat-y;\n</code></pre>\n</div>\n\n<p>That linear gradient will give us the missing part at the top, but we still need to do the same at the bottom, and here, it’s a bit tricky because, unlike the top part, the bottom is not static. The cutout can be either on the left or the right based on the number of lines of text we’re working with:</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/7-ribbon-highlighted-missing-areas.png\" /></p>\n<p>We will fill in those missing parts with two more gradients. Below is a demo where I use different colors for the newly added gradients to see exactly what’s happening. Use the resize handle to see how the ribbon adjusts when the number of lines changes.</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/8-reverse-ribbon-direction.png\" /></p>\nStyling The Second Ribbon\n<p>The second ribbon from the demo — the green one — is a variation of the first ribbon.</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/9-text-ribbon-background-angled-clipped-ends.png\" /></p>\n<p>I am going a little bit faster this time around. We’re working with many of the same ideas and concepts, but you will see how relatively easy it is to create variations with this approach.</p>\n<p>The first thing to do is to add some space on the top and bottom for the cutout part. I’m applying a <strong>transparent border</strong> for this. The thickness needs to be equal to half the height of one line (<code>.5lh</code>).</p>\n<div>\n<pre><code>h1 {\n  --c: #d81a14;\n\n  border-block: .5lh solid #0000;\n  padding-inline: 1lh;\n  background: linear-gradient(var(--c) 80%, #0000 0) 0 .1lh / 100% 1lh padding-box;\n}\n</code></pre>\n</div>\n\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/10-text-border-element-boundaries.png\" /></p>\n<p>Note how the background gradient is set to cover only the padding area using <code>padding-box</code>.</p>\n<p>Now, unlike the first ribbon, we are going to add two more gradients for the vertical pieces that create the folded darker areas.</p>\n<div>\n<pre><code>h1 {\n  --c: #d81a14;\n\n  border-block: .5lh solid #0000;\n  padding-inline: 1lh;\n  background:\n    /* Gradient 1 */\n    linear-gradient(var(--c) 80%, #0000 0) 0 .1lh / 100% 1lh padding-box,\n    /* Gradient 2 */\n    linear-gradient(#0000 50%, color-mix(in srgb, var(--c), #000 35%) 0) \n     0 0 / .8lh 2lh repeat-y border-box,\n    /* Gradient 3 */\n    linear-gradient(color-mix(in srgb, var(--c), #000 35%) 50%, #0000 0) \n     100% 0 / .8lh 2lh repeat-y border-box;\n}\n</code></pre>\n</div>\n\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/11-highlighted-two-gradients-ribbon.png\" /></p>\n<p>Notice how the last two gradients are set to cover the entire area with a <code>border-box</code>. The height of each gradient needs to equal two lines of text (<code>2lh</code>), while the width should be consistent with the height of each horizontal gradient. With this, we establish the folded parts of the ribbon and also prepare the code for creating the triangular cuts at the start and end of the ribbon.</p>\n<p>Here is an interactive demo where you can resize the container to see how the gradient responds to the number of lines of text.</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/12-highlighted-masked-areas-ribbon.png\" /></p>\n<p>Applying only the conic gradients will also hide the cutout part, so I have to introduce a third gradient to make sure they remain visible:</p>\n<div>\n<pre><code>mask:\n  /* New Gradient */\n  linear-gradient(#000 1lh, #0000 0) 0 -.5lh,\n  /* Left Side */\n  conic-gradient(from 225deg at .9lh, #0000 25%, #000 0) \n   0 1lh / 51% 2lh repeat-y padding-box,\n  /* Right Side */\n  conic-gradient(from 45deg at calc(100% - .9lh), #0000 25%, #000 0) \n   100% 0 / 51% 2lh repeat-y padding-box;\n</code></pre>\n</div>\n\n<p>And the final touch is to use <code>clip-path</code> for the cutouts at the ends of the ribbon.</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/13-points-make-clipped-area-ribbon.png\" /></p>\n<p>Notice how the <code>clip-path</code> is cutting two triangular portions from the bottom to make sure the cutout is always visible whether we have an odd or even number of lines.</p>\n<p>This is how the final code looks when we put everything together:</p>\n<div>\n<pre><code>h1 {\n  --c: #d81a14;\n\n  padding-inline: 1lh;\n  border-block: .5lh solid #0000;\n  background: \n    linear-gradient(var(--c) 80%, #0000 0)\n      0 .1lh / 100% 1lh padding-box,\n    linear-gradient(#0000 50%, color-mix(in srgb,var(--c), #000 35%) 0)\n      0 0 / .8lh 2lh repeat-y border-box,\n    linear-gradient(color-mix(in srgb, var(--c), #000 35%) 50%, #0000 0)\n      100% 0 / .8lh 2lh repeat-y border-box;\n  mask:\n    linear-gradient(#000 1lh, #0000 0) 0 -.5lh,\n    conic-gradient(from 225deg at .9lh,#0000 25%,#000 0)\n     0 1lh/51% 2lh repeat-y padding-box,\n    conic-gradient(from 45deg at calc(100% - .9lh), #0000 25%, #000 0)\n     100% 0 / 51% 2lh repeat-y padding-box;\n  clip-path: polygon(0 0, calc(100% - .8lh) 0,\n    calc(100% - .4lh) .3lh,\n    100% 0, 100% 100%,\n    calc(100% - .4lh) calc(100% - .3lh),\n    calc(100% - .8lh) 100%, .8lh 100%, .4lh calc(100% - .3lh), 0 100%);\n}\n</code></pre>\n</div>\n\n<p>I challenged you to find a way to reverse the direction of the first ribbon by adjusting the gradient values. Try to do the same thing here!</p>\n<p><img src=\"https://files.smashing.media/articles/css-responsive-multi-line-ribbon-shapes-part2/14-reverse-direction-ribbon.png\" /></p>\n<p>It may sound difficult. If you need a lifeline, you can get the code from <a href=\"https://css-generators.com/ribbon-shapes/\">my online collection</a>, but it’s the perfect exercise to understand what we are doing. Explaining things is good, but nothing beats practicing.</p>\nThe Final Demo\n<p>Here is the demo once again to see how everything comes together.</p>\n<p>See the Pen <a href=\"https://codepen.io/t_afif/pen/NWeYwBK\">Responsive multi-line ribbon shapes</a> by <a href=\"https://codepen.io/t_afif\">Temani Afif</a>.</p>\nWrapping Up\n<p>There we go, two more ribbons that build off of the ones we created together in <a href=\"https://www.smashingmagazine.com/2023/11/css-responsive-multi-line-ribbon-shapes-part1/\">the first article of this brief two-part series</a>. If there’s only one thing you take away from these articles, I hope it’s that <strong>modern CSS provides us with powerful tools that offer different, more robust approaches to things we used to do a long time ago</strong>. Ribbons are an excellent example of a long-living design pattern that’s been around long enough to demonstrate how creating them has evolved over time as new CSS features are released.</p>\n<p>I can tell you that the two ribbons we created in this article are perhaps the most difficult shapes in <a href=\"https://css-generators.com/ribbon-shapes/\">my collection of ribbon shapes</a>. But if you can wrap your head around the use of gradients — not only for backgrounds but masks and clipping paths as well — you’ll find that you can create every other ribbon in the collection without looking at my code. It’s getting over that initial hurdle that makes this sort of thing challenging.</p>\n<p>You now have the tools to make your own ribbon patterns, too, so why not give it a try? If you do, please share them in the comments so I can see your work!</p>\n<h3>Further Reading On SmashingMag</h3>\n<ul>\n<li>“<a href=\"https://www.smashingmagazine.com/2021/02/responsive-image-effects-css-gradients-aspect-ratio/\">Create Responsive Image Effects With CSS Gradients And aspect-ratio</a>,” Stephanie Eckles</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2019/09/inspired-design-decisions-alexey-brodovitch/\">Inspired Design Decisions With Alexey Brodovitch</a>,” Andrew Clarke</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2023/09/gradients-blend-modes-hover-effect/\">Gradients, Blend Modes, And A Really Cool Hover Effect</a>,” Preethi Sam</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2022/01/css-radial-conic-gradient/\">A Deep CSS Dive Into Radial And Conic Gradients</a>,” Ahmad Shadeed</li>\n</ul>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"a91d3002dbe240febdbde45640475a3ac7b816c3ced70e65355ad6b7b6141a27","category":"Tech"}