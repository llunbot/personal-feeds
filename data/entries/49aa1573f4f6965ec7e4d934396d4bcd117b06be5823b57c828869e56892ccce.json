{"title":"Meta and Yandex Have Both Been De-Anonymizing Android Users’ Ostensibly Sandboxed Private Web Browsing Identifiers","link":"https://localmess.github.io/","date":1749074025000,"content":"\n<p>A team of researchers has uncovered a scheme they’ve dubbed “Local Mess” — used by Meta since September 2024, and Russian search engine Yandex since 2017 (!) — to de-anonymize Android users’ web browsing across millions of websites that include Meta’s and Yandex’s respective tracking scripts. From their extensively detailed report:</p>\n\n<blockquote>\n  <p>These native Android apps receive browsers’ metadata, cookies and\ncommands from the Meta Pixel and Yandex Metrica scripts embedded\non thousands of web sites. These JavaScripts load on users’ mobile\nbrowsers and silently connect with native apps running on the same\ndevice through localhost sockets. As native apps access\nprogrammatically device identifiers like the <a href=\"https://support.google.com/googleplay/android-developer/answer/6048248\">Android Advertising\nID (AAID)</a> or handle user identities as in the case of Meta\napps, this method effectively allows these organizations to <em>link\nmobile browsing sessions and web cookies to user identities</em>,\nhence de-anonymizing users’ visiting sites embedding their\nscripts.</p>\n\n<p>This web-to-app ID sharing method bypasses typical privacy\nprotections such as clearing cookies, Incognito Mode and Android’s\npermission controls. Worse, it opens the door for potentially\nmalicious apps eavesdropping on users’ web activity. [...]</p>\n\n<p>The entire flow of the _fbp cookie from web to native and the\nserver is as follows:</p>\n\n<ol>\n<li>The user opens the native Facebook or Instagram app, which\neventually is sent to the background and creates a background\nservice to listen for incoming traffic on a TCP port (12387 or\n12388) and a UDP port (the first unoccupied port in\n12580-12585). Users must be logged-in with their credentials on\nthe apps.</li>\n<li>The user opens their browser and visits a website integrating\nthe Meta Pixel.</li>\n<li>At this stage, websites may ask for consent depending on the\nwebsite’s and visitor’s locations.</li>\n<li>The Meta Pixel script sends the <a href=\"https://localmess.github.io/#about_fbp\">_fbp cookie</a> to the\nnative Instagram or Facebook app via WebRTC (STUN) SDP Munging.</li>\n<li>The Meta Pixel script also sends the _fbp value in a request to\nhttps://www.facebook.com/tr along with other parameters such as\npage URL (dl), website and browser metadata, and the <a href=\"https://web.archive.org/web/20250531104925/https://developers.facebook.com/docs/meta-pixel/reference/\">event\ntype</a> (ev) (e.g., PageView, AddToCart, Donate, Purchase).</li>\n<li>The Facebook or Instagram apps receive the _fbp cookie from the\nMeta Pixel JavaScript running on the browser. The apps transmit\n_fbp as a GraphQL mutation to\n(https://graph[.]facebook[.]com/graphql) along with other\npersistent user identifiers, linking users’ fbp ID (web visit)\nwith their Facebook or Instagram account.</li>\n</ol>\n</blockquote>\n\n<p>The same day the researchers published this report, Meta stopped doing it.</p>\n\n<p><a href=\"https://duckduckgo.com/?q=site%3Adaringfireball.net+facebook+criminal+enterprise&amp;ia=web\">I’ve said it before</a> but not in a while: Meta is a criminal enterprise. What they’ve done here may not have broken any laws, but there certainly should be laws against it. And in terms of simple common sense, the entire elaborate scheme <em>only</em> exists to circumvent features in Android meant to <em>prevent</em> native apps from tracking you while you use your web browser. Saying it’s not illegal doesn’t mean it isn’t theft. It’s like the privacy equivalent of <a href=\"https://www.theguardian.com/us-news/2025/may/29/jamie-raskin-democrat-trump-crypto-investigation\">Trump’s cryptocurrency grift</a>, which might not violate any current laws, but clearly exists as a bribery scheme.</p>\n\n<div>\n<a href=\"https://daringfireball.net/linked/2025/06/04/meta-yandex-android-deanonymizing-web-ids\"> ★ </a>\n</div>\n\n\t","author":"John Gruber","siteTitle":"Daring Fireball","siteHash":"fc569638025dadf22a867470f8215f38855cf50e975782a6c989909474292a36","entryHash":"49aa1573f4f6965ec7e4d934396d4bcd117b06be5823b57c828869e56892ccce","category":"Tech"}