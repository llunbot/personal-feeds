{"title":"สรุปจากบทความเรื่อง Best practices for writing code comments","link":"https://www.somkiat.cc/better-ways-for-writing-code-comments/","date":1626347457000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header></header><div><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/Screen-Shot-2564-07-15-at-15.16.20.png\" alt=\"\" width=\"562\" height=\"300\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/07/Screen-Shot-2564-07-15-at-15.16.20.png 832w, https://www.somkiat.cc/wp-content/uploads/2021/07/Screen-Shot-2564-07-15-at-15.16.20-300x161.png 300w, https://www.somkiat.cc/wp-content/uploads/2021/07/Screen-Shot-2564-07-15-at-15.16.20-768x412.png 768w\" sizes=\"(max-width: 562px) 100vw, 562px\"></figure><div><p>อ่านบทความเรื่อง <strong><a href=\"https://stackoverflow.blog/2021/07/05/best-practices-for-writing-code-comments/\" target=\"_blank\" rel=\"noreferrer noopener\">Best practices for writing code comments</a></strong> จาก StackOverflow<br>ทำการสรุปและคำแนะนำเกี่ยวกับการเขียน comment ใน code ที่ดี<br>เพื่อช่วยให้คุณภาพของ code ดีขึ้น</p><p>มีประโยคที่น่าสนใจคือการเขียน comment ที่แย่ ๆ มันแย่กว่าการไม่เขียนอีกนะ<br>ดังนั้นเราไม่ควรเขียน comment ใช่หรือไม่ ?<br>เพราะว่า แม้จะเขียนไม่ดี compiler ก็ไม่ได้ตรวจสอบให้<br>ถ้า comment ไม่ตรงกับการทำงานจริง ก็ไม่มีอะไรเกิดขึ้น<br>ดังนั้นการเขียนมันใช้ทั้งเวลาและความพยายาม !!</p></div><p><strong>แต่ในการทำงานนั้น จำเป็นต้องเขียน comment</strong><br>เพื่อทำการอธิบาย codeว่าทำงานอย่างไร<br>ว่าใช้งานอ่างไรว่าแก้ไขหรือปรับปรุงอะไร<br>ในบทความจึงมีคำแนะนำต่าง ๆ ดังนี้</p><p><strong>ข้อที่ 1 ไม่ต้องเขียน comment ซ้ำกับ code</strong></p><div itemprop=\"text\" id=\"gist110685820\" translate=\"no\"><table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-1-java-L1\" data-line-number=\"1\"></td><td id=\"file-1-java-LC1\"><span>if</span> (x <span>&gt;</span> <span>3</span>) {</td></tr><tr><td id=\"file-1-java-L2\" data-line-number=\"2\"></td><td id=\"file-1-java-LC2\">…</td></tr><tr><td id=\"file-1-java-L3\" data-line-number=\"3\"></td><td id=\"file-1-java-LC3\">} <span><span>//</span> if</span></td></tr><tr><td id=\"file-1-java-L4\" data-line-number=\"4\"></td><td id=\"file-1-java-LC4\"></td></tr><tr><td id=\"file-1-java-L5\" data-line-number=\"5\"></td><td id=\"file-1-java-LC5\">i <span>=</span> i <span>+</span> <span>1</span>; <span><span>//</span> Add one to i</span></td></tr><tr><td id=\"file-1-java-L6\" data-line-number=\"6\"></td><td id=\"file-1-java-LC6\"></td></tr><tr><td id=\"file-1-java-L7\" data-line-number=\"7\"></td><td id=\"file-1-java-LC7\"><span><span>//</span> create a for loop // &lt;-- comment</span></td></tr><tr><td id=\"file-1-java-L8\" data-line-number=\"8\"></td><td id=\"file-1-java-LC8\"><span>for</span> <span><span>//</span> start for loop</span></td></tr><tr><td id=\"file-1-java-L9\" data-line-number=\"9\"></td><td id=\"file-1-java-LC9\">( <span><span>//</span> round bracket</span></td></tr><tr><td id=\"file-1-java-L10\" data-line-number=\"10\"></td><td id=\"file-1-java-LC10\"><span><span>//</span> newline</span></td></tr><tr><td id=\"file-1-java-L11\" data-line-number=\"11\"></td><td id=\"file-1-java-LC11\"><span>int</span> <span><span>//</span> type for declaration</span></td></tr><tr><td id=\"file-1-java-L12\" data-line-number=\"12\"></td><td id=\"file-1-java-LC12\">i <span><span>//</span> name for declaration</span></td></tr><tr><td id=\"file-1-java-L13\" data-line-number=\"13\"></td><td id=\"file-1-java-LC13\"><span>=</span> <span><span>//</span> assignment operator for declaration</span></td></tr><tr><td id=\"file-1-java-L14\" data-line-number=\"14\"></td><td id=\"file-1-java-LC14\"><span>0</span> <span><span>//</span> start value for i</span></td></tr></tbody></table></div><p><strong>ข้อที่ 2 comment ที่ดี ไม่ใช่การอธิบาย code ที่ไม่ดีหรืออธิบายตัวเองไม่ได้</strong></p><div itemprop=\"text\" id=\"gist110685820\" translate=\"no\"><table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-2-java-L1\" data-line-number=\"1\"></td><td id=\"file-2-java-LC1\"><span><span>//</span> Bad</span></td></tr><tr><td id=\"file-2-java-L2\" data-line-number=\"2\"></td><td id=\"file-2-java-LC2\"><span>private</span> <span>static</span> <span>Node</span> getBestChildNode(<span>Node</span> node) {</td></tr><tr><td id=\"file-2-java-L3\" data-line-number=\"3\"></td><td id=\"file-2-java-LC3\"><span>Node</span> n; <span><span>//</span> best child node candidate</span></td></tr><tr><td id=\"file-2-java-L4\" data-line-number=\"4\"></td><td id=\"file-2-java-LC4\"><span>for</span> (<span>Node</span> node<span>:</span> node<span>.</span>getChildren()) {</td></tr><tr><td id=\"file-2-java-L5\" data-line-number=\"5\"></td><td id=\"file-2-java-LC5\"><span><span>//</span> update n if the current state is better</span></td></tr><tr><td id=\"file-2-java-L6\" data-line-number=\"6\"></td><td id=\"file-2-java-LC6\"><span>if</span> (n <span>==</span> <span>null</span> <span>||</span> utility(node) <span>&gt;</span> utility(n)) {</td></tr><tr><td id=\"file-2-java-L7\" data-line-number=\"7\"></td><td id=\"file-2-java-LC7\">n <span>=</span> node;</td></tr><tr><td id=\"file-2-java-L8\" data-line-number=\"8\"></td><td id=\"file-2-java-LC8\">}</td></tr><tr><td id=\"file-2-java-L9\" data-line-number=\"9\"></td><td id=\"file-2-java-LC9\">}</td></tr><tr><td id=\"file-2-java-L10\" data-line-number=\"10\"></td><td id=\"file-2-java-LC10\"><span>return</span> n;</td></tr><tr><td id=\"file-2-java-L11\" data-line-number=\"11\"></td><td id=\"file-2-java-LC11\">}</td></tr><tr><td id=\"file-2-java-L12\" data-line-number=\"12\"></td><td id=\"file-2-java-LC12\"></td></tr><tr><td id=\"file-2-java-L13\" data-line-number=\"13\"></td><td id=\"file-2-java-LC13\"></td></tr><tr><td id=\"file-2-java-L14\" data-line-number=\"14\"></td><td id=\"file-2-java-LC14\"><span><span>//</span> Better</span></td></tr><tr><td id=\"file-2-java-L15\" data-line-number=\"15\"></td><td id=\"file-2-java-LC15\"><span>private</span> <span>static</span> <span>Node</span> getBestChildNode(<span>Node</span> node) {</td></tr><tr><td id=\"file-2-java-L16\" data-line-number=\"16\"></td><td id=\"file-2-java-LC16\"><span>Node</span> bestNode;</td></tr><tr><td id=\"file-2-java-L17\" data-line-number=\"17\"></td><td id=\"file-2-java-LC17\"><span>for</span> (<span>Node</span> currentNode<span>:</span> node<span>.</span>getChildren()) {</td></tr><tr><td id=\"file-2-java-L18\" data-line-number=\"18\"></td><td id=\"file-2-java-LC18\"><span>if</span> (bestNode <span>==</span> <span>null</span> <span>||</span> utility(currentNode) <span>&gt;</span> utility(bestNode)) {</td></tr><tr><td id=\"file-2-java-L19\" data-line-number=\"19\"></td><td id=\"file-2-java-LC19\">bestNode <span>=</span> currentNode;</td></tr><tr><td id=\"file-2-java-L20\" data-line-number=\"20\"></td><td id=\"file-2-java-LC20\">}</td></tr><tr><td id=\"file-2-java-L21\" data-line-number=\"21\"></td><td id=\"file-2-java-LC21\">}</td></tr><tr><td id=\"file-2-java-L22\" data-line-number=\"22\"></td><td id=\"file-2-java-LC22\"><span>return</span> bestNode;</td></tr><tr><td id=\"file-2-java-L23\" data-line-number=\"23\"></td><td id=\"file-2-java-LC23\">}</td></tr></tbody></table></div><p><strong>ข้อที่ 3-5 ถ้าเขียน comment ไม่ชัดเจน คลุมเครือ นั่นหมายความว่า code ที่เขียนมักจะมีปัญหาเสมอ</strong></p><p>comment ที่ดีต้องไม่ทำให้เกิดความสับสน</p><p><strong>ข้อที่ 6 ถ้าทำการ copy code มาใช้งาน ควรมีที่มาเสมอ</strong></p><p>ควรใส่ที่มาหรือ link ด้วยเสมอรวมทั้งข้อมูลอื่น ๆ เช่น</p><ul><li>ปัญหาที่แก้ไขคืออะไร</li><li>code มาจากใคร</li><li>ทำไมถึงเลือกใช้วิธีแก้ไขหรือ code ชุดนี้</li><li>สามารถปรับปรุงได้อย่างไร</li></ul><div itemprop=\"text\" id=\"gist110685820\" translate=\"no\"><table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-6-java-L1\" data-line-number=\"1\"></td><td id=\"file-6-java-LC1\"><span><span>//</span> Many thanks to Chris Veness at http://www.movable-type.co.uk/scripts/latlong.html</span></td></tr><tr><td id=\"file-6-java-L2\" data-line-number=\"2\"></td><td id=\"file-6-java-LC2\"><span><span>//</span> for a great reference and examples.</span></td></tr><tr><td id=\"file-6-java-L3\" data-line-number=\"3\"></td><td id=\"file-6-java-LC3\"><span><span>//</span> Magical formula taken from a stackoverflow post, reputedly related to</span></td></tr><tr><td id=\"file-6-java-L4\" data-line-number=\"4\"></td><td id=\"file-6-java-LC4\"><span><span>//</span> human vision perception.</span></td></tr><tr><td id=\"file-6-java-L5\" data-line-number=\"5\"></td><td id=\"file-6-java-LC5\"><span>return</span> (<span>int</span>) (<span>0.3</span> <span>*</span> red <span>+</span> <span>0.59</span> <span>*</span> green <span>+</span> <span>0.11</span> <span>*</span> blue);</td></tr><tr><td id=\"file-6-java-L6\" data-line-number=\"6\"></td><td id=\"file-6-java-LC6\"></td></tr><tr><td id=\"file-6-java-L7\" data-line-number=\"7\"></td><td id=\"file-6-java-LC7\"></td></tr><tr><td id=\"file-6-java-L8\" data-line-number=\"8\"></td><td id=\"file-6-java-LC8\"><span><span>//</span> http://tools.ietf.org/html/rfc4180 suggests that CSV lines</span></td></tr><tr><td id=\"file-6-java-L9\" data-line-number=\"9\"></td><td id=\"file-6-java-LC9\"><span><span>//</span> should be terminated by CRLF, hence the \\r\\n.</span></td></tr><tr><td id=\"file-6-java-L10\" data-line-number=\"10\"></td><td id=\"file-6-java-LC10\">csvStringBuilder<span>.</span>append(<span><span>\"</span><span>\\r\\n</span><span>\"</span></span>);</td></tr></tbody></table></div><p><strong>ข้อที่ 7 ต้องเขียน commnet เสมอเมื่อทำการแก้ไข bug ต่าง ๆ</strong></p><div itemprop=\"text\" id=\"gist110685820\" translate=\"no\"><table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-7-java-L1\" data-line-number=\"1\"></td><td id=\"file-7-java-LC1\"><span><span>//</span> NOTE: At least in Firefox 2, if the user drags outside of the browser window,</span></td></tr><tr><td id=\"file-7-java-L2\" data-line-number=\"2\"></td><td id=\"file-7-java-LC2\"><span><span>//</span> mouse-move (and even mouse-down) events will not be received until</span></td></tr><tr><td id=\"file-7-java-L3\" data-line-number=\"3\"></td><td id=\"file-7-java-LC3\"><span><span>//</span> the user drags back inside the window. A workaround for this issue</span></td></tr><tr><td id=\"file-7-java-L4\" data-line-number=\"4\"></td><td id=\"file-7-java-LC4\"><span><span>//</span> exists in the implementation for onMouseLeave().</span></td></tr><tr><td id=\"file-7-java-L5\" data-line-number=\"5\"></td><td id=\"file-7-java-LC5\"><span>@Override</span></td></tr><tr><td id=\"file-7-java-L6\" data-line-number=\"6\"></td><td id=\"file-7-java-LC6\"><span>public</span> <span>void</span> onMouseMove(<span>Widget</span> sender, <span>int</span> x, <span>int</span> y) { <span>..</span> }</td></tr><tr><td id=\"file-7-java-L7\" data-line-number=\"7\"></td><td id=\"file-7-java-LC7\"></td></tr><tr><td id=\"file-7-java-L8\" data-line-number=\"8\"></td><td id=\"file-7-java-LC8\"></td></tr><tr><td id=\"file-7-java-L9\" data-line-number=\"9\"></td><td id=\"file-7-java-LC9\"><span><span>//</span> Use the name as the title if the properties did not include one (issue #1425)</span></td></tr></tbody></table></div><p><strong>ข้อที่ 8 เขียน comment เพื่อระบุหรือบอกว่า ส่วนไหนยังพัฒนาไม่เสร็จหรือสมบูรณ์</strong></p><p>น่าจะมีประโยชน์นะครับ<br>ขอให้สนุกกับการ coding</p></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"265ad1edab7b89b12519102c2c5cda644c497154f2d48abc0a50e9ce18cd286d","category":"Thai"}