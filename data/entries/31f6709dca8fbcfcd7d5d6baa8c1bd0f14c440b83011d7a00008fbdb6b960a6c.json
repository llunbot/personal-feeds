{"title":"Announcing HashiCorp Consul 1.11 - Now Generally Available","link":"https://www.hashicorp.com/blog/announcing-hashicorp-consul-1-11","date":1639674000000,"content":"<p>We are pleased to announce general availability of HashiCorp Consul 1.11. This release represents yet another step forward in our effort to help organizations run Consul to reduce operational complexity and seamlessly integrate service mesh into their application workflows. Consul 1.11 contains a number of important new features, including <a href=\"https://www.consul.io/docs/enterprise/admin-partitions\">multi-tenancy with administrative partitions</a>, a <a href=\"https://www.consul.io/docs/k8s/k8s-cli\">new Consul Kubernetes CLI</a>, and HashiCorp Vault integration on Consul Kubernetes.</p>\n<h2><a href=\"#multi-tenancy-with-administrative-partitions-enterprise\">»</a><a></a>Multi-Tenancy with Administrative Partitions (Enterprise)</h2>\n<p>Two major challenges organizations face when scaling a service mesh are:</p>\n<ol>\n<li><strong>Increased operational complexity associated with deploying and managing a service mesh across multiple tenants.</strong> This can become unmanageable for operators when there are dozens, if not hundreds, of Kubernetes clusters and virtual machines deployed within an organization.</li>\n<li><strong>Lack of organizational autonomy when providing resources</strong> such as networking, namespaces, and services to individual teams.</li>\n</ol>\n<p>Typically, operators would have to manage separate control planes for each Kubernetes cluster or virtual machines group, as shown in the architecture below:</p><img src=\"https://www.datocms-assets.com/2885/1634671221-consul111diagram01.png\" /><p>This approach is not scalable for two reasons:</p>\n<ol>\n<li>It requires too much coordination and compute at scale.</li>\n<li>It’s burdensome for operations teams to manage.</li>\n</ol>\n<p>Scaling a more complex architecture, like the one illustrated below, requires enormous amounts of coordination and compute resources, often creating more overhead than operations teams can easily manage.</p><img src=\"https://www.datocms-assets.com/2885/1634671476-separated-clusters-k8s-consul.png\" /><p>Consul 1.11 multi-tenancy with admin partitions allows enterprises to provide a shared service-networking solution for multiple tenants — across Kubernetes and VM deployments — within a single Consul datacenter. To support various deployment patterns, admin partitions enable multiple Kubernetes clusters from different tenants to share a single Consul control plane. Admin partitions also help enterprises improve operational efficiency while providing individual teams with organizational autonomy and isolation when managing their services.</p><img src=\"https://www.datocms-assets.com/2885/1634671438-multi-tenancy-cluster.png\" /><p><em>This diagram illustrates a single Consul control plane for multiple Kubernetes clusters and VMs.</em></p>\n<p>Consul 1.11 multi-tenancy with admin partitions allows multiple namespaces with the same name to exist independently of each other. <a href=\"https://www.consul.io/docs/security/acl\">Access control lists</a> (ACLs) are augmented to allow a partition administrator full control over their local resources without needing operator permissions for the entire cluster. That helps operations teams to better scale and manage complex architectures, as shown below:</p><img src=\"https://www.datocms-assets.com/2885/1634672584-consul111diagram05.png\" /><h2><a href=\"#introducing-the-consul-kubernetes-cli\">»</a><a></a>Introducing the Consul Kubernetes CLI</h2>\n<p>Consul 1.11 also provides a first-class Consul Kubernetes command line interface (CLI) for a new way of interacting with Consul when deploying on Kubernetes. The primary goal for the Consul Kubernetes CLI is to lower the barrier to adoption for developers who want to use a Consul service mesh on Kubernetes.</p>\n<p>Prior to version 1.11, Consul supported only a Helm install-and-uninstall flow. Although Helm provides a fairly easy install and uninstall mechanism for Kubernetes users, a Helm chart can expose an overwhelming number of options. As an alternative, a custom-built CLI provides a more curated experience for those who primarily want to try out Consul service mesh as quickly as possible. The Consul Kubernetes CLI provides a simpler user experience, reduces the number of steps to get a deployment running, and enables preset configurations for application and Kubernetes teams.</p>\n<p>Previously, in order to customize your installation, you had to create a <code>values.yaml</code> file and provide config options as described in the <a href=\"https://www.consul.io/docs/k8s/helm\">Helm Chart Configuration</a> docs, as shown here:</p><pre><code>helm repo add hashicorp https://helm.releases.hashicorp.com\n$ cat &gt; dc1.yaml &lt;</code></pre><p>With the Consul Kubernetes CLI, installing Consul on Kubernetes is as simple as:</p><pre><code>consul-k8s install</code></pre><p>In addition, there are new <a href=\"https://www.consul.io/docs/k8s/k8s-cli#install\">preset options</a> to install Consul on Kubernetes in a pre-configured demo or secure setting:</p><pre><code># Install with sidecar injection enabled\nconsul-k8s install -preset=demo \n\n# Install with sidecar injection, TLS and ACLs enabled\nconsul-k8s install -preset=secure </code></pre><p>For more information on how to get started with our Consul Kubernetes CLI please see the <a href=\"https://www.consul.io/docs/k8s/k8s-cli\">Consul K8s CLI Reference</a> in our documentation.</p>\n<h2><a href=\"#utilizing-vault-as-a-secrets-backend-for-consul-on-kubernetes-oss\">»</a><a></a>Utilizing Vault as a Secrets Backend for Consul on Kubernetes (OSS)</h2>\n<p>Consul 1.11 enables users to set Hashicorp Vault as the native secrets backend instead of using Kubernetes secrets, which relies on base64 encoding by default and does not use encryption. Integration with Vault provides a secure and seamless workflow for Consul on Kubernetes users, by making it easier to leverage Vault for storing Consul on Kubernetes secrets and for issuing certificates for Consul components that are deployed onto Kubernetes. This provides a more comprehensive <a href=\"https://www.hashicorp.com/solutions/zero-trust-security\">zero trust</a> networking solution for customers and practitioners who are adopting Consul service mesh on Kubernetes.</p>\n<p>Now, using the Consul on Kubernetes Helm chart, the Vault secrets backend can be enabled so that Vault is used as the secrets backend of choice:</p><pre><code>global:\n secretsBackend:\n   vault:\n     enabled: true\n     consulServerRole: consul-server\n     consulClientRole: consul-client\n   connectCA:\n     address: \n     rootPKIPath: \n     intermediatePKIPath: \n   gossipEncryption:\n     secretName: secret/data/consul/gossip\n     secretKey: key\n   tls:\n     enabled: true\n     caCert:\n       secretName: \"pki/cert/ca\"\nserver:\n serverCert:\n   secretName: \"pki/issue/consul-server\"</code></pre><p>The Helm chart offers an improved user experience for enabling Vault as the Connect CA, and also now provides the ability to retrieve a stored gossip encryption key from Vault, and issue a server certificate for the Consul servers from the Vault PKI engine. For more details please visit: <a href=\"https://www.consul.io/docs/k8s/installation/vault\">https://www.consul.io/docs/k8s/installation/vault</a> to learn how to get started.</p>\n<h2><a href=\"#next-steps\">»</a><a></a>Next Steps</h2>\n<p>We are excited for users to try this release of Consul and further expand their service mesh implementations. The Consul 1.11 release includes enhancements for all types of users leveraging Consul for service discovery and service mesh, across both containerized and non-containerized environments.</p>\n<p>Our goal with Consul is to provide an enterprise-ready, consistent control plane to discover and securely connect any application. For more information about Consul, please visit the<a href=\"https://www.consul.io/docs\"> Consul documentation</a>. To get started with Consul 1.11, please download operating system binaries from our <a href=\"https://releases.hashicorp.com/consul/\">release page</a> or install the latest <a href=\"https://github.com/hashicorp/consul-k8s/releases/tag/v0.39.0\">v0.39.0</a> Helm chart that supports Consul 1.11 for Kubernetes. Multi-tenancy with admin partitions is part of the Consul Enterprise binaries, and you can get started with a<a href=\"https://www.hashicorp.com/products/consul/trial\"> free Consul Enterprise trial here</a>.</p>","author":"Ashher Syed","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"31f6709dca8fbcfcd7d5d6baa8c1bd0f14c440b83011d7a00008fbdb6b960a6c","category":"Tech"}