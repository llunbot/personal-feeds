{"title":"What I Wish I Knew About Working In Development Right Out Of School","link":"https://smashingmagazine.com/2023/10/beginner-web-development-working-career/","date":1698418800000,"content":"<p>My journey in front-end web development started after university. I had no idea what I was going into, but it looked easy enough to get my feet wet at first glance. I dug around Google and read up on tons of blog posts and articles about a career in front-end. I did bootcamps and acquired a fancy laptop. I thought I was good to go and had all I needed.</p>\n<p>Then reality started to kick in. It started when I realized how vast of a landscape Front-End Land is. There are countless frameworks, techniques, standards, workflows, and tools — enough to fill a virtual Amazon-sized warehouse. Where does someone so new to the industry even start? My previous research did nothing to prepare me for what I was walking into.</p>\n<p>Fast-forward one year, and I feel like I’m beginning to find my footing. By no means do I consider myself a seasoned veteran at the moment, but I have enough road behind me to reflect back on what I’ve learned and what I <em>wish</em> I knew about the realities of working in front-end development when starting out. This article is about that.</p>\nThe Web Is Big Enough For Specializations\n<p>At some point in my journey, I enrolled myself in a number of online courses and bootcamps to help me catch up on everything from data analytics to cybersecurity to software engineering at the same time. These were things I kept seeing pop up in articles. I was so confused; I believed all of these disciplines were interchangeable and part of the same skill set.</p>\n<p>But that is just what they are: <strong>disciplines</strong>. </p>\n<p>What I’ve come to realize is that being an “expert” in everything is a lost cause in the ever-growing World Wide Web.</p>\n<p>Sure, it’s possible to be <a href=\"https://css-tricks.com/ever-evolving-spectrum-web/\">generally familiar with a wide spectrum of web-related skills</a>, but it’s hard for me to see how to develop “deep” learning of everything. There will be <a href=\"https://css-tricks.com/the-widening-responsibility-for-front-end-developers/\">weak spots in anyone’s skillset.</a></p>\n<p>It would take a lifetime masterclass to get everything down-pat. Thank goodness there are ways to specialize in specific areas of the web, whether it is accessibility, performance, standards, typography, animations, interaction design, or many others that could fill the rest of this article. It’s OK to be one developer with a small cocktail of niche specialties. We need to depend on each other as much as any Node package in a project relies on a number of dependencies.</p>\nBurnout And Imposter Syndrome Are Real\n<p>My initial plan for starting my career was to master as many skills as possible and start making a living within six months. I figured if I could have a wide set of strong skills, then maybe I could lean on one of them to earn money and continue developing the rest of my skills on my way to becoming a full-stack developer.</p>\n<p>I got it wrong. It turned out that I was chasing my tail in circles, trying to be everything to everyone. Just as I’d get an “a-ha!” moment learning one thing, I’d see some other new framework, CSS feature, performance strategy, design system, and so on in my X/Twitter feed that was calling my attention. I never really did get a feeling of accomplishment; it was more a fear of missing out and that I was an imposter disguised as a front-ender.</p>\n<p>I continued burning the candle at both ends to absorb everything in my path, thinking I might reach some point at which I could call myself a full-stack developer and earn the right to slow down and coast with my vast array of skills. But I kept struggling to keep up and instead earned many sleepless nights cramming in as much information as I could.</p>\n<p>Burnout is something I don’t wish on anyone. I was tired and mentally stressed. I could have done better. I engaged in every Twitter space or virtual event I could to learn a new trick and land a steady job. Imagine that, with my busy schedule, I still pause it to listen to hours of online events. I had an undying thirst for knowledge but needed to channel it in the right direction.</p>\nWe Need Each Other\n<p>I had spent so much time and effort consuming information with the intensity of a firehose running at full blast that I completely overlooked what I now know is an essential asset in this industry: <strong>a network of colleagues.</strong></p>\n<p>I was on my own. Sure, I was sort of engaging with others by reading their tutorials, watching their video series, reading their social posts, and whatnot. But I didn’t really <em>know</em> anyone personally. I became familiar with all the big names you probably know as well, but it’s not like I worked or even interacted with anyone directly.</p>\n<p>What I know now is that <strong>I needed personal advice every bit as much as more technical information</strong>. It often takes the help of someone else to learn how to ride a bike, so why wouldn’t it be the same for writing code? </p>\n<p>Having a mentor or two would have helped me maintain balance throughout my technical bike ride, and now I wish I had sought someone out much earlier. </p>\n<p>I should have asked for help when I needed it rather than stubbornly pushing forward on my own. I was feeding my burnout more than I was making positive progress.</p>\nStart With The Basics, Then Scale Up\n<p>My candid advice from my experience is to <strong>start learning front-end fundamentals</strong>. HTML and CSS are unlikely to go away. I mean, everything parses in HTML at the end of the day, right? And CSS is used on <a href=\"https://w3techs.com/technologies/details/ce-css\">97% of all websites</a>.</p>\n<p>The truth is that <strong>HTML and CSS are big buckets</strong>, even if they are usually discounted as “basic” or “easy” compared to traditional programming languages. Writing them well matters for everything. Sure, go ahead and jump straight to JavaScript, and it’s possible to cobble together a modern web app with an architecture of modular components. You’ll still need to know how your work renders and ensure it’s accessible, semantic, performant, cross-browser-supported, and responsive. You may pick those skills up along the way, but why not learn them up-front when they are essential to a good user experience?</p>\n<p>So, before you click on yet another link extolling the virtues of another flavor of JavaScript framework, my advice is to start with the essentials:</p>\n<ul>\n<li>What is a “semantic” HTML element?</li>\n<li>What is the CSS Box Model, and why does it matter?</li>\n<li>How does the CSS Cascade influence the way we write styles?</li>\n<li>How does a screenreader announce elements on a page?</li>\n<li>What is the difference between inline and block elements?</li>\n<li>Why do we have logical properties in CSS when we already have physical ones?</li>\n<li>What does it mean to create a stacking context or remove an element from the document flow?</li>\n<li>How do certain elements look in one browser versus another?</li>\n</ul>\n<p>The list could go on and on. I bet many of you know the answers. I wonder, though, <a href=\"https://css-tricks.com/explain-the-first-10-lines-of-twitter-source-code/\">how many you could explain effectively</a> to someone beginning a front-end career. And, remember, things change. New standards are shipped, new tricks are discovered, and certain trends will fade as quickly as they came. While staying up-to-date with front-end development on a macro level is helpful, I’ve learned to integrate specific new technologies and strategies into my work only when I have a use case for them and concentrate more on my own learning journey — establish a solid foundation with the essentials, then progress to real-life projects.</p>\n<p>Progress is a process. May as well start with evergreen information and add complexity to your knowledge when you need it instead of drinking from the firehose at all times.</p>\nThere’s A Time And Place For Everything\n<p>I’ll share a personal story. I spent over a month enrolled in a course on React. I even had to apply for it first, so it was something I had to be accepted into — and I was! I was super excited.</p>\n<p>I struggled in the class, of course. And, yes, I dropped out of the program after the first month.</p>\n<p>I don’t believe struggling with the course or dropping out of it is any indication of my abilities. I believe it has a lot more to do with timing. The honest truth is that I thought learning React before the fundamentals of front-end development was the right thing to do. React seemed to be the number one thing that everyone was blogging about and what every employer was looking for in a new hire. The React course I was accepted into was my ticket to a successful and fulfilling career!</p>\n<p>My motive was right, but I was not ready for it. I should have stuck with the basics and scaled up when I was good and ready to move forward. Instead of building up, I took a huge shortcut and wound up paying for it in the end, both in time and money.</p>\n<p>That said, there’s probably no harm in dipping your toes in the water even as you learn the basics. There are plenty of events, hackathons, and coding challenges that offer safe places to connect and collaborate with others. Engaging in some of these activities early on may be a great learning opportunity to see how your knowledge supports or extends someone else’s skills. It can help you see where you fit in and what considerations go into real-life projects that require other people.</p>\n<p>There was a time and place for me to learn React. The problem is I jumped the gun and channeled my learning energy in the wrong direction.</p>\nIf I Had To Do It All Over Again…\n<p>This is the money question, right? Everyone wants to know exactly where to start, which classes to take, what articles to read, who to follow on socials, where to find jobs, and so on. <strong>The problem with highly specific advice like this is that it’s highly personalized as well.</strong> In other words, what has worked for me may not exactly be the right recipe for you.</p>\n<p>It’s not the most satisfying answer, but the path you take really does depend on what <em>you want to do</em> and where <em>you want to wind up</em>. Aside from gaining a solid grasp on the basics, I wouldn’t say your next step is jumping into React when your passion is web typography. Both are skill sets that can be used together but are separate areas of concern that have different learning paths.</p>\n<blockquote><strong>So, what would I do differently if I had the chance to do this all over again?</strong><br /><br />For starters, I wouldn’t skip over the fundamentals like I did. I would probably find opportunities to enhance my skills in those areas, like taking the <a href=\"https://www.freecodecamp.org/learn/2022/responsive-web-design/\">FreeCodeCamp’s responsive web design course</a> or practice recreating designs from the Figma community in CodePen to practice thinking strategically about structuring my code. Then, I might move on to the <a href=\"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\">JavaScript Algorithms and Data Structures course</a> to level up basic JavaScript skills.<br /><br />The one thing I know I would do right away, though, is to find a mentor whom I can turn to when I start feeling as though I’m struggling and falling off track.</blockquote>\n\n<p>Or maybe I should have started by <a href=\"https://www.freecodecamp.org/learn/2022/responsive-web-design/\">learning how to learn</a> in the first place. Figuring out what kind of learner I am and familiarizing myself with learning strategies that help me manage my time and energy would have gone a long way.</p>\nOh, The Places You’ll Go!\n<p>Front-end development is full of opinions. The best way to navigate this world is by <strong>mastering the basics</strong>. I shared my journey, mistakes, and ways of doing things differently if I were to start over. Rather than prescribing you a specific way of going about things or giving you an endless farm of links to all of the available front-end learning resources, I’ll share a few that I personally found helpful.</p>\n<p>In the end, I’ve found that I care a lot about contributing to open-source projects, participating in hackathons, having a learning plan, and interacting with mentors who help me along the way, so those are the buckets I’m organizing things into.</p>\n<h4>Open Source Programs</h4>\n<ul>\n<li><a href=\"https://navendu.me/posts/open-source-internship-programs/\">20+ Open Source Internship Programs</a> (Navendu Pottekkat)</li>\n<li><a href=\"https://www.microsoft.com/en-us/research/academic-program/rl-open-source-fest/\">Reinforcement Learning Open-Source Fest</a> (Microsoft)</li>\n<li><a href=\"https://hacktoberfest.com/\">Hacktoberfest</a></li>\n<li><a href=\"https://gssoc.girlscript.tech/\">GirlScript Summer of Code</a></li>\n</ul>\n<h4>Hackathons</h4>\n<ul>\n<li><a href=\"https://devpost.com/hackathons\">DevPost</a></li>\n<li><a href=\"https://www.hackerearth.com/challenges/hackathon/\">HackerEarth</a></li>\n<li><a href=\"https://mlh.io/seasons/2023/events\">Major League Hacking</a></li>\n</ul>\n<h4>Developer Roadmaps</h4>\n<ul>\n<li><a href=\"https://bahdcoder.notion.site/The-Frontend-Engineer-Growth-Tracker-ffc32b5db14646f7acad8552272ce134\">The Frontend Engineer Growth Tracker</a> (Notion Template)</li>\n<li><a href=\"https://roadmap.sh/\">Roadmap.sh</a></li>\n</ul>\n<h4>Mentorship</h4>\n<ul>\n<li><a href=\"https://codingcoach.io/\">Coding Coach</a></li>\n<li><a href=\"https://adplist.org/\">ADPList</a></li>\n<li><a href=\"https://www.frontendmentor.io/community\">Frontend mentor</a></li>\n</ul>\n<p>Whatever your niche is, wherever your learning takes you, just make sure it’s yours. What works for one person may not be the right path for you, so spend time exploring the space and picking out what excites you most. The web is big, and there is a place for everyone to shine, especially <em>you</em>.</p>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"7b49c70ca4a198e34dbcbfc7907872841e28f0a88837cedb1f6ec49045b99517","category":"Tech"}