{"title":"Connect users to data through your apps with Storage Browser for Amazon S3","link":"https://aws.amazon.com/blogs/aws/connect-users-to-data-through-your-apps-with-storage-browser-for-amazon-s3/","date":1733086223000,"content":"<p>Today, we’re introducing <a href=\"http://aws.amazon.com/s3/features/storage-browser/\">Storage Browser for Amazon S3</a>, an open source UI component you can add to your web applications to enable end users to interact with your data stored in <a href=\"https://aws.amazon.com/pm/serv-s3/?gclid=CjwKCAiA9IC6BhA3EiwAsbltOAZDBIN7hhvrWqRenV2xTXFCyH_IozOkV36Q8AnTRxxH2eWU1z8s7xoCJQYQAvD_BwE&amp;trk=777b3ec4-de01-41fb-aa63-cde3d034a89e&amp;sc_channel=ps&amp;ef_id=CjwKCAiA9IC6BhA3EiwAsbltOAZDBIN7hhvrWqRenV2xTXFCyH_IozOkV36Q8AnTRxxH2eWU1z8s7xoCJQYQAvD_BwE:G:s&amp;s_kwcid=AL!4422!3!638364429346!e!!g!!amazon%20s3!19096959014!142655567183\">Amazon Simple Storage Service (Amazon S3)</a>. With this frontend component, authorized end users can browse, upload, download, copy, and delete data from Amazon S3 based on their specific permissions, which you control using AWS identity and security services or custom managed solutions.</p> \n<p>Storage Browser for S3 eases the strain on developers looking to provide end users with access to data in S3, and it is designed so that end users, such as customers, partners, and employees, can efficiently work with data regardless of their familiarity with Amazon S3 or <a href=\"https://aws.amazon.com/free/?gclid=CjwKCAiA9IC6BhA3EiwAsbltOKMZXI2b5toVozz7or2jBkMDYe5yC1YjDEwVV1aAFNLWPF1LftfAmhoClegQAvD_BwE&amp;trk=d5254134-67ca-4a35-91cc-77868c97eedd&amp;sc_channel=ps&amp;ef_id=CjwKCAiA9IC6BhA3EiwAsbltOKMZXI2b5toVozz7or2jBkMDYe5yC1YjDEwVV1aAFNLWPF1LftfAmhoClegQAvD_BwE:G:s&amp;s_kwcid=AL!4422!3!433803620858!e!!g!!aws!1680401428!67152600164\">Amazon Web Services</a>. Additionally, developers can customize the look and feel of the Storage Browser interface to align with their application’s design.</p> \n<p>Let’s walk through a quick demo to show how you can get started.</p> \n<p><span><strong>Installation</strong></span><br /> Storage Browser for S3 is an <a href=\"https://aws.amazon.com/amplify/getting-started/?nc=sn&amp;loc=5\">AWS Amplify</a> UI React component, therefore, you must use it in a web application built with React or a React-based framework such as Next.Js, Gatsby, Remix, or any others. You also must have both AWS Amplify and the AWS Amplify UI React packages installed.</p> \n<p>This demo uses Next.js. If you want to learn how to set up an app from scratch, check out this step-by-step guide on <a href=\"https://community.aws/content/2pS4bRwaq61SSQBhYxne1Xyyv1z/setting-up-next-js-with-aws-amplify\">configuring AWS Amplify and using the Amplify React UI components with a new Next.js application</a>.</p> \n<p>You don’t need to install the entire @aws-amplify/ui-react library to use Storage Browser for S3.You can install only the storage-specific package with the following command if that is all you intend to use.</p> \n<p><code>npm i @aws-amplify/ui-react-storage aws-amplify</code></p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/npm-install-clean.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/npm-install-clean.png\" width=\"1490\" height=\"410\" /></a></p> \n<p>If you have an existing application that already has the Amplify UI React package installed, make sure to update your dependencies to import the latest version, and run <code>npm install</code> to update any existing installations.</p> \n<p>Lastly, if you’re building an application from scratch, make sure to run <code>npm create amplify@latest</code> in your application’s directory so you’re able to use the various categories provided by Amplify like auth, storage, and others.</p> \n<p><span><strong>Choosing an authorization mode</strong></span><br /> Storage Browser for S3 requires authentication and authorization to be configured so it can render the S3 buckets or prefixes that end users can access as well as the actions they can perform.</p> \n<p>There are three options for setting up permissions, each suitable for different use cases:</p> \n<p><strong>Using AWS Amplify Auth </strong>– This option is ideal when you want to provide your customers and third-party partners access to your data in Amazon S3. You can set up Amplify Storage which uses <a href=\"https://docs.amplify.aws/vue/build-a-backend/auth/set-up-auth/\">AWS Amplify Auth</a> by default to manage access control and security for files. This is powered by <a href=\"https://aws.amazon.com/cognito/\">Amazon Cognito</a> and comes with pre-built UI components for implementing user registration, sign-in, and sign-out flows.</p> \n<p><strong>Using AWS IAM Identity Center</strong> – This option is ideal for a scalable solution providing your whole workforce with access to your data in S3 through Storage Browser for S3 . You associate an <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-grants-get-started.html\">S3 Access Grants</a> instance with your <a href=\"https://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a> Identity Center to centrally manage S3 Access Grants permissions for your users and groups, including those hosted on external identity providers such as Microsoft Entra ID, Okta, and others. Additionally, each <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html\">AWS CloudTrail</a> data event for S3 references the end-user identity that accessed your data which helps to increase the observability for your data access.</p> \n<p><strong>Using IAM roles with Amazon S3 Access Grants</strong> – This option is ideal when you want to provide IAM principals with access to your data through Storage Browser for S3. To set this up, you must first create an S3 Access Grants instance that you can use to map permissions for S3 buckets and prefixes to the desired IAM identities. Then you create an IAM role that has permissions to invoke s3:GetDataAccess to get temporary least-privilege access to S3 buckets or prefixes.</p> \n<p>This demo assumes the end users are not part of our organization so Amplify Auth is a great match for this case.</p> \n<p><span><strong>Setting up permissions</strong></span><br /> First, you must <a href=\"https://docs.amplify.aws/react/build-a-backend/storage/set-up-storage/\">set up Amplify Storage by following this guide</a>. Then, open <code>amplify/storage/resource.ts</code> to declare an S3 bucket alongside the desired access rules following the <a href=\"https://docs.amplify.aws/react/build-a-backend/storage/authorization/\">Amplify authorization model</a> which utilizes prefixes to configure isolated storage for authorized users.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-amplify-storage-s3-bucket-configuration.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-amplify-storage-s3-bucket-configuration.png\" width=\"601\" height=\"369\" /></a></p> \n<p>Next, create a component called <strong>StorageBrowser</strong> which encapsulates the integration with Amplify Auth and that we can easily drop in a page later. Make sure to call <code>Amplify.config()</code> to stitch it all together with a a reference to <code>amplify_outputs.json</code> as a parameter.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-storage-browser-component.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-storage-browser-component.png\" width=\"514\" height=\"307\" /></a></p> \n<p>Visit the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/setup-storagebrowser.html\">S3 User Guide</a> for detailed instructions for setting up authentication and authorization for Storage Browser for S3.</p> \n<p><span><strong>Adding Storage Browser for S3 to my application<br /> </strong></span>Now that the component is created, you just need to add it to your application in a page where you want to render it by declaring <code>&lt;StorageBrowser/&gt;</code>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-using-StorageBrowser-component.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-using-StorageBrowser-component.png\" width=\"319\" height=\"142\" /></a></p> \n<p>Use <code>npm run dev</code> to run the application. After it loads, navigate to the page where you added Storage Browser For S3 and you should see it loaded with the default layout. Notice also that it is configured with the same paths and permissions that we defined in <code>amplify/storage/resource.ts</code> above allowing users to browse, read, write, and delete files inside the S3 buckets and prefixes that we have set up.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/19/browser-component-2.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/19/browser-component-2.png\" alt=\"browser component\" width=\"2220\" height=\"518\" /></a></p> \n<p>You can download files and browse folders while accessing management operations from the sub-menu which automatically greys out any unavailable actions.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/30/storage-browser-new-2.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/30/storage-browser-new-2.png\" alt=\"storage-browser-new-2\" width=\"1248\" height=\"710\" /></a></p> \n<p>Storage Browser for S3 automatically pages results and makes it possible to filter and search for files and folders, making it easy to navigate and manage data.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/30/storage-browser-new-1.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/30/storage-browser-new-1.png\" alt=\"storage-browser-new-1\" width=\"1041\" height=\"294\" /></a></p> \n<p>All data access is governed by the configured authorization model enabling end users to seamlessly interact with S3 buckets and prefixes through a highly intuitive interface without compromising your security or compliance requirements.</p> \n<p><span><strong>Customizing the interface</strong></span><br /> Thanks to its flexible design, you can customize Storage Browser For S3 to match the look and feel of your application. Much like any other Amplify UI components it will use the Amplify theme you have active in your application by default. However, you can easily modify any of its components such as the buttons, breadcrumb, the paging controls, text fields, and others, by creating your own theme or targeting elements directly using CSS.</p> \n<p>To create a theme, first you must declare it using the <code>defineComponentTheme()</code> function from the @aws-amplify/ui-react/server library. You give it a name such as <code>'storage-browser'</code> and then target the elements that you want to style.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-creating-a-theme.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-creating-a-theme.png\" width=\"528\" height=\"559\" /></a></p> \n<p>You can even rearrange the layout as well if you want. In the code you can see that we are setting the <code>flexDirection</code> of all controls to <code>'row-reverse'</code>, for example.</p> \n<p>Then you create the theme using the <code>createTheme()</code> function using the storage-browser theme we declared earlier and apply it. We also override the <code>primaryColor</code> and make it green.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-using-the-theme.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/marked-using-the-theme.png\" width=\"676\" height=\"327\" /></a></p> \n<p>After the page is reloaded, you should see the Storage Browser for S3 component with its new more compact layout and new color scheme with green text.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/theme-results.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/27/theme-results.png\" width=\"1150\" height=\"326\" /></a></p> \n<p>You can customize essentially any element of the UI interface including any of the display texts such as the title where it says <strong>Home,</strong> or any others. The only exceptions are the details about the data, of course, such as the bucket names and keys. You can take advantage of this to add support for different languages, for example.</p> \n<p>Finally, if you prefer to create your own UI from scratch, you call the createStorageBrowser() function to create a Storage Browser for S3 component programatically. It returns a useView() hook that you can use to integrate with your own custom frontend, giving you full control over the look and feel while leveraging all of the same features. To learn more, see the documentation for more details on the <a href=\"https://sto-bro-docs.ddzh7dd1jott2.amplifyapp.com/react/connected-components/storage/storage-browser\">various customization options and how to configure them</a>.</p> \n<p><span><strong>Conclusion<br /> </strong></span>Storage Browser for S3 is a highly customizable and user-friendly AWS Amplify UI React component which enables end users to interact with data on Amazon S3 securely. It gives you full control of the access rules to ensure the frontend complies with your access requirements while providing a great user experience through an interface that you can style to make it appear as a natural extension of your application.</p> \n<p><span><strong>Things to know</strong></span></p> \n<p><strong>Getting started</strong> – You can install Storage Browser for S3 from the <a href=\"https://github.com/aws-amplify/amplify-ui\">GitHub page</a>. For more information on getting started, visit the <a href=\"https://ui.docs.amplify.aws/react/connected-components/storage/storage-browser\">UI documentation</a>.</p> \n<p><strong>Compatibility</strong> – Storage Browser for S3 is compatible with all <a href=\"https://aws.amazon.com/s3/storage-classes/\">Amazon S3 storage classes</a> except for Glacier Flexible Retrieval and S3 Glacier Deep Archive. It is compatible with S3 Intelligent-Tiering, but it’s not compatible with the S3 Intelligent-Tiering Archive Access Tier or the S3 Intelligent-Tiering Deep Archive Access Tier..</p> \n<p><strong>Performance and durability</strong> – Storage Browser for S3 includes built-in logic that enhances upload requests for high-throughput data transfer, calculates checksums of uploaded data (rejecting requests that fail these durability checks), and optimizes performance for faster load times in your application.</p> \n<p><strong>Pricing</strong> – Storage Browser for S3 is open source and you can integrate it with your applications at no extra cost. You only pay for your use of the underlying AWS resources you use with Storage Browser for S3.</p> \n<p><strong>Support</strong> – Storage Browser for S3 is backed by AWS Support just like any other feature of S3. Customers with Business and Enterprise Support plans get 24/7 access to AWS Support engineers to support their use of Storage Browser for S3.</p> \n<p><strong>Feedback</strong> – We invite you to <a href=\"https://github.com/orgs/aws-amplify/projects/137\">share feedback</a> on the functionality and the public roadmap for Storage Browser for S3.</p> \n<p></p> \n<a href=\"https://www.linkedin.com/in/codingmatheus/\">Matheus Guimaraes | @codingmatheus</a>","author":"Matheus Guimaraes","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"f9932d178c927b4caad6d071f9c583f9aea7a33e2dc3496ae9e6f40941335e54","category":"Tech"}