{"title":"Amazon S3 Encrypts New Objects By Default","link":"https://aws.amazon.com/blogs/aws/amazon-s3-encrypts-new-objects-by-default/","date":1672952589000,"content":"<p>At AWS, <a href=\"https://aws.amazon.com/blogs/enterprise-strategy/security-at-aws/\">security is the top priority.</a> Starting today, <a href=\"https://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a> encrypts all new objects by default. Now, S3 automatically applies server-side encryption (SSE-S3) for each new object, unless you specify a different encryption option. SSE-S3 was first launched in 2011. <a href=\"https://aws.amazon.com/blogs/aws/new-amazon-s3-server-side-encryption/\">As Jeff wrote at the time</a>: “Amazon S3 server-side encryption handles all encryption, decryption, and key management in a totally transparent fashion. When you PUT an object, we generate a unique key, encrypt your data with the key, and then encrypt the key with a [root] key.”</p> \n<p>This change puts another security best practice into effect automatically—with no impact on performance and no action required on your side. S3 buckets that do not use default encryption will now automatically apply SSE-S3 as the default setting. Existing buckets currently using S3 default encryption will not change.</p> \n<p>As always, you can choose to encrypt your objects using one of the three encryption options we provide: S3 default encryption (SSE-S3, the new default), <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html\">customer-provided encryption keys (SSE-C)</a>, or <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html\">AWS Key Management Service keys (SSE-KMS)</a>. To have an additional layer of encryption, you might also encrypt objects on the client side, using client libraries such as the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_sdk_cryptography.html\">Amazon S3 encryption client</a>.</p> \n<p>While it was simple to enable, the opt-in nature of SSE-S3 meant that you had to be certain that it was always configured on new buckets and verify that it remained configured properly over time. For organizations that require all their objects to remain encrypted at rest with SSE-S3, this update helps meet their encryption compliance requirements without any additional tools or client configuration changes.</p> \n<p>With today’s announcement, we have now made it “zero click” for you to apply this base level of encryption on every S3 bucket.</p> \n<p><span><strong>Verify Your Objects Are Encrypted<br /> </strong></span>The change is visible today in <a href=\"https://aws.amazon.com/cloudtrail/\">AWS CloudTrail</a> data event logs. You will see the changes in the S3 section of the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>, <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-inventory.html\">Amazon S3 Inventory</a>, <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_basics_metrics_recommendations.html\">Amazon S3 Storage Lens</a>, and as an additional header in the <a href=\"https://aws.amazon.com/cli/\">AWS CLI</a> and in the <a href=\"https://aws.amazon.com/developer/tools/\">AWS SDK</a>s over the next few weeks. We will update this blog post and documentation when the encryption status is available in these tools in all AWS Regions.</p> \n<p>To verify the change is effective on your buckets today, you can <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html\">configure CloudTrail to log data events</a>. By default, trails do not log data events, and there is <a href=\"https://aws.amazon.com/cloudtrail/pricing/\">an extra cost to enable it</a>. Data events show the resource operations performed on or within a resource, such as when a user uploads a file to an S3 bucket. You can log data events for Amazon S3 buckets, AWS Lambda functions, Amazon DynamoDB tables, or a combination of those.</p> \n<p>Once enabled, search for <code>PutObject</code> API for file uploads or <code>InitiateMultipartUpload</code> for multipart uploads. When Amazon S3 automatically encrypts an object using the default encryption settings, the log includes the following field as the name-value pair: <code>\"SSEApplied\":\"Default_SSE_S3\"</code>. Here is an example of a CloudTrail log (with data event logging enabled) when I uploaded a file to one of my buckets using the AWS CLI command <code>aws s3 cp backup.sh s3://private-sst</code>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2022/12/22/2022-12-22_08-16-52.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2022/12/22/2022-12-22_08-16-52.png\" alt=\"Cloudtrail log for S3 with default encryption enabled\" width=\"1235\" height=\"1100\" /></a></p> \n<p><span><strong>Amazon S3 Encryption Options</strong></span><br /> As I wrote earlier, SSE-S3 is now the new base level of encryption when no other encryption-type is specified. SSE-S3 uses Advanced Encryption Standard (AES) encryption with 256-bit keys managed by AWS.</p> \n<p>You can choose to encrypt your objects using <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html\">SSE-C</a> or <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html\">SSE-KMS</a> rather than with <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingServerSideEncryption.html\">SSE-S3</a>, either as “one click” default encryption settings on the bucket, or for individual objects in PUT requests.</p> \n<p><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html\">SSE-C</a> lets Amazon S3 perform the encryption and decryption of your objects while you retain control of the keys used to encrypt objects. With SSE-C, you don’t need to implement or use a client-side library to perform the encryption and decryption of objects you store in Amazon S3, but you do need to manage the keys that you send to Amazon S3 to encrypt and decrypt objects.</p> \n<p>With <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html\">SSE-KMS</a>, <a href=\"https://aws.amazon.com/kms/\">AWS Key Management Service (AWS KMS)</a> manages your encryption keys. Using AWS <span>KMS</span> to manage your keys provides several additional benefits. With AWS <span>KMS</span>, there are separate permissions for the use of the <span>KMS</span> key, providing an additional layer of control as well as protection against unauthorized access to your objects stored in Amazon S3. AWS <span>KMS</span> provides an audit trail so you can see who used your key to access which object and when, as well as view failed attempts to access data from users without permission to decrypt the data.</p> \n<p>When using an encryption client library, such as <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_sdk_cryptography.html\">the Amazon S3 encryption client</a>, you retain control of the keys and complete the encryption and decryption of objects client-side using an encryption library of your choice. You encrypt the objects before they are sent to Amazon S3 for storage. The Java, .Net, Ruby, PHP, Go, and C++ AWS SDKs support client-side encryption.</p> \n<p>You can follow <a href=\"https://aws.amazon.com/blogs/security/how-to-retroactively-encrypt-existing-objects-in-amazon-s3-using-s3-inventory-amazon-athena-and-s3-batch-operations/\">the instructions in this blog post if you want to retroactively encrypt existing objects in your buckets.</a></p> \n<p><span><strong>Available Now</strong></span><br /> This change is effective now, in <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/\">all AWS Regions</a>, including on <a href=\"https://aws.amazon.com/govcloud-us/\">AWS GovCloud (US)</a> and <a href=\"https://www.amazonaws.cn/en/about-aws/regional-product-services/\">AWS China</a> Regions. There is no additional cost for default object-level encryption.</p> \n<p><a href=\"https://twitter.com/sebsto\">-- seb</a></p>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"1d83d0e5afa5fe3cd096873b77e3aea52567ce065786dcc6b4e49b8640976ecc","category":"Tech"}