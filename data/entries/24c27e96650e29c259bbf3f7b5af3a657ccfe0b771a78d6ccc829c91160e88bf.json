{"title":"IAM Access Analyzer updates: Find unused access, check policies before deployment","link":"https://aws.amazon.com/blogs/aws/iam-access-analyzer-updates-find-unused-access-check-policies-before-deployment/","date":1701052897000,"content":"<p>We are launching two new features for <a href=\"https://aws.amazon.com/iam/features/analyze-access/\">AWS Identity and Access Management (IAM) Access Analyzer</a> today:</p> \n<p><strong>Unused Access Analyzer</strong> – A new analyzer that continuously monitors roles and users looking for permissions that are granted but not actually used. Central security teams can take advantage of a dashboard view that will help them to find the accounts that can most benefit from a review of unused permissions, roles, and IAM users.</p> \n<p><strong>Custom Policy Checks</strong> – Validation that newly authored policies do not grant additional (and perhaps unintended) permissions. You can exercise tighter control over your IAM policies and accelerate the process of moving AWS applications from development to production by adding automated policy reviews to your CI/CD pipelines and custom policy tools.</p> \n<p>Let’s take a look at today’s launches!</p> \n<p><span><strong>Unused Access Analyzer</strong></span><br /> You can already create an analyzer that monitors for external access. With today’s launch you can create one that looks for access permissions that are either overly generous or that have fallen into disuse. This includes unused IAM roles, unused access keys for IAM users, unused passwords for IAM users, and unused services and actions for active IAM roles and users.</p> \n<p>After reviewing the findings generated by an organization-wide or account-specific analyzer, you can take action by removing permissions that you don’t need. You can create analyzers and analyze findings from the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>, CLI, or API. Let’s start with the IAM Console. I click <strong>Analyzers and settings</strong> in the left-side navigation:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_nav_1.png\" width=\"275\" height=\"589\" /></p> \n<p>I can see my current analyzers (none, in this case). I click <strong>Create analyzer</strong> to proceed:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_analyzers_1.png\" width=\"901\" height=\"409\" /></p> \n<p>I specify <strong>Unused access analysis</strong>, leave the default tracking period of 90 days as-is, and opt to check my account rather than my Organization, then I click <strong>Create analyzer</strong>:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_create_1.png\" width=\"800\" height=\"1062\" /></p> \n<p>My analyzer is created, and I check back a little while later to see what it finds. My findings were available within a minute, but this will vary. Here are some of the findings:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_unused_findings_1.png\" width=\"805\" height=\"675\" /></p> \n<p>As you can see, I have lots of unused IAM roles and permissions (clearly I am a bad Role model). I can click on a Finding to learn more:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_a_finding_1.png\" width=\"905\" height=\"625\" /></p> \n<p>If this is a role that I need, I can click <strong>Archive</strong> to remove it from the list of active findings. I can also create archive rules that will do the same for similar findings:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_make_rule_1.png\" width=\"801\" height=\"415\" /></p> \n<p>The external access analyzer works in a similar way, and is a perfect place to start when you are new to Access Analyzer and are ready to find and remove extra permissions:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/aaa_findings_external_1.png\" width=\"900\" height=\"455\" /></p> \n<p>The dashboard gives me an overview of all active findings:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/aaa_dash_overview_1.png\" width=\"900\" height=\"446\" /></p> \n<p>If I create an analyzer and specify my Organization as the Zone of trust, I can also view a list that shows the accounts that have the largest number of active findings:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/aaa_dash_most_unused_1.png\" width=\"900\" height=\"612\" /></p> \n<p>This feature is also available from the command line. I can create a new analyzer like this:</p> \n<div> \n <pre><code>$ aws accessanalyzer create-analyzer --type ACCOUNT_UNUSED_ACCESS \\\n  --analyzer-name OneWeek \\\n  --configuration '{\"unusedAccess\" : {\"unusedAccessAge\" : 90}}'\n----------------------------------------------------------------------------\n|                              CreateAnalyzer                              |\n+-----+--------------------------------------------------------------------+\n|  arn|  arn:aws:access-analyzer:us-east-1:348414629041:analyzer/OneWeek   |\n+-----+--------------------------------------------------------------------+\n</code></pre> \n</div> \n<p>I can list the findings, perhaps all I want is the actual resource Ids to start:</p> \n<div> \n <pre><code>$  aws accessanalyzer list-findings-v2 \\\n  --analyzer-arn  arn:aws:accessanalyzer:us-east-1:123456789012:analyzer/OneWeek \n  --output json |\n jq -r '.findings[] | .resource'\n\narn:aws:iam::123456789012:role/MobileHub_Service_Role\narn:aws:iam::123456789012:role/EKSClusterRole\narn:aws:iam::123456789012:role/service-role/AWSDataSyncS3BucketAccess-jbarr-data\narn:aws:iam::123456789012:role/rds-monitoring-role\narn:aws:iam::123456789012:role/IsengardRoleForDependencyAssuranceIamAnalyzer\narn:aws:iam::123456789012:role/service-role/s3crr_role_for_rep-src_to_rep-dest\narn:aws:iam::123456789012:role/service-role/AWSDeepRacerServiceRole\n...\n</code></pre> \n</div> \n<p>I can archive findings by Id:</p> \n<div> \n <pre><code>$ aws accessanalyzer update-findings  \\\n  --analyzer-arn arn:aws:accessanalyzer:us-east-1:123456789012:analyzer/OneWeek \n  --status ARCHIVED --ids \"f0492061-8638-48ac-b91a-f0583cc839bf\"</code></pre> \n</div> \n<p>And I can perform the same operations using the <a href=\"https://docs.aws.amazon.com/access-analyzer/latest/APIReference/Welcome.html\">IAM Access Analyzer API</a>.</p> \n<p>This feature is priced based on the number of IAM roles analyzed each month and is available in all AWS Regions where IAM is available.</p> \n<p><span><strong>Custom Policy Checks<br /> </strong></span>You can now validate that IAM policies adhere to your security standards ahead of deployments and proactively detect non-conformant updates to policies. This will help you to innovate more quickly, move apps from development to production more efficiently, and to have confidence that any changes you make represent your intent.</p> \n<p>Let’s start with my <strong>allow-all-ssm</strong> policy:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_policy_start_1.png\" width=\"805\" height=\"600\" /></p> \n<p>For illustrative purposes, I edit it to add S3 access:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_policy_s3_1.png\" width=\"365\" height=\"294\" /></p> \n<p>Then I click <strong>Check for new access</strong>, confirm that I understand that a charge will be made, and click <strong>Check policy:</strong></p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_check_ok_1.png\" width=\"804\" height=\"281\" /></p> \n<p>The <a href=\"https://www.amazon.science/blog/a-gentle-introduction-to-automated-reasoning\">automated reasoning</a> verifies the policy and tells me that I did enable new access. If that was my intent I click <strong>Next</strong> to proceed, otherwise I rethink my changes to the policy:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/20/aaa_new_access_2.png\" width=\"806\" height=\"388\" /></p> \n<p>This is a very simple and contrived example, but I am confident that you can see how useful and valuable this can be to your security efforts. You can also access this from the CLI (<code>check-no-new-access</code>) and API (<code>CheckNoNewAccess</code>).</p> \n<p>There’s also another command and function that is designed to be used in your CI/CD pipelines, <a href=\"https://aws.amazon.com/cloudformation/\">AWS CloudFormation</a> hooks, and custom policy tools. <code>check-access-not-granted</code> and <code>CheckAccessNotGranted</code> accept a policy document and a permission such as <code>s3:Get*</code>, and check to make sure that the policy does not grant the permission. You could use this, for example, to make sure that a policy which specifies that Security Hub should be disabled cannot be deployed. This will help you to move from development to production with the confidence that your policies adhere to your organization’s security standards.</p> \n<p>This feature is priced based on the number of checks that are performed each month and is available in all AWS commercial and AWS GovCloud Regions.</p> \n<p><span><strong>Learn more</strong></span><br /> <a href=\"https://aws.amazon.com/iam/features/analyze-access/\">AWS Identity and Access Management (IAM) Access Analyzer</a></p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"24c27e96650e29c259bbf3f7b5af3a657ccfe0b771a78d6ccc829c91160e88bf","category":"Tech"}