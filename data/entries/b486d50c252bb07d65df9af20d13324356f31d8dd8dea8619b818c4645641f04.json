{"title":"Amazon EKS Pod Identity simplifies IAM permissions for applications on Amazon EKS clusters","link":"https://aws.amazon.com/blogs/aws/amazon-eks-pod-identity-simplifies-iam-permissions-for-applications-on-amazon-eks-clusters/","date":1701052414000,"content":"<p>Starting today, you can use Amazon EKS Pod Identity to simplify your applications that access AWS services. This enhancement provides you with a seamless and easy to configure experience that lets you define required IAM permissions for your applications in <a href=\"https://aws.amazon.com/eks/\">Amazon Elastic Kubernetes Service (Amazon EKS)</a> clusters so you can connect with AWS services outside the cluster.</p> \n<p>Amazon EKS Pod Identity helps you solve growing challenges for managing permissions across many of your EKS clusters.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/23/2023-ekspodidentity-rev-1-1-1.png\" width=\"2738\" height=\"884\" /></p> \n<p><span><strong>Simplifying experience with Amazon EKS Pod Identity</strong></span><br /> In 2019, we introduced <a href=\"https://aws.amazon.com/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/\">IAM roles for service accounts (IRSA)</a>. IRSA lets you associate an IAM role with a Kubernetes service account. This helps you to implement the principle of least privilege by giving pods only the permissions they need. This approach prioritizes pods in IAM and helps developers configure applications with fine-grained permissions that enable the least privileged access to AWS services.</p> \n<p>Now, with Amazon EKS Pod Identity, it’s even easier to configure and automate granting AWS permissions to Kubernetes identities. As the cluster administrator, you no longer need to switch between Amazon EKS and IAM services to authenticate your applications to all AWS resources.</p> \n<p>The overall workflow to start using Amazon EKS Pod Identity can be summarized in a few simple steps:</p> \n<ul> \n <li>Step 1: Create an IAM role with required permissions for your application and specify <code>pods.eks.amazonaws.com</code> as the service principal in its trust policy.</li> \n <li>Step 2: Install Amazon EKS Pod Identity Agent add-on using the Amazon EKS console or AWS Command Line Interface (AWS CLI).</li> \n <li>Step 3: Map the role to a service account directly in the Amazon EKS console, APIs, or AWS CLI.</li> \n</ul> \n<p>Once it’s done, any new pods that use that service account will automatically be configured to receive IAM credentials.</p> \n<p><span><strong>Let’s get started<br /> </strong></span>Let me show you how you can get started with EKS Pod Identity. For the demo in this post, I need to configure permission for a simple API running in my Amazon EKS cluster, which will return the list of files in my <a href=\"https://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a> bucket.</p> \n<p>First, I need to create an IAM role to provide the required permissions so my applications can run properly. In my case, I need to configure permissions to access my S3 bucket.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-ekspodidentity-1.jpg\" width=\"2243\" height=\"1428\" /></p> \n<p>Next, on the same IAM role, I need to configure its trust policy and configure the principal to <code>pods.eks.amazonaws.com</code>. The following is the IAM template that I use:</p> \n<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"pods.eks.amazonaws.com\"\n            },\n            \"Action\": [\n                \"sts:AssumeRole\",\n                \"sts:TagSession\"\n            ]\n        }\n    ]\n}</code></pre> \n<p>At this stage, my IAM role is ready, and now we need to configure the Amazon EKS Pod Identity Agent in my cluster. For this article, I’m using my existing EKS cluster. If you want to learn how to do that, visit <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html\">Getting started with Amazon EKS</a>.</p> \n<p>Moving on, I navigate to the Amazon EKS dashboard and then select my EKS cluster.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-ekspodidentity-2.jpg\" width=\"2560\" height=\"1256\" /></p> \n<p>In my EKS cluster page, I need to select the <strong>Add-ons</strong> tab and then choose <strong>Get more add-ons</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-ekspodidentity-3.jpg\" width=\"2560\" height=\"1249\" /></p> \n<p>Then, I need to add the Amazon EKS Pod Identity Agent add-on.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/24/2023-ekspodidentity-4-1.jpg\" width=\"2448\" height=\"1607\" /></p> \n<p>On the next page, I can add additional configuration if needed. In this case, I leave the default configuration and choose <strong>Next</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/24/2023-ekspodidentity-rev-2-1-1-1.png\" width=\"2507\" height=\"1121\" /></p> \n<p>Then, I just need to review my add-on configuration and choose <strong>Create</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/24/2023-ekspodidentity-rev-2-1-2-1.png\" width=\"2493\" height=\"1395\" /></p> \n<p>After a few minutes, the Amazon EKS Pod Identity Agent add-on is active for my cluster.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/23/2023-ekspodidentity-rev-1-1-1.png\" width=\"2738\" height=\"884\" /></p> \n<p>Once I have Amazon EKS Pod Identity in my cluster, I need to associate the IAM role to my Kubernetes pods.</p> \n<p>I need to navigate to the <strong>Access</strong> tab in my EKS cluster. On the <strong>Pod Identity associations</strong> section, I select <strong>Create Pod Identity association</strong> to map my IAM role to Kubernetes pods.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-ekspodidentity-7.jpg\" width=\"2560\" height=\"1517\" /></p> \n<p>Here, I use the IAM role that I created in the beginning. I also need to define my Kubernetes namespace and service account. If they don’t exist yet, I can type in the name of the namespace and service account. If they already exist, I can select them from the dropdown. Then, I choose <strong>Create</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-ekspodidentity-8.jpg\" width=\"1834\" height=\"1764\" /></p> \n<p>Those are all the steps I need to do to configure IAM permissions for my applications running on Amazon EKS with EKS Pod Identity. Now, I can see my IAM role is listed in <strong>Pod Identity associations</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-ekspodidentity-9.jpg\" width=\"2560\" height=\"1038\" /></p> \n<p>When I test my API running on Amazon EKS, it runs as expected and returns the list of files in my S3 bucket.</p> \n<pre><code>curl -X https://&lt;API-URL&gt; -H \"Accept: application/json\" \n\n{\n   \"files\": [\n         \"test-file-1.md\",\n         \"test-file-2.md\"\n    ]        \n}</code></pre> \n<p>I found that Amazon EKS Pod Identity simplifies the experience of managing IAM roles for my applications running on Amazon EKS. I can easily reuse IAM roles across multiple EKS clusters without needing to update the role trust policy each time a new cluster is created.</p> \n<p><strong><span>New AWS APIs to configure EKS Pod Identity<br /> </span></strong>You also have the flexibility to configure Amazon EKS Pod Identity for your cluster using AWS CLI. Amazon EKS Pod Identity provides a new set of APIs that you can use.</p> \n<p>For example, I can use <code>aws eks create-addon</code> to install the Amazon EKS Pod Identity Agent add-on into my cluster. Here’s the AWS CLI command:</p> \n<pre><code>$ aws eks create-addon \\\n--cluster-name &lt;CLUSTER_NAME&gt; \\\n--addon-name eks-pod-identity-agent \\\n--addon-version v1.0.0-eksbuild.1\n\n{\n    \"addon\": {\n    \"addonName\": \"eks-pod-identity-agent\",\n    \"clusterName\": \"&lt;CLUSTER_NAME&gt;\",\n    \"status\": \"CREATING\",\n    \"addonVersion\": \"v1.0.0-eksbuild.1\",\n    \"health\": {\n        \"issues\": []\n        },\n    \"addonArn\": \"&lt;ARN&gt;\",\n    \"createdAt\": 1697734297.597,\n    \"modifiedAt\": 1697734297.612,\n    \"tags\": {}\n    }\n}</code></pre> \n<p>Another example of what you can do with AWS APIs is to map the IAM role into your Kubernetes pods.</p> \n<pre><code>$ aws eks create-pod-identity-association \\\n  --cluster-name &lt;CLUSTER_NAME&gt; \\\n  --namespace &lt;NAMESPACE&gt; \\\n  --service-account &lt;SERVICE_ACCOUNT_NAME&gt; \\\n  --role-arn &lt;IAM_ROLE_ARN&gt;</code></pre> \n<p><span><strong>Things to know<br /> </strong></span></p> \n<p><strong>Availability</strong> – Amazon EKS Pod Identity is available in all AWS Regions supported by Amazon EKS, except the AWS GovCloud (US-East), AWS GovCloud (US-West), China (Beijing, operated by Sinnet), and China (Ningxia, operated by NWCD).</p> \n<p><strong>Pricing</strong> – Amazon EKS Pod Identity is available at no charge.</p> \n<p><strong>Supported Amazon EKS cluster</strong>  – Amazon EKS Pod Identity supports Kubernetes running version 1.24 and above in Amazon EKS. You can see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/pod-identities.html#pod-id-cluster-versions\">EKS Pod Identity cluster versions</a> for more information.</p> \n<p><strong>Supported AWS SDK versions</strong> – You need to update your application to use the latest AWS SDK versions. Check out <a href=\"https://aws.amazon.com/developer/tools/\">AWS developer tools</a> to find out how to install and update your AWS SDK.</p> \n<p>Get started today and visit <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/pod-identities.html\">EKS Pod Identities</a> documentation page to learn more about how to simplify IAM management for your applications.</p> \n<p>Happy building!<br /> — <a href=\"https://www.linkedin.com/in/donnieprakoso\">Donnie</a></p>","author":"Donnie Prakoso","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"b486d50c252bb07d65df9af20d13324356f31d8dd8dea8619b818c4645641f04","category":"Tech"}