{"title":"Visual Editing Comes To The Headless CMS","link":"https://smashingmagazine.com/2023/06/visual-editing-headless-cms/","date":1687251600000,"content":"<p>A couple of years ago, my friend Maria asked me to build a website for her architecture firm. For projects like this, I would normally use a headless content management system (CMS) and build a custom front end, but this time I advised her to use a site builder like Squarespace or Wix.</p>\n<p>Why a site builder? Because Maria is a highly visual and creative person and I knew she would want everything to look just right. She needed the visual feedback loop of a site builder and Squarespace and Wix are two of the most substantial offerings in the visual editing space.</p>\n<p>In my experience, content creators like Maria are much more productive when they can see their edits reflected on their site in a live preview. The problem is that visual editing has traditionally been supported only by site-builders, and they are often of the “low” or “no” code varieties. Visual editing just hasn’t been the sort of thing you see on a more modern stack, like a headless CMS.</p>\n<p>Fortunately, this visual editing experience is starting to make its way to headless CMSs! And that’s what I want to do in this brief article: introduce you to headless CMSs that currently offer visual editing features.</p>\n<p>But first…</p>\nWhat Is Visual Editing, Again?\n<p>Visual editing has been around since the early days of the web. Anyone who has used Dreamweaver in the past probably experienced an early version of visual editing.</p>\n<p>Visual editing is when you can see a live preview of your site while you’re editing content. It gives the content creator an instantaneous visual feedback loop and shows their changes in the context of their site.</p>\n<p>There are two defining features of visual editing:</p>\n<ul>\n<li>A live preview so content creators can see their changes reflected in the context of their site.</li>\n<li>Clickable page elements in the preview so content creators can easily navigate to the right form fields.</li>\n</ul>\n<p>Visual editing has been standard among no-code and low-code site-builders like Squarespace, Wix, and Webflow. But those tools are not typically used by developers who want control over their tech stack. Fortunately, now we’re seeing visual editing come to headless CMSs.</p>\nVisual Editing In A Headless CMS\n<p>A headless CMS treats your content more like a database that's decoupled from the rendering of your site.</p>\n<p>Until recently, headless CMSs came with a big tradeoff: content creators are disconnected from the front end, making it difficult to preview their site. They can't see updates as they make them.</p>\n<p>A typical headless CMS interface just provides form fields for editing content. This lacks the context of what content looks like on the page. This UX can feel archaic to people who are familiar with real-time editing experiences in tools like Google Docs, Wix, Webflow, or Notion.</p>\n<p>Fortunately, a new wave of headless CMSs is offering visual editing in a way that makes sense to developers. This is great news for anyone who wants to empower their team with an editing experience similar to Wix or Squarespace but on top of their own open-source stack.</p>\n<p>Let’s compare the CMS editing experience with and without visual editing on the homepage of Roev.com.</p>\n<p>You can see that the instant feedback from the live preview combined with the ability to click elements on the page makes the visual editing experience much more intuitive. The improvements are even more dramatic when content is nested deep inside sections on the page, making it hard to locate without clicking on the page elements.</p>\nHeadless CMSs That Support Visual Editing\n<p>Many popular headless CMS offerings currently support visual editing. Let’s look at a few of the more popular options.</p>\n<h3><a href=\"https://tina.io?utm_source=guest_post\\&amp;utm_medium=blog\\&amp;utm_campaign=smashingmagazine.com_post\">Tina</a></h3>\n<p><a href=\"https://tina.io?utm_source=guest_post\\&amp;utm_medium=blog\\&amp;utm_campaign=smashingmagazine.com_post\">TinaCMS</a> was built from the ground up for visual editing but also offers a “basic editing” mode that’s similar to traditional CMSs. Tina has an open-source admin interface and headless content API that stays synced with files in your Git repository (such as Markdown and JSON).</p>\n<h3><a href=\"https://www.storyblok.com/\">Storyblok </a></h3>\n<p><a href=\"https://www.storyblok.com/\">Storyblok</a> is a headless CMS that was an early pioneer in visual editing. Storyblok stores your content in its database and makes it available via REST and GraphQL APIs.</p>\n<h3><a href=\"https://sanity.io\">Sanity.io</a> (via their <a href=\"https://www.sanity.io/plugins/iframe-pane\">iframe plugin</a>)</h3>\n<p><a href=\"https://sanity.io\">Sanity</a> is a traditional headless CMS with an open-source admin interface. It supports visual editing through the use of its <a href=\"https://www.sanity.io/plugins/iframe-pane\">Iframe Pane plugin</a>. Sanity stores your content in its database and makes it available via API.</p>\n<h3><a href=\"http://builder.io\">Builder.io</a></h3>\n<p><a href=\"http://builder.io\">Builder.io</a> is a closed-source, visual-editing-first headless CMS that stores content in Builder.io’s database and makes it available via API.</p>\n<h3><a href=\"https://www.stackbit.com/\">Stackbit</a></h3>\n<p><a href=\"https://www.stackbit.com/\">Stackbit</a> is a closed-source editing interface that’s designed to be complementary to other headless CMSs. With Stackbit, you can use another headless CMS to store your content and visually edit that content with Stackbit.</p>\n<h3><a href=\"https://vercel.com/blog/visual-editing\">Vercel</a></h3>\n<p>Although it’s not a CMS, Vercel’s Deploy Previews can show an <a href=\"https://vercel.com/blog/visual-editing\">edit button</a> in the toolbar. This edit button overlays a UI that helps content creators quickly navigate to the correct location in the CMS.</p>\nConclusion\n<p>Now that developers are adding visual editing to their sites, I’m seeing content creators like Maria become super productive on a developer-first stack. Teams that were slow to update content before switching to visual editing are now more active and efficient.</p>\n<p>There are many great options to build visual editing experiences without compromising developer-control and extensibility. The promise of Dreamweaver is finally here!</p>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"2de3e06b6140271b44193e4fa37d2ec111d13051b835452389658d67e24a8bae","category":"Tech"}