{"title":"Amazon CodeGuru Reviewer Introduces Secrets Detector to Identify Hardcoded Secrets and Secure Them with AWS Secrets Manager","link":"https://aws.amazon.com/blogs/aws/codeguru-reviewer-secrets-detector-identify-hardcoded-secrets/","date":1638174097000,"content":"<p><a href=\"https://aws.amazon.com/codeguru/\">Amazon CodeGuru</a> helps you improve code quality and automate code reviews by scanning and profiling your Java and Python applications. CodeGuru Reviewer can detect potential defects and bugs in your code. For example, it suggests improvements regarding security vulnerabilities, resource leaks, concurrency issues, incorrect input validation, and deviation from AWS best practices.</p> \n<p>One of the most well-known security practices is the centralization and governance of secrets, such as passwords, API keys, and credentials in general. As many other developers facing a strict deadline, I’ve often taken shortcuts when managing and consuming secrets in my code, using plaintext environment variables or hard-coding static secrets during local development, and then inadvertently commit them. Of course, I’ve always regretted it and wished there was an automated way to detect and secure these secrets across all my repositories.</p> \n<p>Today, I’m happy to announce the new Amazon CodeGuru Reviewer Secrets Detector, an automated tool that helps developers detect secrets in source code or configuration files, such as passwords, API keys, SSH keys, and access tokens.</p> \n<p>These new detectors use machine learning (ML) to identify hardcoded secrets as part of your code review process, ultimately helping you to ensure that all new code doesn’t contain hardcoded secrets before being merged and deployed. In addition to Java and Python code, secrets detectors also scan configuration and documentation files. CodeGuru Reviewer suggests remediation steps to secure your secrets with <a href=\"https://aws.amazon.com/secrets-manager/\">AWS Secrets Manager</a>, a managed service that lets you securely and automatically store, rotate, manage, and retrieve credentials, API keys, and all sorts of secrets.</p> \n<p>This new functionality is included as part of the CodeGuru Reviewer service at no additional cost and supports the most common API providers, such as AWS, Atlassian, Datadog, Databricks, GitHub, Hubspot, Mailchimp, Salesforce, SendGrid, Shopify, Slack, Stripe, Tableau, Telegram, and Twilio. <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/recommendations.html#secrets-detection\">Check out the full list here</a>.</p> \n<p><span><strong>Secrets Detectors in Action</strong></span><br /> First, I select CodeGuru from the AWS Secrets Manager console. This new flow lets me associate a new repository and run a full repository analysis with the goal of identifying hardcoded secrets.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/22/codeguru-secrets-manager-1024x795.png\" /></p> \n<p>Associating a new repository only takes a few seconds. I connect my GitHub account, and then select a repository named <a href=\"https://github.com/alexcasalboni/hawkcd\">hawkcd</a>, which contains a few Java, C#, JavaScript, and configuration files.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/26/codeguru-associate-repository-1024x807.png\" /></p> \n<p>A few minutes later, my full repository is successfully associated and the full scan is completed. I could also have a look at a demo repository analysis called <em>DemoFullRepositoryAnalysisSecrets</em>. You’ll find this demo in the CodeGuru console, under <strong>Full repository analysis</strong>, in your AWS Account.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/24/codeguru-secrets-analysis-list-1024x323.png\" /></p> \n<p>I select the repository analysis and find 42 recommendations, including one recommendation for a hardcoded secret (you can filter recommendations by <strong>Type=Secrets</strong>). CodeGuru Reviewer identified a hardcoded AWS Access Key ID in a <em>.travis.yml</em> file.</p> \n<p>The recommendation highlights the importance of storing these secrets securely, provides a link to learn more about the issue, and suggests rotating the identified secret to make sure that it can’t be reused by malicious actors in the future.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/24/codeguru-secrets-recommendations-1024x421.png\" /></p> \n<p>CodeGuru Reviewer lets me jump to the exact file and line of code where the secret appears, so that I can dive deeper, understand the context, verify the file history, and take action quickly.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/26/codeguru-github-1024x407.png\" /></p> \n<p>Last but not least, the recommendation includes a <strong>Protect your credential</strong> button that lets me jump quickly to the AWS Secrets Manager console and create a new secret with the proper name and value.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/26/codeguru-secrets-manager-popup-1024x419.png\" /></p> \n<p>I’m going to remove the plaintext secret from my source code and update my application to fetch the secret value from AWS Secrets Manager. In many cases, you can keep the current configuration structure and use existing parameters to store the secret’s name instead of the secret’s value.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/24/secrets-manager-store-new-secret-1-1024x703.png\" /></p> \n<p>Once the secret is securely stored, AWS Secrets Manager also provides me with code snippets that fetch my new secret in many programming languages using the <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a>. These snippets let me save time and include the necessary SDK call, as well as the error handling, decryption, and decoding logic.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/22/secrets-manager-sample-code-1024x662.png\" /></p> \n<p>I’ve showed you how to run a full repository analysis, and of course the same analysis can be performed continuously on every new pull request to help you prevent hardcoded secrets and other issues from being introduced in the future.</p> \n<p><span><strong>Available Today with CodeGuru Reviewer</strong></span><br /> CodeGuru Reviewer Secrets Detector is available in all regions where CodeGuru Reviewer is available, at no additional cost.</p> \n<p>If you’re new to CodeGuru Reviewer, you can try it for free for 90 days with repositories up to 100,000 lines of code. Connecting your repositories and starting a full scan takes only a couple of minutes, whether your code is hosted on <a href=\"https://aws.amazon.com/codecommit/\">AWS CodeCommit</a>, BitBucket, or GitHub. If you’re using GitHub, <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/working-with-cicd.html\">check out the GitHub Actions integration</a> as well.</p> \n<p><a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/recommendations.html#secrets-detection\">You can learn more about Secrets Detector in the technical documentation.</a></p> \n<p>— <a href=\"https://twitter.com/alex_casalboni\">Alex</a></p>","author":"Alex Casalboni","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"3480f90360998b68ada5543b74573cb60a5075c9ba83a3a86d411561b18eb47a","category":"Tech"}