{"title":"อธิบายเรื่อง Spring Boot Testing","link":"https://www.somkiat.cc/basic-of-spring-boot-testing/","date":1695032037000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2023/09/blz-blog-junit-springboot-150x150.jpg\" alt loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2023/09/blz-blog-junit-springboot-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2023/09/blz-blog-junit-springboot-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/09/blz-blog-junit-springboot.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/09/blz-blog-junit-springboot.jpg\" alt /></a></figure>\n\n\n\n<p>จากการแบ่งปันเรื่องการพัฒนาระบบงานด้วย Spring Boot และ Testing<br />มีคำถามเกี่ยวกับ Spring Boot Testing<br />จึงทำการสรุปความรู้พื้นฐานไว้นิดหน่อยดังนี้<br />มาเริ่มกันเลย</p>\n\n\n\n<span></span>\n\n\n\n<p><strong><a href=\"https://docs.spring.io/spring-boot/docs/3.1.3/reference/html/features.html#features.testing\" target=\"_blank\">Spring Boot testing</a> นั้นจะมีให้กับ project ที่สร้างจาก  <a href=\"https://start.spring.io/\" target=\"_blank\">Spring Initalizr</a></strong></p>\n\n\n\n[gist id=\"4b03d0f7a64d4ce2989d791aa22b108d\" file=\"pom.xml\"]\n\n\n\n<p>ซึ่งจะทำการจัดการ dependency ต่าง ๆ ให้แบบอันโนมัติ<br />ประกอบไปด้วย</p>\n\n\n\n<ul>\n<li><strong>JUnit 5</strong> คือ testing framework สำหรับภาษา Java ตัวนี้สำคัญสุด ๆ</li>\n\n\n\n<li><strong>Spring Test และ Spring Boot Test</strong> ตัวนี้ Spring Boot เตรียมไว้ให้ ใช้งานง่าย ๆ เป็น integration test นั่นเอง ช้าหน่อย แต่ชัวร์</li>\n\n\n\n<li><strong>Mockito</strong> สำหรับการจำลอง dependency ต่าง ๆ ใช้ทั้งแบบ unit test และ integration test กับ Spring Boot</li>\n\n\n\n<li>Hamcrest สำหรับการ assert หรือตรวจสอบผลการทำงาน</li>\n\n\n\n<li><strong>AssertJ</strong> เหมือนกับ Hamcrest นั่นเอง เลือกได้ตามความชอบ</li>\n\n\n\n<li><strong>JSONAssert</strong> สำหรับการตรวจสอบข้อมูลในรูปแบบ JSON ทั้ง object และ array</li>\n\n\n\n<li><strong>JsonPath</strong> สำหรับการเข้าถึง property ต่าง ๆ ใน JSON</li>\n</ul>\n\n\n\n<p>ถ้าต้องการ test ในรูปแบบอื่น ๆ ก็ต้องเพิ่ม dependency เพิ่ม เช่น</p>\n\n\n\n<ul>\n<li>WireMock สำหรับจำลอง external api ใช้งาน Contract Stub Runner</li>\n\n\n\n<li>Test container สำหรับทำงานร่วมกับ docker container</li>\n</ul>\n\n\n\n<p><strong>มาดูรายละเอียดของ 4 สิ่งที่น่าสนใจ</strong></p>\n\n\n\n<p><strong>เรื่องที่ 1 :: JUnit 5</strong> </p>\n\n\n\n<p>เป็น testing framework สำหรับ Java ซึ่งมีโครงสร้างหลัก ๆ ดังนี้</p>\n\n\n\n[gist id=\"4b03d0f7a64d4ce2989d791aa22b108d\" file=\"1.java\"]\n\n\n\n<p><strong>เรื่องที่ 2  :: Spring Boot testing</strong></p>\n\n\n\n<p>ทาง Spring Boot นั้นได้เตรียมไว้ให้<br />ซึ่งเป็น integration test นั่นเอง โดยสิ่งที่เตรียมไว้ให้มีดังนี้</p>\n\n\n\n<ul>\n<li><strong>Spring Boot Testing</strong> สำหรับ start web server และชุดการทดสอบต่าง ๆ ไว้ให้ ทำงานเหมือนจริงทุกอย่าง เป็นตัวแทนของจริงได้เลย ว่าถ้าทดสอบผ่านแล้ว จะ run ได้ตามที่ต้องการแน่นอน แต่ข้อเสียคือ ช้าที่สุด</li>\n</ul>\n\n\n\n<p>ตัวอย่างการใช้งานง่าย ๆ เป็นการทดสอบ API ผ่าน TestRestTemplate</p>\n\n\n\n[gist id=\"4b03d0f7a64d4ce2989d791aa22b108d\" file=\"2.java\"]\n\n\n\n<ul>\n<li><strong>Slicing Testing</strong> เป็นการทดสอบเฉพาะ layer ใน Spring Boot เท่านั้น  ซึ่งเร็วมาก ๆ เพราะว่า load บาง layer เท่านั้น เช่น\n<ul>\n<li>Controller layer จะทดสอบผ่าน WebMvcTest</li>\n\n\n\n<li>Repository layer จะทดสอบผ่าน library ที่ติดต่อกับ database เช่น Spring Data จะมีให้หมด ทั้ง JDBCTest และ JPATest เป็นต้น</li>\n</ul>\n</li>\n</ul>\n\n\n\n<p>ตัวอย่างของการใช้งาน WebMvcTest</p>\n\n\n\n[gist id=\"4b03d0f7a64d4ce2989d791aa22b108d\" file=\"3.java\"]\n\n\n\n<p><strong>เรื่องที่ 3 ทั้ง JUnit 5 และ Spring Boot Testing สามารถทำงานกับ Mockito ได้</strong></p>\n\n\n\n<p>แต่ว่าใช้งาน และ ทำงานแตกต่างกัน</p>\n\n\n\n<ul>\n<li>ใช้งาน @Mock และ @InjectMock ในโลกของ Unit testing หรือ Java เท่านั้น ปกติใช้ทดสอบ logic การทำงานใน service layer เพราะว่า ไม่ต้องการ start web server ใด ๆ</li>\n\n\n\n<li>ใช้งาน @MockBean สำหรับการจำลอง dependency ใน integration testing ของ Spring Boot ได้ทั้ง Spring Boot test และ  WebMvcTest</li>\n</ul>\n\n\n\n<p><strong>เรื่องที่ 4 ในการทดสอบ JSON message สามารถใช้งาน JSONPath และ JSONAssert ได้</strong></p>\n\n\n\n<p>แต่ปกติผมชอบใช้ JSONMapper มาแปลงเป็น object ก่อน</p>\n\n\n\n[gist id=\"4b03d0f7a64d4ce2989d791aa22b108d\" file=\"4.java\"]\n\n\n\n<p>โดยทั้งหมดนี้ได้มาทันทีเมื่อสร้าง project ขึ้นมา<br />ดังนั้นไม่มีเหตุผลใด ๆ ที่จะไม่เขียน test นะ !!</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"ae4ed80fe7d85802d08fe75472f4df3595b76e37ec62b49dc5052c00202a43d5","category":"Thai"}