{"title":"[Thingsboard] ควบคุมอุปกรณ์ผ่าน REST API","link":"https://thanapon.info/thingsboard-rest-api/","date":1627711860000,"content":"<p>เวลาเราจะส่งข้อมูลไปหาอุปกรณ์ของเรา ปกติถ้าเราเขียน platform ขึ้นมาเองก็น่าจะเขียนให้อุปกรณ์ publish ข้อความมาที่ topic สัก topic หนึ่งก็น่าจะได้แล้วใช่ไหมครับ แต่การที่เราจะส่งข้อมูลผ่าน Thingsboard นี้เราจำเป็นต้องส่งผ่าน RPC [Remote Procedure Calls คือหลักการสื่อสารแบบ Request กับ Response] ซึ่งในการส่งข้อมูลผ่าน RPC จะมีทั้งหมด 2 รูปแบบด้วยกันคือ Client-side และ Server-side </p>\n\n\n\n<p><strong>Client-side</strong> คือการส่งข้อมูลจากอุปกรณ์ ขึ้นไปยัง server application (web-app หรืออะไรต่างๆ) ผ่าน Thingsboard platform ตามความเข้าใจผมน่าจะเป็นการส่งข้อมูลเหมือนพวก Uplink นะครับ</p>\n\n\n\n<div><figure><img src=\"https://thingsboard.io/images/user-guide/client-side-rpc.svg\" /></figure></div>\n\n\n\n<p><strong>Server-side</strong> คือการส่งข้อมูลจาก server application เข้าไปควบคุมอุปกรณ์ปลายทางของเรา (Downlink) แต่การส่ง Server-side นั้นก็จะมีอยู่ 2 แบบเหมือนกันคือ One-way กับ Two-way</p>\n\n\n\n<p><strong>One-way</strong> คือ server application ไม่ต้องรอ response จาก client ว่าได้รับ request แล้วโดย Thingsboard จะ return HTTP status code 200 ออกไปเลย</p>\n\n\n\n<div><figure><img src=\"https://thingsboard.io/images/user-guide/one-way-rpc.svg\" /></figure></div>\n\n\n\n<p><strong>Two-way </strong>คือ server application จะต้องรอ response จาก client ซึ่งก็อาจจะต้องใช้เวลาในการทำงานมากกว่าการส่งแบบ One-way ขึ้นอยู่กับแต่ละ function ที่เราเขียนขึ้นมานะครับ</p>\n\n\n\n<div><figure><img src=\"https://thingsboard.io/images/user-guide/two-way-rpc.svg\" /></figure></div>\n\n\n\n<p>สำหรับการควบคุมอุปกรณ์ Thingsboard นั้นเราจะแบ่งออกเป็น 2 ส่วนนะครับโดยที่ส่วนแรกจะเป็นส่วนของอุปกรณ์ซึ่งจะต้องทำการ subscribe topic “<strong>v1/devices/me/rpc/request/+</strong>“</p>\n\n\n\n<blockquote><p>หลังจากที่เรา subscribe topic “v1/devices/me/rpc/request/+” นี้แล้วเวลาที่มี message เข้ามา เราก็จะได้รับ requestId มาด้วย ซึ่งจะติดมากับ topic ที่ Thingsboard ส่งเข้ามาในรูปแบบ “v1/devices/me/rpc/request/<strong>${requestId</strong>}” ซึ่งตัว requestId ตัวนี้จะใช้สำหรับ return Acknowledge กลับไปยัง Thingsboard อีกทีนะครับ<strong> สำหรับบทความนี้ผมขอจำลองโดยใช้ Nodejs เขียนให้เชื่อมต่อเข้ากับ Thingsboard platform ผ่าน MQTT นะครับ</strong></p></blockquote>\n\n\n\n<h4>ก่อนอื่นอย่าลืมติดตั้ง Nodejs version 12.0 ขึ้นไปก็ได้แล้วนะครับ</h4>\n\n\n\n<h3>มาเริ่มกันเลยยยย…</h3>\n\n\n\n<ul><li>ทำการ clone project <strong>thingsboard-mqtt-client</strong> มาลงในเครื่องก่อนนะครับ ซึ่งหน้าตาของโค๊ดจะเขียนด้วย Nodejs แล้วใช้ MQTT package ในการเชื่อมต่อเข้ากับ Thingsboard localhost ของเราอีกที</li></ul>\n\n\n\n<blockquote><p><a href=\"https://github.com/toygame/thingsboard-mqtt-client\" target=\"_blank\">thingsboard-mqtt-client</a></p><cite>Thingsboard client using MQTT protocol and connect into Local server base on <code>Nodejs</code> v14.0++.<br /><a href=\"https://github.com/toygame/thingsboard-mqtt-client#-homepage\"></a></cite></blockquote>\n\n\n\n<div><pre><code>const mqtt = require('mqtt')\nconst client = mqtt.connect('mqtt://localhost', {\n  username: 'T1_TEST_TOKEN',\n})\n\nclient.on('connect', function () {\n  console.log('connected')\n  client.subscribe('v1/devices/me/rpc/request/+')\n})\n\nclient.on('message', function (topic, message) {\n  console.log('request.topic: ' + topic)\n  console.log('request.body: ' + message.toString())\n  /**\n   * Do something below...\n   * (1)\n   * (2)\n   * (3)\n   * and then response requestId into server.\n   */\n  const requestId = topic.slice('v1/devices/me/rpc/request/'.length)\n  //client acts as an echo service\n  client.publish('v1/devices/me/rpc/response/' + requestId, message)\n})</code></pre></div>\n\n\n\n<h4>อธิบายโค๊ดข้างบนนิดหน่อยครับ</h4>\n\n\n\n<div><pre><code>const mqtt = require('mqtt')\nconst client = mqtt.connect('mqtt://localhost', {\n  username: 'T1_TEST_TOKEN',\n})</code></pre></div>\n\n\n\n<ul><li>ทำการ Import MQTT package แล้วเชื่อมต่อไปยัง server ของเรา ซึ่ง server คือ localhost ส่วน port ปกติจะเป็น 1883 จะใส่หรือไม่ใส่ก็ได้ แต่ถ้าใครแปลกแยกกว่านี้ก็ใส่ต่อท้าย localhost:1554 อะไรไปได้เลย ส่วน username คือ “<strong>access token”</strong> ของอุปกรณ์นั้นๆ</li></ul>\n\n\n\n<div><pre><code>client.on('connect', function () {\n  console.log('connected')\n  client.subscribe('v1/devices/me/rpc/request/+')\n})</code></pre></div>\n\n\n\n<ul><li>หลังจากที่ connect เข้ากับ Thingsboard แล้วเราก็จะทำการ subscribe เข้าไปที่ topic <strong>“v1/devices/me/rpc/request/+”</strong> เพื่อ Thingsboard สามารถควบคุมอุปกรณ์เราได้ผ่าน RPC</li></ul>\n\n\n\n<div><pre><code>client.on('message', function (topic, message) {\n  console.log('request.topic: ' + topic)\n  console.log('request.body: ' + message.toString())\n  /**\n   * Do something below...\n   * (1)\n   * (2)\n   * (3)\n   * and then response requestId into server.\n   */\n  const requestId = topic.slice('v1/devices/me/rpc/request/'.length)\n  //client acts as an echo service\n  client.publish('v1/devices/me/rpc/response/' + requestId, message)\n})</code></pre></div>\n\n\n\n<ul><li>เมื่ออุปกรณ์ของเราได้รับ message ที่ถูกส่งมาแล้ว ในส่วนนี้คือเราจะทำอะไรก็ได้ ไม่ว่าจะเป็น เปิด-ปิด ไฟ เสร็จแล้วเราก็จะ Response requestId ไปยัง Thingsboard ผ่าน topic <strong>“v1/devices/me/rpc/response/${requestId}”</strong></li></ul>\n\n\n\n<p>เรียบร้อยก็ติดตั้ง package dependencies ต่างๆโดยใช้คำสั่ง</p>\n\n\n\n<div><pre><code>npm install</code></pre></div>\n\n\n\n<p>จากนั้นก็ Start client service โดย</p>\n\n\n\n<div><pre><code>npm start</code></pre></div>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/image-4-1024x640.png\" /></figure></div>\n\n\n\n<h3>ลองเรียก Thingsboard REST API ผ่าน Postman ดู</h3>\n\n\n\n<ul><li>เริ่มต้นให้เรา Import collection <strong>“Thingsboard-API.postman_collection.json”</strong> เข้าไปใน Postman ก่อนนะครับ</li></ul>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/image-6.png\" /></figure></div>\n\n\n\n<ul><li>จากนั้นเลือก request <strong>“Get token”</strong> เพื่อที่เราจะเอา token มาใช้ในการยิง request เพื่อควบคุบอุปกรณ์เรา</li></ul>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/image-5-1024x720.png\" /></figure></div>\n\n\n\n<blockquote><p>Token เป็นรหัสชุดนึงที่เอาไว้อ้างอิงว่าคนๆนั้นคือใครซึ่งจะมีระยะเวลาในการใช้งาน</p><p>RefreshToken คือรหัสที่เอาไว้สำหรับ Generate token ชุดใหม่ขึ้นมา</p></blockquote>\n\n\n\n<ul><li>หลังจากได้ token มาแล้วก็นำ token ไปใส่ที่ request <strong>“RPC Oneway”</strong> โดยจะต้องไปกำหนดในส่วนของ Headers ก็จะได้แบบนี้ <strong><em>อย่าลืมใส่ Bearer เข้าไปด้วยนะครับ</em></strong></li></ul>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/image-7-1024x426.png\" /></figure></div>\n\n\n\n<ul><li>Request body ที่เราจะส่งไปหาอุปกรณ์จะอยู่ใน Body ซึ่งเราจะต้องตั้งค่า Content-type เป็น <strong>application/json</strong></li></ul>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/image-8-1024x432.png\" /></figure></div>\n\n\n\n<blockquote><p>รูปแบบ Url endpoint จะเป็น “http://localhost:9090/api/plugins/rpc/<strong>${callType}</strong>/<strong>${deviceId}</strong>“</p><p><strong><strong>callType</strong></strong> คือรูปแบบการส่งมีให้เลือก <strong>oneway</strong> และ <strong>twoway</strong></p><p><strong>deviceId</strong> คือรหัสของอุปกรณ์จาก Thingsboard</p></blockquote>\n\n\n\n<h4>การส่งแบบ Oneway</h4>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/image-11-1024x555.png\" /></figure></div>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/image-12-1024x609.png\" /></figure></div>\n\n\n\n<h4>การส่งแบบ Twoway</h4>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/image-9-1024x698.png\" /></figure></div>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/image-10-1024x609.png\" /></figure></div>\n\n\n\n<blockquote><p>ความแตกต่างระหว่างการส่งแบบ Oneway กับ Twoway คือเวลาที่อุปกรณ์ของเราได้รับ message แล้ว ถ้าการส่งแบบ oneway นั้น Thingsboard จะไม่มีการ Response message ไปยัง application ที่เรียกเข้ามาถึงแม้เราจะสั่งใหอุปกรณ์ของเรา Publish ข้อความออกไปแล้ว</p></blockquote>\n\n\n\n<div><figure><img src=\"https://thanapon.info/wp-content/uploads/2021/07/Screen-Shot-2564-07-29-at-12.42.42-1024x576.png\" /></figure></div>\n\n\n\n<p><strong>เรียบร้อยครับผม สำหรับการใช้งานก็ขึ้นอยู่กับเราเลยครับว่าจะเอาไปทำอะไร สำหรับผมก็จะเขียน Web application มาสักตัวหนึ่งสำหรับควบคุม Thingsboard REST API อีกทีหนึ่ง ซึ่งทำให้เราสามารถ customize ระบบตามความต้องการของเรามากขึ้นครับ </strong></p>\n\n\n\n<p><strong>สำหรับวันนี้ขอบคุณและสวัสดีครับ</strong></p>\n\n\n\n<blockquote><p>Using RPC capabilities</p><cite><a href=\"https://thingsboard.io/docs/user-guide/rpc/\" target=\"_blank\">https://thingsboard.io/docs/user-guide/rpc/</a></cite></blockquote>\n\n\n\n<blockquote><p>MQTT Device API Reference</p><cite><a href=\"https://thingsboard.io/docs/reference/mqtt-api/\" target=\"_blank\">https://thingsboard.io/docs/reference/mqtt-api/</a></cite></blockquote>\n\n\n\n<blockquote><p>HTTP Device API Reference</p><cite><a href=\"https://thingsboard.io/docs/reference/http-api/\" target=\"_blank\">https://thingsboard.io/docs/reference/http-api/</a></cite></blockquote>\n<p>The post <a href=\"https://thanapon.info/thingsboard-rest-api/\">[Thingsboard] ควบคุมอุปกรณ์ผ่าน REST API</a> appeared first on <a href=\"https://thanapon.info\">Thanapon</a>.</p>","author":"thanapon.tap","siteTitle":"Thanapon","siteHash":"6a039c2f54d76e4c49227d80968f2a30de5427cc57525c047c383ea3563cde5f","entryHash":"579646e2477c4b5cd410aaeb34ff48f079918303b8a96bc58ab344db58602507","category":"Thai"}