{"title":"Amazon EKS Anywhere – Now Generally Available to Create and Manage Kubernetes Clusters on Premises","link":"https://aws.amazon.com/blogs/aws/amazon-eks-anywhere-now-generally-available-to-create-and-manage-kubernetes-clusters-on-premises/","date":1631124519000,"content":"<p>At AWS re:Invent 2020, we <a href=\"https://aws.amazon.com/blogs/aws/reinvent-2020-preannouncements-for-tuesday-december-1/\">preannounced</a> new deployment options of <a href=\"https://aws.amazon.com/ko/blogs/aws/getting-started-with-amazon-ecs-anywhere-now-generally-available/\">Amazon Elastic Container Service (Amazon ECS) Anywhere</a> and <a href=\"https://aws.amazon.com/eks/eks-anywhere\">Amazon Elastic Kubernetes Service (Amazon EKS) Anywhere</a> in your own data center.</p> \n<p>Today, I am happy to announce the general availability of Amazon EKS Anywhere, a deployment option for Amazon EKS that enables you to easily create and operate Kubernetes clusters on premises using VMware vSphere starting today. EKS Anywhere provides an installable software package for creating and operating Kubernetes clusters on premises and automation tooling for cluster lifecycle support.</p> \n<p>EKS Anywhere brings a consistent AWS management experience to your data center, building on the strengths of <a href=\"https://aws.amazon.com/eks/eks-distro/\">Amazon EKS Distro</a>, an open-source distribution for Kubernetes used by Amazon EKS.</p> \n<p>EKS Anywhere is also <a href=\"https://github.com/aws/eks-anywhere/\">Open Source</a>. You can reduce the complexity of buying or building your own management tooling to create EKS Distro clusters, configure the operating environment, and update software. EKS Anywhere enables you to automate cluster management, reduce support costs, and eliminate the redundant effort of using multiple open-source or third-party tools for operating Kubernetes clusters. EKS Anywhere is fully supported by AWS. In addition, you can leverage the EKS console to view all your Kubernetes clusters, running anywhere.</p> \n<p>We provide several deployment options for your Kubernetes cluster:</p> \n<table> \n <tbody> \n  <tr> \n   <td><strong>Feature</strong></td> \n   <td><strong>Amazon EKS</strong></td> \n   <td><strong>EKS on Outposts</strong></td> \n   <td><strong>EKS Anywhere</strong></td> \n   <td><strong>EKS Distro</strong></td> \n  </tr> \n  <tr> \n   <td><strong>Hardware </strong></td> \n   <td>Managed by AWS</td> \n   <td>Managed by customer</td> \n  </tr> \n  <tr> \n   <td><strong>Deployment types</strong></td> \n   <td>Amazon EC2, AWS Fargate (Serverless)</td> \n   <td>EC2 on Outposts</td> \n   <td>Customer Infrastructure</td> \n  </tr> \n  <tr> \n   <td><strong>Control plane management</strong></td> \n   <td>Managed by AWS</td> \n   <td>Managed by customer</td> \n  </tr> \n  <tr> \n   <td><strong>Control plane location</strong></td> \n   <td>AWS cloud</td> \n   <td>Customer’s on-premises or data center</td> \n  </tr> \n  <tr> \n   <td><strong>Cluster updates</strong></td> \n   <td>Managed in-place update process for control plane and data plane</td> \n   <td>CLI (Flux supported rolling update for data plane, manual update for control plane)</td> \n  </tr> \n  <tr> \n   <td><strong>Networking and Security</strong></td> \n   <td>Amazon VPC Container Network Interface (CNI), Other compatible 3rd party CNI plugins</td> \n   <td>Cilium CNI</td> \n   <td>3rd party CNI plugins</td> \n  </tr> \n  <tr> \n   <td><strong>Console support</strong></td> \n   <td>Amazon EKS console</td> \n   <td>EKS console using EKS Connector</td> \n   <td>Self-service</td> \n  </tr> \n  <tr> \n   <td><strong>Support</strong></td> \n   <td>AWS Support</td> \n   <td>EKS Anywhere support subscription</td> \n   <td>Self-service</td> \n  </tr> \n </tbody> \n</table> \n<p>EKS Anywhere integrates with a variety of products from our partners to help customers take advantage of EKS Anywhere and provide additional functionality. This includes <a href=\"https://fluxcd.io/\">Flux</a> for cluster updates, Flux Controller for GitOps, <a href=\"https://eksctl.io\">eksctl</a> – a simple CLI tool for creating and managing clusters on EKS, and <a href=\"https://cilium.io/\">Cilium</a> for networking and security.</p> \n<p>We also provide flexibility for you to integrate with your choice of tools in other areas. To add integrations to your EKS Anywhere cluster, see this <a href=\"https://anywhere.eks.amazonaws.com/docs/tasks/cluster/cluster-integrations/\">list of suggested third-party tools</a> for your consideration.</p> \n<p><strong><u>Get Started with Amazon EKS Anywhere</u></strong><br /> To get started with EKS Anywhere, you can create a bootstrap cluster in your machine for local development and test purposes. Currently, it allows you to create clusters in a VMware vSphere environment for production workloads.</p> \n<p>Let’s create a cluster on your desktop machine using <a href=\"https://eksctl.io\">eksctl</a>! You can install <code>eksctl</code> and <code>eksctl-anywhere</code> with <a href=\"http://homebrew.sh\">homebrew</a> on Mac. Optionally, you can install some additional tools you may want for your EKS Anywhere clusters, such as <code>kubectl</code>. To learn more on Linux, see the <a href=\"https://anywhere.eks.amazonaws.com/docs/getting-started/install/\">installation guide</a> in EKS Anywhere documentation.</p> \n<pre><code>$ brew install aws/tap/eks-anywhere\n$ eksctl anywhere version\nv0.5.0</code></pre> \n<p>Generate a cluster config and create a cluster.</p> \n<pre><code>$ CLUSTER_NAME=dev-cluster\n$ eksctl anywhere generate clusterconfig $CLUSTER_NAME \\\n    --provider docker &gt; $CLUSTER_NAME.yaml\n$ eksctl anywhere create cluster -f $CLUSTER_NAME.yaml\n[i] Performing setup and validations\n[v] validation succeeded {\"validation\": \"docker Provider setup is valid\"}\n[i] Creating new bootstrap cluster\n[i] Installing cluster-api providers on bootstrap cluster\n[i] Provider specific setup\n[i] Creating new workload cluster\n[i] Installing networking on workload cluster\n[i] Installing cluster-api providers on workload cluster\n[i] Moving cluster management from bootstrap to workload cluster\n[i] Installing EKS-A custom components (CRD and controller) on workload cluster\n[i] Creating EKS-A CRDs instances on workload cluster\n[i] Installing AddonManager and GitOps Toolkit on workload cluster\n[i] GitOps field not specified, bootstrap flux skipped\n[i] Deleting bootstrap cluster\n[v] Cluster created!</code></pre> \n<p>Once your workload cluster is created, a <code>KUBECONFIG</code> file is stored on your admin machine with admin permissions for the workload cluster. You’ll be able to use that file with kubectl to set up and deploy workloads.</p> \n<pre><code>$ export KUBECONFIG=${PWD}/${CLUSTER_NAME}/${CLUSTER_NAME}-eks-a-cluster.kubeconfig\n$ kubectl get ns\nNAME                                STATUS   AGE\ncapd-system                         Active   21m\ncapi-kubeadm-bootstrap-system       Active   21m\ncapi-kubeadm-control-plane-system   Active   21m\ncapi-system                         Active   21m\ncapi-webhook-system                 Active   21m\ncert-manager                        Active   22m\ndefault                             Active   23m\neksa-system                         Active   20m\nkube-node-lease                     Active   23m\nkube-public                         Active   23m\nkube-system                         Active   23m</code></pre> \n<p>You can create a simple test application for you to verify your cluster is working properly. Deploy and see a new pod running in your cluster, and forward the deployment port to your local machine with the following commands:</p> \n<pre><code>$ kubectl apply -f \"https://anywhere.eks.amazonaws.com/manifests/hello-eks-a.yaml\"\n$ kubectl get pods -l app=hello-eks-a\nNAME                                     READY   STATUS    RESTARTS   AGE\nhello-eks-a-745bfcd586-6zx6b   1/1     Running   0          22m\n$ kubectl port-forward deploy/hello-eks-a 8000:80\n$ curl localhost:8000\n⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢\n\nThank you for using\n\n███████╗██╗  ██╗███████╗\n██╔════╝██║ ██╔╝██╔════╝\n█████╗  █████╔╝ ███████╗\n██╔══╝  ██╔═██╗ ╚════██║\n███████╗██║  ██╗███████║\n╚══════╝╚═╝  ╚═╝╚══════╝\n\n █████╗ ███╗   ██╗██╗   ██╗██╗    ██╗██╗  ██╗███████╗██████╗ ███████╗\n██╔══██╗████╗  ██║╚██╗ ██╔╝██║    ██║██║  ██║██╔════╝██╔══██╗██╔════╝\n███████║██╔██╗ ██║ ╚████╔╝ ██║ █╗ ██║███████║█████╗  ██████╔╝█████╗  \n██╔══██║██║╚██╗██║  ╚██╔╝  ██║███╗██║██╔══██║██╔══╝  ██╔══██╗██╔══╝  \n██║  ██║██║ ╚████║   ██║   ╚███╔███╔╝██║  ██║███████╗██║  ██║███████╗\n╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝    ╚══╝╚══╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚══════╝\n\nYou have successfully deployed the hello-eks-a pod hello-eks-a-c5b9bc9d8-qp6bg\n\nFor more information check out\nhttps://anywhere.eks.amazonaws.com\n\n⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢⬡⬢</code></pre> \n<p>EKS Anywhere also supports a VMware vSphere 7.0 version or higher for production clusters. To create a production cluster, see <a href=\"https://anywhere.eks.amazonaws.com/docs/reference/clusterspec/vsphere/\">the requirements</a> for VMware vSphere deployment and follow <a href=\"https://anywhere.eks.amazonaws.com/docs/getting-started/production-environment/\">Create production cluster</a> in EKS Anywhere documentation. It’s almost the same process as creating a test cluster on your machine.</p> \n<p>A production-grade EKS Anywhere cluster should include at least three control plane nodes and three worker nodes on the vSphere for high availability and rolling upgrades. See the <a href=\"https://anywhere.eks.amazonaws.com/docs/tasks/cluster/\">Cluster management</a> in EKS Anywhere documentation for more information on common operational tasks like scaling, updating, and deleting the cluster.</p> \n<p><strong><u>EKS Connector – Public Preview</u></strong><br /> EKS Connector is a new capability that allows you to connect any Kubernetes clusters to the EKS console. You can connect any Kubernetes cluster, including self-managed clusters on EC2, EKS Anywhere clusters running on premises, and other Kubernetes clusters running outside of AWS to the EKS console. It makes it easy for you to view all connected clusters centrally.</p> \n<p>To connect your EKS Anywhere cluster, visit the <strong>Clusters</strong> section in <a href=\"https://console.aws.amazon.com/eks/home?#/clusters\">EKS console</a> and select <strong>Register</strong> in the <strong>Add cluster</strong> drop-down menu.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/09/07/2021-eks-anywhere-1-register-cluster.png\" /></p> \n<p>Define a name for your cluster and select the <strong>Provider</strong> (if you don’t find an appropriate provider, select <strong>Other</strong>).</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/09/07/2021-eks-anywhere-2-register-cluster-detail.png\" /></p> \n<p>After registering the cluster, you will be redirected to the Cluster Overview page. Select  <strong>Download YAML file</strong> to get the Kubernetes configuration file to deploy all the necessary infrastructure to connect your cluster to EKS.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/09/07/2021-eks-anywhere-3-download-yaml.png\" /></p> \n<p>Apply downloaded <code>eks-connector.yaml</code>. EKS Connector acts as a proxy and forwards the EKS console requests to the Kubernetes API server on your cluster, so you need to associate the connector’s service account with an EKS Connector Role, which gives permission to impersonate AWS IAM entities. To learn more, visit <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/connector-grant-access.html\">Granting access to a user to view a cluster</a> in Amazon EKS User Guide.</p> \n<pre><code>$ kubectl apply -f eks-connector.yaml</code></pre> \n<p>After completing the registration, the cluster should be in the <code>ACTIVE</code> state.</p> \n<pre><code>$ eks describe-cluster --name \"my-first-registered-cluster\" --region ${AWS_REGION}</code></pre> \n<p>Here is the expected output:</p> \n<pre><code>{\n    \"cluster\": {\n    \"name\": \"my-first-registered-cluster\",\n    \"arn\": \"arn:aws:eks:{EKS-REGION}:{ACCOUNT-ID}:cluster/my-first-registered-cluster\", \n    \"createdAt\": 1627672425.765,\n    \"connectorConfig\": {\n    \"activationId\": \"xxxxxxxxACTIVATION_IDxxxxxxxx\", \n    \"activationExpiry\": 1627676019.0,\n    \"provider\": \"OTHER\",\n     \"roleArn\": \"arn:aws:iam::{ACCOUNT-ID}:role/eks-connector-agent\"\n    },\n  \"status\": \"ACTIVE\", \"tags\": {}\n  } \n}</code></pre> \n<p>EKS Connector is now in public preview in all AWS Regions where Amazon EKS is available. Please choose a region that’s closest to your cluster location to minimize latency. To learn more, visit <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html\">EKS Connector</a> in the Amazon EKS User Guide.</p> \n<p><strong><u>Things to Know</u></strong><br /> Here are a couple of things to keep in mind about EKS Anywhere:</p> \n<p><strong>Connectivity</strong>: There are three connectivity options: fully connected, partially disconnected, and fully disconnected. For fully connected and partially disconnected connectivity, you can connect your EKS Anywhere clusters to the EKS console via the EKS Connector and see the cluster configuration and workload status. You can leverage AWS services through <a href=\"https://github.com/aws-controllers-k8s/\">AWS Controllers for Kubernetes</a> (ACK). You can connect EKS Anywhere infrastructure resources using <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-agent.html\">AWS System Manager Agents</a> and view them using the SSM console.</p> \n<p><strong>Security Model:</strong> AWS follows the <a href=\"https://aws.amazon.com/compliance/shared-responsibility-model/\">Shared Responsibility Model,</a> where AWS is responsible for the security <em>of</em> the cloud, while the customer is responsible for security <em>in </em>the cloud. However, EKS Anywhere is an open-source tool, and the distribution of responsibility differs from that of a managed cloud service like Amazon EKS. AWS is responsible for building and delivering a secure tool. This tool will provision an initially secure Kubernetes cluster. To learn more, see <a href=\"https://anywhere.eks.amazonaws.com/docs/reference/security/\">Security Best Practices</a> in EKS Anywhere documentation.</p> \n<p><strong>AWS Support</strong>: AWS Enterprise Support is a prerequisite for purchasing an <a href=\"http://aws.amazon.com/eks/eks-anywhere/pricing\">Amazon EKS Anywhere Support subscription</a>. If you would like business support for your EKS Anywhere clusters, please contact your Technical Account Manager (TAM) for details. Also, EKS Anywhere is supported by the open-source community. If you have a problem, open an <a href=\"https://github.com/aws/eks-anywhere/issues\">issue</a> and someone will get back to you as soon as possible.</p> \n<p><strong><u>Available Now</u></strong><br /> <a href=\"https://aws.amazon.com/eks/eks-anywhere\">Amazon EKS Anywhere</a> is now available to leverage EKS features with your on-premise infrastructure, accelerate adoption with partner integrations, managed add-ons, and curated open-source tools.</p> \n<p>To learn more with a live demo and Q&amp;A, join us for <a href=\"https://containersfromthecouch.com/\">Containers from the Couch</a> on September 13. You can see full demos to create a cluster and show admin workflows for scaling, upgrading the cluster version, and GitOps management.</p> \n<p>Please send us feedback either through your usual AWS Support contacts, on the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=303\">AWS Forum</a> for Amazon EKS or on the <a href=\"https://github.com/aws/containers-roadmap\">container roadmap</a> on Github.</p> \n<p>– <a href=\"https://twitter.com/channyun\">Channy</a></p>","author":"Channy Yun","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"9a41e121afd1c3e40ac75b33925d72f1874badc8e3baa2ef38119ec6079305f5","category":"Tech"}