{"title":"AppFabric support expands how HashiCorp Terraform Cloud integrates with AWS","link":"https://www.hashicorp.com/blog/appfabric-support-expands-how-hashicorp-terraform-cloud-integrates-with-aws","date":1709226000000,"content":"<p><a href=\"https://www.hashicorp.com/products/terraform\">HashiCorp Terraform</a> is the world’s most widely used multi-cloud provisioning product. The Terraform ecosystem has notched more than 3,000 providers, 14,000 modules, and 250 million downloads. <a href=\"https://developer.hashicorp.com/terraform/cloud-docs\">Terraform Cloud</a> is the fastest way to adopt Terraform, providing everything practitioners, teams, and global businesses need to create and collaborate on infrastructure and manage risks for security, compliance, and operational constraints. </p>\n\n<p>This month, AWS AppFabric added support for Terraform Cloud, expanding an already long list of ways that Terraform can connect, secure and provision infrastructure with AWS. This post will explore the new AppFabric support and highlight two other key existing integrations: <a href=\"https://www.hashicorp.com/blog/terraform-cloud-adds-dynamic-provider-credentials-vault-official-cloud-providers\">Dynamic provider credentials</a> and <a href=\"https://www.hashicorp.com/blog/aws-and-hashicorp-announce-service-catalog-support-for-terraform-cloud\">AWS Service Catalog support for Terraform Cloud</a>. </p>\n\n<h2>AWS AppFabric support for Terraform Cloud</h2>\n\n<p><a href=\"https://aws.amazon.com/about-aws/whats-new/2024/02/aws-appfabric-cisco-duo-terraform/\">AWS AppFabric now supports Terraform Cloud</a>. IT administrators and security analysts can use AppFabric to quickly integrate with Terraform Cloud, aggregate enriched and normalized SaaS audit logs, and audit end-user access across their SaaS apps. This launch expands AWS AppFabric <a href=\"https://docs.aws.amazon.com/appfabric/latest/adminguide/supported-applications.html\">supported applications</a> used across an organization.</p>\n\n<p>AWS AppFabric quickly connects SaaS applications, or data lakes like Amazon Security Lake. For Terraform Cloud users, this integration can accelerate time-to-market and help developers release new features to production faster with streamlined infrastructure provisioning and application delivery workflows.</p>\n\n<p>To learn more, visit the <a href=\"https://aws.amazon.com/appfabric/\">AWS AppFabric page</a> and then check out <a href=\"https://docs.aws.amazon.com/appfabric/latest/adminguide/terraform.html\">how to connect AppFabric to your Terraform Cloud account. </a></p>\n\n<h2>Dynamic credentials with the AWS provider</h2>\n\n<p>Introduced early last year, Terraform Cloud's <a href=\"https://www.hashicorp.com/blog/terraform-cloud-adds-dynamic-provider-credentials-vault-official-cloud-providers\">dynamic provider credentials</a> let you establish a trust relationship between Terraform Cloud and AWS. They limit the blast radius of compromised credentials by using unique, single-use credentials for each Terraform run. Dynamic credentials also give you fine-grained control over the resources that each of your Terraform Cloud projects and workspaces can manage. Terraform Cloud supports dynamic credentials for AWS and Vault.</p>\n\n<p>To learn more, AWS and HashiCorp have since written a joint blog post on how to <a href=\"https://aws.amazon.com/blogs/apn/simplify-and-secure-terraform-workflows-on-aws-with-dynamic-provider-credentials/\">Simplify and Secure Terraform Workflows on AWS with Dynamic Provider Credentials</a> and you can learn how to <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/workspaces/dynamic-provider-credentials/aws-configuration\">configure Dynamic Credentials with the AWS Provider at HashiCorp Developer</a>. </p>\n\n<h2>Terraform Cloud self-service provisioning with AWS Service Catalog</h2>\n\n<p>In August 2023, AWS added <a href=\"https://aws.amazon.com/servicecatalog/\">AWS Service Catalog</a> support for Terraform Cloud. This includes integrated access to key AWS Service Catalog features, including cataloging of standardized and pre-approved Terraform configurations, infrastructure as code templates, access control, resource provisioning with least-privilege access, versioning, sharing to thousands of AWS accounts, and tagging. By combining Terraform Cloud with AWS Service Catalog, we’re connecting the AWS Service Catalog interface that many customers already know, with the existing workflows and policy guardrails of Terraform Cloud.</p>\n\n<p>HashiCorp and AWS have since co-presented atHashiConf (<a href=\"https://www.youtube.com/watch?v=nXsutsnrzZg\">Terraform Cloud self-service provisioning with AWS Service Catalog</a>) and partnered on AWS’s blog post on <a href=\"https://aws.amazon.com/blogs/apn/how-to-use-aws-service-catalog-with-hashicorp-terraform-cloud/\">How to Use AWS Service Catalog with HashiCorp Terraform Cloud</a>, demonstrating the workflow for provisioning a new product and offering access to getting-started guides.</p>\n\n<h2>Self-service infrastructure is no longer a dream</h2>\n\n<p>Platform teams can use Terraform Cloud, <a href=\"https://developer.hashicorp.com/waypoint/tutorials/hcp-waypoint\">HCP Waypoint</a>, and the AWS Service Catalog to create simplified Terraform-based workflows for developers. </p>\n\n<p>Terraform modules can incorporate unit testing, built-in security, policy enforcement, and reliable version updates. Using these tools, platform teams can establish standardized workflows to deploy applications and deliver a smooth and seamless developer experience. Learn more by viewing AWS and HashiCorp’s recent <a href=\"https://www.youtube.com/watch?v=ihm4YPg6lEM\">Self-service infrastructure is no longer a dream</a> talk from AWS re:Invent:</p>\n","author":"Mike Doheny","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"beb71b27f88b315a3cb1ca5a4ee786a775485472af768f088e3f95b224ddd917","category":"Tech"}