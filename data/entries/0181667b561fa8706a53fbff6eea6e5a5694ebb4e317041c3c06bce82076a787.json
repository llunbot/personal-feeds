{"title":"จดบันทึกเรื่อง Platform Engineering","link":"https://www.somkiat.cc/note-platform-engineering/","date":1735803153000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2025/01/platform-emgineer-150x150.jpg\" alt=\"\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2025/01/platform-emgineer-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2025/01/platform-emgineer-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2025/01/platform-emgineer.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2025/01/platform-emgineer.jpg\" alt=\"\" width=\"731\" height=\"424\" /></a></figure>\n\n\n\n<p>Platform Engineering นั้นถูกออกแบบ สร้าง และเป็นระบบแบบ self-service<br />เน้นที่การส่งมอบ software ตาม Software development life cycle (SDLC)<br />ให้เกิด productivity และ และประสิทธิภาพของทีมมากที่สุด<br />โดย platform นี้จะเปิดโอกาสให้</p>\n\n\n\n<ul>\n<li>เลือกเครื่องมือ และ framework ที่เหมาะสม</li>\n\n\n\n<li>เลือกหรือลองขั้นตอนการทำงานให้เหมาะสม</li>\n\n\n\n<li>เป็น centralized platform ที่ต่อไปจะทำให้เกิดความเป็นมาตรฐานต่อไป</li>\n\n\n\n<li>มี reuse component ให้ใช้งาน ไม่ต้องทำซ้ำ</li>\n\n\n\n<li>คนทำงานสามารถทำงานร่วมกันได้ง่าย ลดปัญหาคอขวด หรือ คนกลาง</li>\n\n\n\n<li>No-one-size-fit-all</li>\n</ul>\n\n\n\n<span></span>\n\n\n\n<p><strong>เป้าหมายหลัก ๆ ของ Platform Engineering</strong></p>\n\n\n\n<ul>\n<li>การทำงานแบบอัตโนมัติ</li>\n\n\n\n<li>ขั้นตอนการทำงานที่เป็นมาตรฐาน</li>\n\n\n\n<li>Self-service</li>\n\n\n\n<li>Developer-centric design</li>\n\n\n\n<li>Scalability and Reliability</li>\n\n\n\n<li>Collaboration ระหว่างทีมให้มากยิ่งขึ้น ลดช่องว่างระหว่างทีมให้น้อยลง</li>\n</ul>\n\n\n\n<p>เนื่องจาก platform นี้ใช้งานใน SDLC<br />ดังนั้นคนที่ควรมีส่วนร่วมในการออกแบบและสร้างระบบนี้<br />คือคนที่อยู่ในแต่ละขั้นตอนนั้นเอง<br />เพื่อสร้างให้ตรงกับความต้องการหรือเป้าหมายของระบบนั่นเอง</p>\n\n\n\n<p><strong>สิ่งที่สำคัญของ Platform Engineering</strong></p>\n\n\n\n<ul>\n<li>Infrastructure as Code (IaC)</li>\n\n\n\n<li>Continuous Integration and Delivery ตั้งแต่ code, test และ deploy เป็นต้น</li>\n\n\n\n<li>Observability and monitoring เช่น log, trace, metric, exception tracking และ alert system</li>\n\n\n\n<li>Containerization เช่น Docker และ Kubernetes เป็นต้น</li>\n</ul>\n\n\n\n<p><strong>ผลที่ตามมาของการใช้งาน Platform Engineering</strong></p>\n\n\n\n<ul>\n<li>Waiting time ที่น้อยลง</li>\n\n\n\n<li>คุณภาพของ software ที่สูงขึ้น</li>\n\n\n\n<li>Delivery time หรือ lead time ที่ลดลง ทำให้ time to market เร็วขึ้น</li>\n\n\n\n<li>เพิ่มความพึงพอใจของ developer ให้มากขึ้น รวมทั้งเพิ่มเรื่อง Developer Experience (DX)</li>\n\n\n\n<li>ลด technical debt ลง</li>\n\n\n\n<li>ปรับปรุงเรื่องของ security และ compilance ต่าง ๆ ให้ดีและมีมาตรฐานมากยิ่งขึ้น</li>\n</ul>\n\n\n\n<p>อย่าลืมว่าระบบนี้ ต้องไปในทางเดียวกับเป้าหมายของ product และ องค์กรด้วย</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"0181667b561fa8706a53fbff6eea6e5a5694ebb4e317041c3c06bce82076a787","category":"Thai"}