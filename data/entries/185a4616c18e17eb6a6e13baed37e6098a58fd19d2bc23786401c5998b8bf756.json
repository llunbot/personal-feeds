{"title":"Terraform AWS provider 5.0 adds updates to default tags","link":"https://www.hashicorp.com/blog/terraform-aws-provider-5-0-adds-updates-to-default-tags","date":1685034000000,"content":"<p>We are excited to announce the release of version 5.0 of the Terraform AWS provider with highly anticipated updates to default tags. Initially launched in <a href=\"https://www.hashicorp.com/blog/default-tags-in-the-terraform-aws-provider\">May 2021</a>, default tags can now be set at the provider level, which applies them  across all resources that support them in the configuration. This post reviews the details and benefits of this updated feature and also covers a handful of new features released this year.</p>\n\n<h2>2023 highlights</h2>\n\n<p>As the Terraform AWS provide<a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs\">r</a> download count tops 1.7 billion, AWS and HashiCorp continue to develop new integrations to help customers work faster, use more services and features, and enjoy developer-friendly ways to provision cloud infrastructure. This year we focused on improving the user experience for practitioners by adding new services to the AWS provider including:</p>\n\n<ul>\n<li>Amazon CloudWatch Observability Access Manager</li>\n<li>Amazon EC2 Recycle Bin</li>\n<li>Amazon QuickSight </li>\n<li>Amazon VPC Lattice </li>\n<li>AWS Directory Service trust relationships</li>\n<li>Amazon EventBridge Pipes </li>\n</ul>\n\n<h2>Default tags enhancements</h2>\n\n<p>Default tags in the Terraform AWS provider allow practitioners to define common metadata tags at the provider level. These tags are then applied to all supported resources in the Terraform configuration. Previously, assumptions and restrictions were made to allow this feature to function across as many resources as possible. However, it could be difficult to retrofit existing code, causing frustrating manual intervention.  </p>\n\n<p>Thanks to new features available in the <a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2\">Terraform plugin SDK</a> and the <a href=\"https://developer.hashicorp.com/terraform/plugin/framework\">Terraform plugin framework</a>, we have removed several limitations which made default tags difficult to integrate with existing resources and modules.  </p>\n\n<p>The updates in version 5.0 solve for:</p>\n\n<ul>\n<li><strong>Inconsistent final plans</strong> that cause failures when tags are computed.</li>\n<li><strong>Identical tags</strong> in both default tags and resource tags.</li>\n<li><strong>Perpetual diffs</strong> within tag configurations.</li>\n</ul>\n\n<p>These changes make the behavior align more consistently with community expectations. You can find more details about the updates to default tags in the <a href=\"https://github.com/hashicorp/terraform-provider-aws/releases/tag/v5.0.0\">AWS provider changelog</a>.</p>\n\n<p>Default tags are an easy way to standardize your Terraform configuration in accordance with <a href=\"https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html\">AWS’s recommended best practices</a>. </p>\n\n<p>This example shows how default tags can be used to apply common metadata to a Terraform configuration:</p>\n<pre><code>provider \"aws\" {\n  default_tags {\n    tags = {\n      environment = \"Dev\"\n      department  = \"WebEng\"\n      application = \"HashiCafe website\"\n      cost_center = \"8675309\"\n    }\n  }\n}\n\n\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"example-bucket-aj-11122\"\n  tags = {\n    environment = \"Production\"\n    created_at  = timestamp()\n  }\n}</code></pre><h2>Changes and deprecations</h2>\n\n<h3>Remove deprecated attributes</h3>\n\n<p>Previously when using attributes marked as deprecated or removed, users would receive a “warning” notification. With this release, users will no longer receive a warning detailing what attribute to use. Instead, users will receive an “unsupported error” as these attributes will be removed. This will help ensure practitioners are using best practices and are not using outdated features.</p>\n\n<h3>Remove EC2 classic functionality</h3>\n\n<p>While the AWS team removed EC2-Classic networking functionality back in August 2022,  the Terraform AWS provider team worked closely with AWS to extend support for the functionality until late September. This allowed any AWS customers who had qualified for extension to be able to finish their migration. These features were marked as deprecated and it is now time to remove them as the functionality is no longer available through AWS.  Practitioners should experience no changes as all AWS users have now fully migrated off EC2-Classic networking functionality. </p>\n\n<h2>Key benefits</h2>\n\n<p>The release of version 5.0 of the Terraform AWS provider allows practitioners to more efficiently manage tags for the provider. Here are a few of the main benefits of this new release:</p>\n\n<ul>\n<li><strong>Increase productivity</strong>: Application developers will now be able to set default tags without having to manually update existing resource-level configurations. This provides an improved user experience and simplifies practitioner configurations.<br /></li>\n<li><strong>Reduce risk</strong>: Platform teams now have increased resource coverage for the new services added, significantly reducing the time and customization it takes to support those new capabilities.</li>\n</ul>\n\n<h2>Learn more about AWS and HashiCorp</h2>\n\n<p>Developers can use the Terraform AWS provider to interact with the many resources supported by AWS. To learn the basics of Terraform using this provider, follow the hands-on tutorials for <a href=\"https://developer.hashicorp.com/terraform/tutorials/aws-get-started\">getting started with Terraform on AWS</a> on our developer education platform.</p>\n\n<p>When upgrading to version 5.0 of the Terraform AWS provider, please consult the <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/guides/version-5-upgrade\">upgrade guide</a> on the Terraform Registry, as it contains not only a list of changes but also examples. Because this release introduces breaking changes, we recommend <a href=\"https://developer.hashicorp.com/terraform/language/providers/requirements#best-practices-for-provider-versions\">pinning your provider version</a> to protect against unexpected results.For a complete list of the changes in 5.0, please reference the <a href=\"https://github.com/hashicorp/terraform-provider-aws/releases/tag/v5.0.0\">AWS provider changelog</a>.</p>\n\n<p>Please share any bugs or enhancement requests with us via <a href=\"https://github.com/hashicorp/terraform-provider-aws/issues/new/choose\">GitHub issues</a>. We look forward to your feedback and want to thank you for being such a great community!</p>\n\n<p>If you are currently using Terraform open source or are completely new to Terraform, you can <a href=\"http://hashi.co/tf-cloud-bc\">sign up for Terraform Cloud</a> and get started using the Free offering today.</p>\n","author":"Aurora Chun","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"185a4616c18e17eb6a6e13baed37e6098a58fd19d2bc23786401c5998b8bf756","category":"Tech"}