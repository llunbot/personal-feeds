{"title":"Consul 1.20 improves multi-tenancy, metrics, and OpenShift deployment","link":"https://www.hashicorp.com/blog/consul-1-20-improves-multi-tenancy-metrics-openshift-deployment","date":1728995400000,"content":"<p>Consul 1.20 makes improvements for Kubernetes environments for both service discovery and service mesh use cases. Consul is a global service networking platform that provides multi-runtime service discovery and secure services networking. Version 1.20 focuses on improvements for Consul on Kubernetes, addresses onboarding in multi-tenant environments, improves observability for service registration, and tightens security for OpenShift deployments.  </p>\n\n<h2>Simplified service discovery onboarding in multi-tenant deployments</h2>\n\n<p>Consul on Kubernetes introduces Consul <em>DNS views</em>, an enterprise feature that improves the usability of service discovery in multi-tenant environments and also tightens security by allowing organizations to limit discovery between tenants. As a result, organizations can more easily adopt service discovery across different teams throughout the organization while ensuring clear security separation between tenants. </p>\n\n<h3>Past challenges with admin partitions</h3>\n\n<p>In previous versions, a common challenge surfaced when existing customers enabled <a href=\"https://developer.hashicorp.com/consul/docs/enterprise/admin-partitions\">Consul admin partitions</a> and started migrating their Kubernetes applications into different partitions. Developers had to update their applications to include partition names in any Consul DNS queries. This was not required prior to using admin partitions because all services resided in the same default partition and therefore application services did not need to specify the partition name in their Consul DNS queries. However, when admin partitions were enabled and services were migrated into new partitions, developers needed to update application services to include the partition information of target services in Consul DNS requests, otherwise Consul would assume the request was made for a target service residing in the default partition.</p>\n\n<h3>The Consul DNS views solution</h3>\n\n<p>With Consul DNS views, developers who migrate from the default partition to a new partition no longer need to update their application services for Consul DNS queries within the same partition. Consul can now deploy a Consul DNS proxy pod in each partition that proxies all Consul DNS requests. The Consul DNS proxy appends partition metadata information from the requesting source service via an ACL token before forwarding to the Consul servers. With the source partition metadata included in the request, Consul will resolve the request in the context of that partition, rather than the default partition. As a result, developers do not need to alter their applications to include partition names in the DNS requests if both the requesting and target services reside in the same partition. This makes it much easier for organizations using Consul service discovery to migrate to a multi-tenant environment.</p>\n\n<p>In addition, Consul DNS views also provides more security control. In previous versions, ACLs that affected Consul DNS were enforced at a Consul cluster level. It was not possible to grant different DNS permissions to different tenants. All tenants had the same access to the same records as permitted by the cluster-level DNS ACL policy. Consul DNS views now allows organizations to apply per-tenant DNS ACL policies, providing more fine-grained controls for service discovery.</p>\n\n<p>The diagrams below illustrate a <code>frontend</code> service sending DNS queries to Consul in order to reach the <code>api</code> service. The Consul DNS proxy will append partition metadata in the query, which will ensure Consul returns the IP address for the <code>api</code> service in the appropriate partition.</p>\n<img src=\"https://www.datocms-assets.com/2885/1728677668-consul-dns-views-1.png\" alt=\"Consul\" /><img src=\"https://www.datocms-assets.com/2885/1728677681-consul-dns-views-2.png\" alt=\"Consul\" /><h2>Improved Consul catalog sync metrics for Kubernetes</h2>\n\n<p>Consul 1.20 now includes improved metrics for Consul catalog sync, resulting in more visibility for operators. Consul catalog sync is a feature that automatically registers Kubernetes services with Consulâ€™s catalog. Once registered, Kubernetes services can be discovered by other services in the Consul cluster, including non-Kubernetes services. </p>\n\n<p>Prior to this enhancement, operators had limited visibility into the status of Kubernetes services being synced to Consul and the performance of the sync catalog process. At scale, it was difficult to discern if the sync process was healthy and progressing normally. Without status information or metrics, troubleshooting performance-related issues was difficult.</p>\n\n<p>Catalog sync enhancements now provide more insights that include status and performance metrics of the sync process. New performance metrics include the rate of registered or deregistered services, the status and health of the sync process, and additional metadata related to registered services. As a result of this additional observability data, operators have a better understanding of the syncing process and are more equipped to troubleshoot issues. </p>\n\n<h2>Hardened OpenShift integration</h2>\n\n<p>The latest Consul release includes a new hardened integration that allows organizations with strict security requirements to more easily deploy Consul service mesh onto OpenShift environments. Prior to this release, deploying Consul service mesh on Kubernetes required the <a href=\"https://developer.hashicorp.com/consul/docs/k8s/connect/transparent-proxy\">transparent proxy</a> to have elevated permissions, specifically the <code>anyuid</code> security context constraint (SCC) privileges. This prevented security conscious customers from deploying the transparent proxy in OpenShift environments where elevated pod permissions were prohibited. Consul on Kubernetes 1.20 no longer requires elevated permissions for the transparent proxy in OpenShift deployments. As a result, organizations can deploy Consul on Kubernetes without having to compromise on their security posture. </p>\n\n<h2>Learn more about Consul 1.20</h2>\n\n<p>The latest Consul release provides several improvements for customers using Consul in Kubernetes environments. Consul DNS views removes friction for developers when migrating from single-tenant to multi-tenant environments for service discovery. This makes the adoption of admin partitions much easier across organizations. There are also enhancements for Consul catalog sync that provide operators with more insights into the health, status, and performance of service registration. Lastly, operators no longer need to provide elevated permissions to containers when using transparent proxy, resulting in tighter security in OpenShift deployments. </p>\n\n<p>For details on Consul DNS views, please refer to the <a href=\"https://developer.hashicorp.com/consul/docs/k8s/dns/views\">Consul DNS views on Kubernetes documentation</a>.</p>\n\n<p>Get started with HashiCorp Consul through our many <a href=\"https://developer.hashicorp.com/consul/tutorials\">tutorials</a> for both beginners and advanced users. You can start a free trial with <a href=\"https://www.hashicorp.com/products/consul/trial\">self-managed Consul Enterprise</a> to test out commercial features like admin partitions and Consul DNS views. </p>\n","author":"Van Phan","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"51686b8188c3e3ab70c72222d7a7563116f97f67b88286cdbd8281c6bcc66243","category":"Tech"}