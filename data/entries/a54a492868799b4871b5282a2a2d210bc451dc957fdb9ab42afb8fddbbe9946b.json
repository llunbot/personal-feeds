{"title":"สรุปจากบทความเรื่อง Why I’m No Longer Talking to Architects About Microservices","link":"https://www.somkiat.cc/note-deom-why-im-no-longer-talking-to-architects-about-microservices/","date":1742992448000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2025/03/microservices-problem-01-150x150.jpg\" alt=\"\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2025/03/microservices-problem-01-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2025/03/microservices-problem-01-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2025/03/microservices-problem-01.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2025/03/microservices-problem-01.jpg\" alt=\"\" /></a></figure>\n\n\n\n<p>จากบทความเรื่อง <strong><a href=\"https://blog.container-solutions.com/why-im-no-longer-talking-to-architects-about-microservices\" target=\"_blank\">Why I'm No Longer Talking to Architects About Microservices</a></strong><br />โดยผู้เขียนจะไม่พูดคำว่า Microservices สำหรับ Architecture ของ Software อีกแล้ว<br />เนื่องจากไม่ได้ทำให้เกิดคุณค่าใด ๆ  ลย<br />เนื่องจาก 3 ปัจจัยหลักดังนี้</p>\n\n\n\n<ul>\n<li>ความหมายของ Microservices ที่แตกต่างกัน เหมือนตาบอกคลำช้าง ไม่มีใครผิดหรือถูก แต่มันไม่ไปในทิศทางเดียวกันเลย ทำให้คุยกันไม่รู้เรื่อง</li>\n\n\n\n<li>ไม่ได้สนใจ business goal กันเลย ว่าสิ่งที่ทำอยู่นั้นมันแก้ไขปัญหาทาง business อย่างไร</li>\n\n\n\n<li>นำมาใช้โดยไม่ปรับเปลี่ยนโครงสร้าง หรือ การทำงานององค์กรเลย จะพบว่าบริษัทเล็ก ๆ  จะประสบความสำเร็จมากกว่า เนื่องจากเปลี่ยนแปลง หรือ ปรับเปลี่ยนได้ง่ายกว่า</li>\n</ul>\n\n\n\n<p>มาดูรายละเอียดกันหน่อย</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>1. ความหมายหรือความเข้าใจเกี่ยวกับ Microservices</strong></p>\n\n\n\n<p>เป็นปัญหาอย่างแรก ที่ก่อให้เกิดปัญหาอื่น ๆ ตามมา<br />ซึ่งมาหลากหลายความหมายมาก ๆ  ตามแต่ละคน หรือ ประสบการณ์ต่างกันไป<br />เหมือนตาบอดคลำช้าง<br />ยกตัวอย่างเช่น</p>\n\n\n\n<ul>\n<li>มีจำนวน line of code (LoC) น้อย ๆ</li>\n\n\n\n<li>two-pizza team</li>\n\n\n\n<li>ต้องการเพียง programmer  1 คนเท่านั้น ในการออกแบบ สร้าง และ ดูแล</li>\n\n\n\n<li>แต่ละ service ต้องทำงานเป็นอิสระ</li>\n\n\n\n<li>แต่ละ service ต้อง pack อยู่ในเพียง container หรือ pod เดียวเท่านั้น</li>\n\n\n\n<li>แต่ละ service ต้องมี data store หรือ database เป็นของตัวเอง</li>\n\n\n\n<li>เป็นอิสระในการ upgrade และ replace</li>\n</ul>\n\n\n\n<p><strong>ดังนั้นเพื่อความง่าย อย่าพูดเลยคำนี้ ถ้ายังให้ความหมายไม่ตรงกัน</strong><br />แทนที่จะบอกชื่อของ architecture <br />ให้เปลี่ยนเป็นว่า สิ่งที่เรากำลังคุยกันนี้<br />มันแก้ไขปัญหาอะไร<br />มี trade-off อย่างไร<br />ยกตัวอย่างเช่น</p>\n\n\n\n<ul>\n<li>จะทำการ deploy feature ใหม่ ๆ  ให้เร็วขึ้นอย่างไร</li>\n\n\n\n<li>จะลดการผูกมัดของระบบต่าง ๆ  อย่างไร</li>\n\n\n\n<li>จะ scale ในส่วนต่าง ๆ  อย่างไร</li>\n</ul>\n\n\n\n<p><strong>โดยปัญหาเรื่องของคำใหม่ หรือ Buzzword มีปัญหามาอย่างต่อเนื่อง</strong><br />ไม่ว่าจะเป็น DevOps, Agile, SRE และ Observability<br />เช่น DevOps แทนที่จะเป็นการทำงานร่วมกันระหว่าง Development กับ Operation team<br />กลายเป็นว่าเกิดทีมใหม่ขึ้นมาคือ DevOps team ซะอย่างงั้น !!<br />ที่เป็น centralized team ของเครื่องมือการ deploy และ monitoring </p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2025/03/image-12-1024x786-1.jpeg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2025/03/image-12-1024x786-1.jpeg\" alt=\"\" width=\"479\" height=\"367\" /></a></figure>\n\n\n\n<p><strong>2. สิ่งที่กำลังทำอยู่นั้น ไม่ได้มีความสัมพันธ์กับ Business goal เลย !!</strong></p>\n\n\n\n<p>เป็นปัญหาที่เกิดมาจากปัญหาข้อแรกนั่นเอง<br />เพราะว่าในการแก้ไขปัญหา ควรเริ่มต้นจากปัญหาก่อนเสมอ<br />ซึ่งปัญหาที่มักจะส่งผลกระมากสุด ๆ คือ business problem นั่นเอง<br />ดังนั้นถ้ามีการใช้งาน Microservices แล้วนั้น<br />ทำการแก้ไขปัญหาเชิง business อย่างไรบ้าง ? หรือไม่มีเลย ?<br />ยกตัวอย่างเช่น</p>\n\n\n\n<p><strong>ถ้าบอกว่าต้องการใช้งาน Microservices เพราะว่าต้องการ scale </strong><br />คำถามคือ scale อะไร และ ตรงไหนที่เป็นคอขวดของระบบ</p>\n\n\n\n<p><strong>ถ้าบอกว่าต้องการใช้งาน Microservices เพราะว่าจะทำให้เรา agile ขึ้น</strong><br />คำถามคือ ทำอย่างไร<br />เช่น การที่เราทำการ deploy ได้ช้า เป็นปัญหามาจาก Architecture ใช่ไหม ?<br />หรือเป็นปัญหาที่คน ?<br />หรือเป็นปัญหาที่ technology​ ?<br />หรือเพราะว่าข้อจำกัด process ของการทำงาน ?<br />เอาให้มันแน่</p>\n\n\n\n<p><strong>ถ้าบอกว่าต้องการใช้งาน Microservices เพราะว่าต้องการ deploy เป็นอิสระ</strong><br />คำถามคือ เป็นความต้องการจริง ๆ  ของทีม<br />หรือถ้าทำได้ก็ดี ถ้าไม่ได้ก็ไม่เป็นไร </p>\n\n\n\n<p><strong>ถ้าบอกว่าต้องการใช้งาน Microservices จะช่วยลดงานลงไป</strong><br />คำถามคือ ลดงานของใคร<br />หรือเพียงย้ายไปให้คนอื่นทำแทนเท่านั้นเอง</p>\n\n\n\n<p><strong>ในการพูดคุยนั้น เราต้องการที่จะเปลี่ยนไปใช้ของใหม่</strong><br />ทั้ง programming ใหม่ ๆ  technology ใหม่ ๆ<br />มากกว่าการแก้ไข หรือ ปรับปรุงปัญหาของระบบเดิมกันหรือไม่<br /><br /><strong>ถ้าบอกว่า ของเดิมอย่าไปแตะมัน ถ้ามันยังทำงานได้</strong><br />แสดงว่า เราไม่ได้สนใจการปรับปรุงเลย<br />แต่อยากไปสร้างของใหม่ขึ้นมาแทนที่มากกว่า<br />บ่อยครั้งจะพบว่า มันคือการสร้างปัญหาเดิมขึ้นมาใหม่เท่านั้นเอง</p>\n\n\n\n<p><strong><em>ดังนั้นให้ focus ที่เป้าหมายก่อนเสมอ</em></strong></p>\n\n\n\n<p><strong>3. อยากจะเปลี่ยน Architecture แต่ไม่ยอมเปลี่ยนแปลงตัวเองและองค์กร</strong></p>\n\n\n\n<p>ถึงแม้จะทำการเปลี่ยนแปลง architecture มาเป็น Microservices แล้ว<br />แต่ไม่ปรับตัวเอง ทีม หรือ องค์กร ให้สอดคล้อง<br />ก็จะไม่ได้ผลตามที่คาดหวัง<br />หรืออาจจะเปลี่ยนเพียงชื่อเท่านั้นเอง<br />ยกตัวอย่างเช่น</p>\n\n\n\n<p><strong>เราต้องทำการแบบ cross-functional team มีการทำงานแบบ end-to-end นะ</strong><br />แต่จะไปจัดการข้อมูลกับ database<br />ต้องทำการเปิด request ไปขอให้ทีม DBA จัดการให้เสมอ<br />กลายเป็นปัญหาคอขวดอีก<br />แบบนี้คือ end-to-end และ cross-functional team จริง ๆ  หรือ ?<br />คำตอบคือ กำลังหลอกตัวเองอยู่</p>\n\n\n\n<p><strong>ทำให้การตัดสินใจเป็นแบบ decentralized คือ ไม่มีศูนย์กลาง</strong><br />เพราะว่าการทำงานร่วมกัน มันมี overhead ในการทำงานร่วมกัน<br />แต่เมื่อทำการ deploy ต้องมี approval process ที่เยอะแยะเต็มไปหมด<br />แบบนี้หรือคือ  decentralized<br />และคำที่บอกว่า แต่ละ service จะเป็นอิสระต่อกัน ก็ลืมไปได้เลย<br />มันไม่เคยเกิดขึ้น</p>\n\n\n\n<p><strong>ถ้ายังไม่พร้อมต่อการเปลี่ยนแปลงแล้ว</strong><br />Microservices พร้อมที่จะเป็นปัญหาขึ้นมาทันที<br />ดังนั้นเราไม่น่าจะเหมาะกับ Microservices แน่ ๆ !! ...</p>\n\n\n\n<p><strong>โดยรวมแล้ว เรื่องของ Architecture ที่เลือกมานั้น</strong></p>\n\n\n\n<p>มันช่วยเพิ่ม productivity ใช่หรือไม่<br />มันช่วยเพิ่มความน่าเชื่อของระบบหรือไม่<br />มันช่วยแก้ไขปัญหาทาง business หรือไม่<br />นั่นคือ หัวใจ หรือ เป้าหมาย ที่สำคัญ</p>\n\n\n\n<p><strong>สิ่งที่น่าสนใจคือ</strong><br />เรามักจะเปลี่ยน Architecture ของระบบไปเรื่อย ๆ<br />แต่สิ่งที่ไม่ค่อยเปลี่ยนคือ คน ที่เลือก Architecture มาใช้นั้นเอง<br />ถ้าผลออกมาไม่ดี ก็แค่บอกว่า มันไม่ดี ไม่เหมาะกับเรา<br />จากนั้นก็ ...<br /></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"a54a492868799b4871b5282a2a2d210bc451dc957fdb9ab42afb8fddbbe9946b","category":"Thai"}