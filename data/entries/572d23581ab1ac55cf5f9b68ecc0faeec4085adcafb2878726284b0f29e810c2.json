{"title":"POC :: แสดงผลการทดสอบระบบงานใน Grafana","link":"https://www.somkiat.cc/poc-test-result-in-grafana/","date":1709439366000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-test-result-150x150.jpg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-test-result-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-test-result-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-test-result.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-test-result.jpg\" width=\"738\" height=\"412\" /></a></figure>\n\n\n\n<p>จากการแบ่งปันเรื่องของการทดสอบแบบอัตโนมัตินั้น<br />มีคำถามที่น่าสนใจคือ<br />เราจะทำการจัดการและแสดงผลการทดสอบอย่างไรดี<br />เพื่อให้ทุกคนที่เกี่ยวข้อเข้าถึงได้ง่าย<br />และเมื่อมีปัญหาทุก ๆ คนที่สนใจ สามารถเห็น หรือ ได้รับข้อมูลทันที<br />ดังนั้นลองมาทำกันดูหน่อย</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>ถ้าเป็นการทำงานปกติทั่วไป มักจะเป็นดังนี้</strong></p>\n\n\n\n<ul>\n<li>ทำการทดสอบใน pipeline ของ CI/CD จะเห็นผลการทดสอบ และ รายละเอียดทันที</li>\n\n\n\n<li>ทำการ import เข้า SonarQube ก็เห็นข้อมูลทั้งหมดเช่นกัน</li>\n</ul>\n\n\n\n<p>แต่สิ่งที่อยากได้นั้น แตกต่างกันไป <br /><strong>โดยสิ่งที่ผมต้องการคือ</strong></p>\n\n\n\n<ul>\n<li>เมื่อใคร ๆ ก็ตามทดสอบแล้ว ให้ส่งผลการทดสอบมาตรงกลาง โดยอ่านผลการทดสอบจากไฟล์รูปแบบต่าง ๆ เช่น junit และ json เป็นต้น</li>\n\n\n\n<li>ทำการแสดงผลการทดสอบบน Grafana  แบบสวย ๆ</li>\n\n\n\n<li>สามารถทำการ alert ได้เมื่อเจอผลการทำงานที่สนใจ เช่น Prometheus alert manager เป็นต้น</li>\n\n\n\n<li></li>\n</ul>\n\n\n\n<p>เมื่อได้ requirement ที่ชัดเจนแล้ว ก็มีลองสร้างแบบง่าย ๆ ขึ้นมากัน</p>\n\n\n\n<p><strong>ขั้นตอนที่ 1 ทำการอ่านข้อมูลผลการทดสอบจากไฟล์ xml ซึ่งเป็น junit format</strong></p>\n\n\n\n<p>ตรงนี้สบายหน่อย มี library ของแต่ละภาษาให้ใช้งานเลย<br />หรือเขียนเองแบบง่าย ๆ<br />เพราะว่าเป็นไฟล์ XML ที่เป็นมาตรฐาน<br />แต่ชอบ json มากกว่า</p>\n\n\n\n<p><strong>ขั้นตอนที่ 2 จะจัดเก็บข้อมูลอย่างไร รูปแบบไหนดี ?</strong></p>\n\n\n\n<p>ในขั้นตอนนี้จะเป็นส่วนสำคัญมาก ๆ<br />ซึ่งมีหลายวิธี แต่หนึ่งในวิธีการที่เลือกใช้เป็นดังนี้</p>\n\n\n\n<ul>\n<li>จะใช้งาน <a href=\"https://opentelemetry.io/\" target=\"_blank\">OpenTelemetry</a> สำหรับรูปแบบของข้อมูล metric</li>\n\n\n\n<li>ทำการส่งข้อมูลไปยัง Otel Collector</li>\n\n\n\n<li>เก็บข้อมูลใน Prometheus ​โดยให้ไปดึงข้อมูลมากจาก Otel Collector</li>\n\n\n\n<li>แสดงผลข้อมูลจาก Prometheus ใน Grafana dashboard</li>\n</ul>\n\n\n\n<p>แสดงการทำงานดังรูป</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/03/prometheus-exporter-opentelemetry-diagram.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/prometheus-exporter-opentelemetry-diagram-1024x342.png\" width=\"689\" height=\"230\" /></a></figure>\n\n\n\n<p>โครงสร้างการทำงานของ Otel Collector เป็นดังรูป</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/03/opentelemetry.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/opentelemetry.jpg\" width=\"683\" height=\"379\" /></a></figure>\n\n\n\n<p><strong>ขั้นตอนที่สาม มาลองเขียน code แบบง่าย ๆ กันด้วย</strong></p>\n\n\n\n<p>เลือกใช้ภาษา Go ในการพัฒนา เพื่อสร้าง metric และส่งข้อมูลไปยัง Otel Collector<br />มาดูตัวอย่างของการสร้าง metric แบบง่าย ๆ</p>\n\n\n\n[gist id=\"beb229a8b438df80f95b0a7d62a3bd6f\" file=\"1.go\"]\n\n\n\n<p>ในส่วนของ Otel Collector นั้นก็ทำการ config ง่าย ๆ <br />เพื่อให้ export ออกไปในรูปแบบของ prometheus ได้เลย (Prometheus exporter)</p>\n\n\n\n[gist id=\"beb229a8b438df80f95b0a7d62a3bd6f\" file=\"2.yaml\"]\n\n\n\n<p><strong>ขั้นตอนสุดท้าย ทำการสร้าง Prometheus และ Garana</strong></p>\n\n\n\n<p>จะได้ข้อมูลดังนี้</p>\n\n\n\n<p>ค้นหา metric ใน Prometheus</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/03/Screenshot-2567-03-02-at-21.47.51.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/Screenshot-2567-03-02-at-21.47.51-1024x301.png\" width=\"655\" height=\"192\" /></a></figure>\n\n\n\n<p>ทำการสร้าง Grafana dashboard เพื่อแสดงผลการทดสอบแบบง่าย ๆ</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/03/Screenshot-2567-03-02-at-21.57.23.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/Screenshot-2567-03-02-at-21.57.23-1024x381.png\" width=\"651\" height=\"242\" /></a></figure>\n\n\n\n<p>เพียงแค่นี้ก็เก็บข้อมูล และ แสดงผลข้อมูลการทดสอบ แบบง่าย ๆ ได้แล้ว<br />ขอให้สนุกกับกับการ coding ครับ</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"572d23581ab1ac55cf5f9b68ecc0faeec4085adcafb2878726284b0f29e810c2","category":"Thai"}