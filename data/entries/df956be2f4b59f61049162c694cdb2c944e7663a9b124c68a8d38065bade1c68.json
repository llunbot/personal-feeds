{"title":"สรุปเกี่ยวกับแนวทางของการสร้าง Unique Id","link":"https://www.somkiat.cc/solution-to-generate-unique-id/","date":1703945857000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2023/12/uuid-ulid-150x150.jpeg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2023/12/uuid-ulid-150x150.jpeg 150w, https://www.somkiat.cc/wp-content/uploads/2023/12/uuid-ulid-75x75.jpeg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/12/uuid-ulid.jpeg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/12/uuid-ulid.jpeg\" width=\"586\" height=\"330\" /></a></figure>\n\n\n\n<p>สิ่งหนึ่งที่น่าสนใจของการพัฒนาระบบงานคือ<br />เรื่องของ Unique Id หรือ id ของ object ต่าง ๆ ที่ไม่ซ้ำ<br />เพื่อระบุถึง object นั้น ๆ ในระบบงาน <br />ยกตัวอย่างเช่น</p>\n\n\n\n<ul>\n<li>user id</li>\n\n\n\n<li>transaction id</li>\n\n\n\n<li>order id</li>\n\n\n\n<li>short url</li>\n</ul>\n\n\n\n<p>คำถามคือ เรามีวิธีการสร้าง unique id กันอย่างไรบ้าง<br />ดังนั้นลองจดสรุปสิ่งที่เคยทำมาบ้างไว้นิดหน่อย<br />มาเริ่มกันเลย</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>วิธีที่ง่ายที่สุด คือ ใช้ id จาก table ของ database ไปเลย</strong></p>\n\n\n\n<p>เช่น </p>\n\n\n\n<ul>\n<li>sequence, auto increment จาก RDBMD (อย่าดึงมาแล้วเอามาบวก 1 ใน code ละครับ เดี๋ยวชน)</li>\n\n\n\n<li><a href=\"https://www.mongodb.com/docs/manual/reference/method/UUID/\" target=\"_blank\">UUID</a> หรือ Object Id ของ document ใน MongoDB</li>\n</ul>\n\n\n\n<p>ต่อมามีความต้องการเพิ่มเติมว่า unique id นั้นต้อง readable<br />หรืออ่านแล้วตีความได้ง่าย<br />เพื่อนำไปใช้งานต่อไปทางด้าน operation</p>\n\n\n\n<p>เช่น order id<br />ต้องการให้รู้ว่า order สร้างวันไหน เวลาอะไร ดังนั้นต้องเป็น timestamp หรือ date ที่มี format<br />แต่อาจจะเกิดการซ้ำได้ ถ้ามีคนเข้ามาสร้าง order พร้อม ๆ กัน<br />ดังนั้นต้องเพิ่ม sequence id และ random number เข้ามาอีก !!<br />น่าคิดว่า ถ้า scale เครื่องเยอะ ๆ performance จะเป็นอย่างไร ?<br />และแนวทางที่เลือกจะมีโอกาสซ้ำไหม ?<br />ถ้าซ้ำแล้วจะทำ หรือ จัดการอย่างไร ?<br />เพื่อให้ระบบงานทำงานต่อได้</p>\n\n\n\n<p>อาจจะต้องเพิ่ม prefix เข้ามาใน id ของแต่ละเครื่อง<br />สำหรับการ id ที่ generate ออกมา ถ้าใช้ sequence</p>\n\n\n\n<p><strong>ลองไปอ่านเกี่ยวกับ UUID หรือ GUID เพิ่มเติม พบว่า</strong></p>\n\n\n\n<p>มี UUID หลาย version มาก ๆ เช่น</p>\n\n\n\n<ul>\n<li>Version 1 Time-based MAC ใช้ mac address และ current time ของเครื่องนั้น ๆ</li>\n\n\n\n<li>Version 2 DCE Security เหมือนกับ type 1 แต่เพิ่ม POSIX UID หรือ GID เข้ามา</li>\n\n\n\n<li>Version 3 Name-based md5 เพิ่ม string เข้ามา แล้วผ่าน md5 </li>\n\n\n\n<li>Version 4 Randomness เพิ่ม random data เข้ามา</li>\n\n\n\n<li>Version 5 Name-based SHA1 เปลี่ยนจาก md5 มาเป็น SHA1</li>\n\n\n\n<li>Version 5 Reordered Time</li>\n\n\n\n<li>Version 7 Unix Epoch Time ซึ่งมีตัว <a href=\"https://github.com/jetpack-io/typeid\" target=\"_blank\">TypeID</a> ที่ implement ตาม v7</li>\n\n\n\n<li>Version 8 Custom</li>\n</ul>\n\n\n\n<p>พออ่าน UUID แล้วไปเจอว่าสามารถ convert ไปใช้ <strong><a href=\"https://github.com/ulid/spec\" target=\"_blank\">ULID</a></strong> ได้อีก<br />ULID (Universally Unique Lexicographically Sortable Identifier)<br />ซึ่งเรียงลำดับให้เลย แถมสั้นลง ไม่ค่อยซ้ำ ตรงนี้ต้องทดสอบ<br />เยอะไปไหน !!</p>\n\n\n\n<p>ซึ่งเท่าที่เห็นจะใช้ UUID กันเยอะ ไม่ค่อยซ้ำ เพราะว่า ยาวตั้ง 128 bit<br />แต่ยากต่อการจดจำ และ ไม่สามารถเรียงลำดับได้</p>\n\n\n\n<p><strong>ตัวอื่น ๆ ที่เห็นมา เช่น</strong></p>\n\n\n\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Snowflake_ID\" target=\"_blank\">Snowflake ID</a></li>\n\n\n\n<li><a href=\"https://github.com/sony/sonyflake\" target=\"_blank\">Sonyflake</a></li>\n\n\n\n<li><a href=\"https://github.com/paralleldrive/cuid\" target=\"_blank\">CUID</a></li>\n\n\n\n<li><a href=\"https://github.com/ai/nanoid\" target=\"_blank\">NanoId</a></li>\n</ul>\n\n\n\n<p>จะเห็นได้ว่า มีหลากหลายวิธีมาก ๆ<br />เรื่องจากมาจากความต้องการที่แตกต่างกัน<br />ดังนั้น น่าจะต้องเริ่มก่อนว่า ระบบงานของเราเป็นอย่างไร<br />ต้องการอะไร หรือ ต้องการแก้ไขปัญหาอะไร นั่นเอง</p>\n\n\n\n<p><strong>Reference Websites</strong></p>\n\n\n\n<ul>\n<li><a href=\"https://uuid.ramsey.dev/en/stable/rfc4122.html\" target=\"_blank\">RFC 4122 UUIDs</a></li>\n\n\n\n<li><a href=\"https://blog.devtrovert.com/p/how-to-generate-unique-ids-in-distributed\" target=\"_blank\">How to Generate Unique IDs in Distributed Systems: 6 Key Strategies</a></li>\n\n\n\n<li><a href=\"https://dev.to/frederik_vl/why-you-should-never-use-an-uuid-as-the-primary-key-in-sql-databases-147b\" target=\"_blank\">Why you should never use an UUID as the primary key in SQL Databases</a></li>\n\n\n\n<li><a href=\"https://medium.com/geekculture/the-wild-world-of-unique-identifiers-uuid-ulid-etc-17cfb2a38fce\" target=\"_blank\">The Wild World of Unique Identifiers (UUID, ULID, etc)</a></li>\n\n\n\n<li><a href=\"https://sqids.org/\" target=\"_blank\">What is Sqids</a></li>\n\n\n\n<li><a href=\"https://dev.to/harshhhdev/uuidguid-cuid-nanoid-whats-the-difference-5dj1\" target=\"_blank\">UUID/GUID, CUID &amp; NanoID: What's The Difference?</a></li>\n\n\n\n<li><a href=\"https://www.uuid.lol/\" target=\"_blank\">UUID Generator</a></li>\n\n\n\n<li><a href=\"https://twitter.com/hnasr/status/1657569218609684480\">Shopify increased their write throughput by 50% moving one of their MySQL keys from UUID to ULID. But How?</a></li>\n</ul>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"df956be2f4b59f61049162c694cdb2c944e7663a9b124c68a8d38065bade1c68","category":"Thai"}