{"title":"Terraform provides more flexible controls with project-owned variable sets","link":"https://www.hashicorp.com/blog/terraform-provides-more-flexible-controls-with-project-owned-variable-sets","date":1739898000000,"content":"<p>HCP Terraform and Terraform Enterprise <a href=\"https://developer.hashicorp.com/terraform/tutorials/cloud/cloud-multiple-variable-sets\">variable sets</a> play a critical role in ensuring consistency and simplifying configuration management by allowing users to define variables once and reuse them across multiple workspaces. Until now, however, variable sets could only be managed at the <a href=\"https://developer.hashicorp.com/hcp/docs/hcp/admin/orgs\">organization</a> level or the <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/workspaces\">workspace</a> level.</p>\n\n<p>With the growing adoption of <a href=\"https://developer.hashicorp.com/terraform/tutorials/cloud/projects\">projects</a> as a means to create a middle layer with clearer separation between teams and environments, we recognized the need for a more flexible and secure way to manage variables within these boundaries. We are excited to introduce <strong>project-owned variable sets</strong>, which address these challenges by enabling variable sets to be owned at the project level. Custom permissions can also be set, allowing users to have no permission, read-only permission, or manage permission for project-owned variable sets. </p>\n\n<p>This provides the same functionality as organization-owned variable sets but without requiring high-level organization permissions. With this new feature, teams gain full self-service control over their variable sets, simplifying management, reducing dependencies, and allowing for more flexible control over access and usage.</p>\n\n<p>In this blog post, we’ll explore the challenges this feature solves, the benefits it offers, and how it can help streamline the management of variables within HCP Terraform and Terraform Enterprise.</p>\n\n<h2>What challenges do project-owned variable sets solve?</h2>\n\n<p><a href=\"https://www.hashicorp.com/blog/terraform-cloud-adds-projects-to-organize-workspaces-at-scale\">Projects</a> enable teams to group workspaces, define granular permissions, and manage infrastructure efficiently with minimal admin intervention required. By centralizing control, reducing risk, and offering self-service capabilities, projects streamline workflows while maintaining security and organizational boundaries. However, until now, managing variable sets within the context of a specific project and with project-level permission was not possible. </p>\n\n<p>Previously, in order to grant teams the ability to modify and use variable sets, platform teams had to add users to the <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/users-teams-organizations/permissions#organization-owners\">organization owners</a> team or a team with the “<a href=\"https://developer.hashicorp.com/terraform/cloud-docs/users-teams-organizations/permissions#manage-all-workspaces\">manage all workspaces</a>” permission. This made it impossible for platform teams to give a set of users the ability to create and update variable sets without also giving these users broad organization wide permissions. This lack of granular control over variable set permissions posed a significant security and operational challenge.</p>\n\n<p>Users without owner or “manage all workspaces” permission would still need to be able to reuse variables across workspaces in a project. Some workarounds for this would be to:</p>\n\n<ul>\n<li>Submitting requests to platform teams to create variable sets on their behalf.</li>\n<li>Duplicating variables across multiple workspaces as workspace-specific variables.</li>\n</ul>\n\n<p>These workarounds add unnecessary dependency on the platform team and make workspace variables difficult to manage. Duplicating sensitive variables (e.g., cloud credentials) across multiple workspaces creates significant manual effort when rotating values. Updating a credential requires changes in potentially hundreds of places, increasing operational toil, the risk of inconsistency, and the potential for security vulnerabilities if some workspaces are missed.</p>\n\n<p>Customers needed more granular permissions around variable sets to delegate their creation to project admins without giving them permissions to impact workspaces and variable sets outside of the projects they administer.</p>\n\n<h2>Introducing project-owned variable sets</h2>\n\n<p>Project-owned variable sets allow users to reuse variables for a set of workspaces within a specific project. They can still be more granularly scoped to none, some, or all workspaces within the specified project, but project-owned variable sets cannot be “global” and they cannot be applied to workspaces outside their specified project. Now HCP Terraform and Terraform Enterprise variable sets can have one of three different scopes:</p>\n\n<ul>\n<li><strong>Global</strong>: The set will apply to all current and future workspaces within an organization.</li>\n<li><strong>Project-specific</strong>: The set will apply to all current and future workspaces within the selected projects.</li>\n<li><strong>Workspace-specific</strong>: The set will apply only to the selected workspaces.</li>\n</ul>\n\n<p>This solution addresses both the need for more granular permissions and the requirement for variable reuse across project workspaces, while ensuring that users maintain appropriate levels of access control.</p>\n\n<h2>What benefits do project-owned variable sets have?</h2>\n\n<p>Project-owned variable sets allow more granular permissions for creating and managing access and usage of variable sets. Key benefits include:</p>\n\n<ul>\n<li><strong>Facilitates transition to projects and consolidation</strong>: This feature enables a smoother transition from using multi-org systems to adopting a project-based structure as teams can manage variable sets with project-level permissions.</li>\n<li><strong>Simplified management of variable sets:</strong> Users with write-level project access can create, edit, and delete variable sets that apply to only their projects without organization-level workspace or owner access. This allows for greater flexibility without increasing the risk for unauthorized access to resources outside their scope. It also limits the potential damage caused by a misconfigured variable or cloud credential.</li>\n<li><strong>Granular control of variable sets</strong>: Project admins control who can read, manage, or access specific variable sets within their project. Teams can be granted custom permission to manage variable sets within a project without other project-level permissions, such as the ability to perform a run.</li>\n<li><strong>Increased operational efficiency</strong>: By allowing project teams to manage their own variable sets, platform teams can offload this responsibility, leading to more streamlined operations. Project admins can now focus on managing their own variables without needing to request changes from higher-level teams or risk misconfigurations.</li>\n</ul>\n\n<h2>Looking forward</h2>\n\n<p>This feature empowers project teams with the control they need to manage their infrastructure efficiently while maintaining a high level of security and governance. This will also facilitate a smoother transition from using multi-org systems to adopting projects.</p>\n\n<p>We’re excited to continue enhancing the user experience for all of our customers. To learn more about the new features, visit the Terraform guides and documentation on HashiCorp Developer. If you are new to Terraform, <a href=\"https://app.terraform.io/public/signup/account\">sign up for HCP Terraform</a> and get started for free today, or <a href=\"https://www.hashicorp.com/en/contact-sales\">contact HashiCorp sales</a> to learn more about Terraform Enterprise.</p>\n","author":"Netra Mali","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"c7b7b31b4754474aac6248a1ffb475349b8b140cba87e03f377c72762988b798","category":"Tech"}