{"title":"New – Amazon FSx for OpenZFS","link":"https://aws.amazon.com/blogs/aws/new-amazon-fsx-for-openzfs/","date":1638315759000,"content":"<p>Last month, my colleague <a href=\"https://www.linkedin.com/in/billvass/\">Bill Vass</a> said that we are “slowly adding additional file systems” to <a href=\"https://aws.amazon.com/fsx/\">Amazon FSx</a>. I’d question Bill’s definition of slow, given that his team has launched <a href=\"https://aws.amazon.com/fsx/lustre/\">Amazon FSx for Lustre</a>, <a href=\"https://aws.amazon.com/fsx/windows/\">Amazon FSx for Windows File Server</a>, and <a href=\"https://aws.amazon.com/fsx/netapp-ontap/\">Amazon FSx for NetApp ONTAP</a> in less than three years.</p> \n<p><span><strong>Amazon FSx for OpenZFS</strong></span><br /> Today I am happy to announce <a href=\"https://aws.amazon.com/fsx/openzfs/\">Amazon FSx for OpenZFS</a>, the newest addition to the <a href=\"https://aws.amazon.com/fsx/\">Amazon FSx</a> family. Just like the other members of the family, this new addition lets you use a popular file system without having to deal with hardware provisioning, software configuration, patching, backups, and the like. You can create a file system in minutes and begin to enjoy the benefits of <a href=\"https://openzfs.org/wiki/Main_Page\">OpenZFS</a> right away: transparent compression, continuous integrity verification, snapshots, and copy-on-write. Even better, you get all of these benefits without having to develop the specialized expertise that has traditionally been needed to set up and administer OpenZFS.</p> \n<p>FSx for OpenZFS is powered by the <a href=\"https://aws.amazon.com/ec2/graviton/\">AWS Graviton</a> family processors and AWS SRD (Scalable Reliable Datagram) Networking, and can deliver up to 1 million IOPS with latencies of 100-200 microseconds, along with up to 4 GB/second of uncompressed throughput, up to 12 GB/second of compressed throughput, and up to 12.5 GB/second throughput to cached data. FSx for OpenZFS supports the OpenZFS <a href=\"https://openzfs.github.io/openzfs-docs/Performance%20and%20Tuning/Workload%20Tuning.html#adaptive-replacement-cache\">Adaptive Replacement Cache</a> (ARC) and uses memory in the file server to provide faster performance. It also supports advanced NFS performance features such as <a href=\"https://datatracker.ietf.org/doc/html/rfc5661#section-2.10.5\">session trunking</a> and <a href=\"https://datatracker.ietf.org/doc/html/rfc7530#section-1.4.6\">NFS delegation</a>, allowing you to get very high throughput and IOPS from a single client, while still safely caching frequently accessed data on the client side.</p> \n<p>FSx for OpenZFS volumes can be accessed from cloud or on-premises Linux, MacOS, and Windows clients via industry-standard NFS protocols (v3, v4, v4.1, and v4.2). Cloud clients can be <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a> instances, <a href=\"https://aws.amazon.com/ecs/\">Amazon Elastic Container Service (Amazon ECS)</a> and <a href=\"https://aws.amazon.com/eks/\">Amazon Elastic Kubernetes Service (EKS)</a> clusters, <a href=\"https://aws.amazon.com/workspaces/\">Amazon WorkSpaces</a> virtual desktops, and <a href=\"https://aws.amazon.com/vmware/\">VMware Cloud on AWS</a>. Your data is stored in encrypted form and replicated within an AWS Availability Zone, with components replaced automatically and transparently as necessary.</p> \n<p>You can use FSx for OpenZFS to address your highly demanding machine learning, EDA (Electronic Design Automation), media processing, financial analytics, code repository, DevOps, and web content management workloads. With performance that is close to local storage, FSx for OpenZFS is great for these and other latency-sensitive workloads that manipulate and sequentially access many small files. Finally, because you can create, mount, use, and delete file systems as needed, you can now use OpenZFS in a dynamic, agile fashion.</p> \n<p><span><strong>Using Amazon FSx for OpenZFS</strong></span><br /> I can create an OpenZFS file system using the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>, <a href=\"https://docs.aws.amazon.com/cli/latest/reference/fsx/\">CLI</a>, <a href=\"https://docs.aws.amazon.com/fsx/latest/APIReference/welcome.html\">APIs</a>, or <a href=\"https://aws.amazon.com/cloudformation/\">AWS CloudFormation</a>. From the <a href=\"https://console.aws.amazon.com/fsx/home\">FSx Console</a> I click <strong>Create file system</strong> and choose <strong>Amazon FSx for OpenZFS</strong>:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/fsx_zfs_create_volume_2.png\" /></p> \n<p>I can choose <strong>Quick create</strong> (and use recommended best-practice configurations), or <strong>Standard create</strong> (and set all of the configuration options myself). I’ll take the easy route and use the recommended best practices to get started. I enter a name (<strong>Jeff-OpenZFS</strong>) select the amount of SSD storage that I need, choose a VPC &amp; subnet, and click <strong>Next</strong>:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/21/fsx_zfs_quick_create_1.png\" /></p> \n<p>The console shows me that I can edit many of the attributes of my file system later if necessary. I review the settings and click <strong>Create file system</strong>:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/22/fsx_zfs_review_confirm_2.png\" /></p> \n<p>My file system is ready within a minute or two, and I click Attach to get the proper commands to mount it to my client:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/fsx_zfs_attach_2.png\" /></p> \n<p>To be more precise, I am mounting the root volume (<strong>/fsx</strong>) of my file system. Once it is mounted, I can use it as I would any other file system. After I add some files to it, I can use the <strong>Action</strong> menu in the console to create a backup:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/21/fsx_zfs_create_backup_3.png\" /></p> \n<p>I can restore the backup to a new file system:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/21/fsx_fsx_backups_action_1.png\" /></p> \n<p>As I noted earlier, each file system can deliver up to 4 gigabytes per second of throughput for uncompressed data. I can look at total throughput and other metrics in the console:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/21/fsx_zfs_metrics_1.png\" /></p> \n<p>I can set throughput capacity of each volume when I create it, and then change it later if necessary:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/fsx_zfs_set_tpc_2.png\" /></p> \n<p>Changes take effect within minutes. The file system remains active and mounted while the change is put into effect, but some operations may pause momentarily:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/21/fsx_zfs_updating_1.png\" /></p> \n<p>A single OpenZFS file system can contain multiple volumes, each with separate quotas (overall volume storage, per-user storage, and per-group storage) and compression settings. When I use the quick create option a root volume named <strong>fsx</strong> is created for me; I can click <strong>Create volume</strong> to create more volumes at any time:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/21/fsx_zfs_create_volume_1.png\" /></p> \n<p>The new volume exists within the namespace hierarchy of the parent, and can be mounted separately or accessed from the parent.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/21/fsx_vol_shell_1.png\" /></p> \n<p><span><strong>Things to Know</strong></span><br /> Here are a couple of quick facts and to wrap up this post:</p> \n<p><strong>Pricing</strong> – Pricing is based on the provisioned storage capacity, throughput, and IOPS.</p> \n<p><strong>Regions</strong> – <a href=\"https://aws.amazon.com/fsx/openzfs/\">Amazon FSx for OpenZFS</a> is available in the US East (N. Virginia), US East (Ohio), US West (Oregon), Europe (Ireland), Canada (Central), Asia Pacific (Tokyo), and Europe (Frankfurt) Regions.</p> \n<p><strong>In the Works</strong> – We are working on additional features including storage scaling, IOPS scaling, a high availability option and another storage class.</p> \n<p><span><strong>Now Available</strong></span><br /> <a href=\"https://aws.amazon.com/fsx/openzfs/\">Amazon FSx for OpenZFS</a> is available now and you can start using it today!</p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"04540368622b053d12c78b9e01292969757acbf20e5095b9a491296f9b9c45e7","category":"Tech"}