{"title":"It’s Time To Talk About “CSS5”","link":"https://smashingmagazine.com/2024/08/time-to-talk-about-css5/","date":1722852000000,"content":"<p>We have been talking about <em>CSS3</em> for a long time. Call me a fossil, but I still remember the new <code>border-radius</code> property feeling like the most incredible CSS3 feature. We have moved on since we got <code>border-radius</code> and <a href=\"https://www.smashingmagazine.com/2009/01/push-your-web-design-into-the-future-with-css3/\">a slew of new features dropped in a single CSS3 release back in 2009</a>.</p>\n<p>CSS, too, has moved on as a language, and yet “CSS3” is still in our lexicon as the last “official” semantically-versioned release of the CSS language.</p>\n<p>It’s not as though we haven’t gotten any new and exciting CSS features between 2009 and 2024; it’s more that the process of developing, shipping, and implementing new CSS features is a guessing game of sorts.</p>\n<p>We see CSS Working Group (CSSWG) discussions happening in the open. We have the draft specifications and an archive of versions at our disposal. The resources are there! But the develop-ship-implement flow remains elusive and leaves many of us developers wondering: <em>When is the next CSS release, and what’s in it?</em></p>\n<p>This is a challenging balancing act. We have spec authors, code authors, and user agents working both interdependently and independently and the communication gaps are numerous and wide. The result? New features take longer to be implemented, leading to developers taking longer to adopt them. We might even consider CSS3 to be the last great big “marketing” push for CSS as a language.</p>\n<p>That’s what the <a href=\"https://www.w3.org/community/css4/\">CSS-Next community</a> is grappling with at this very moment. If you haven’t heard of the group, you’re not alone, but either way, it’s high time we shed light on it and the ideas coming from it. As someone <a href=\"https://www.w3.org/community/css4/participants\">participating in the group</a>, I thought I would share the conversations we’re having and how we’re approaching the way CSS releases are communicated.</p>\nMeet The CSS-Next Community\n<p>Before we formally “meet” the CSS-Next group, it’s worth knowing that it is still officially referred to as the <a href=\"https://www.w3.org/community/css4/\">CSS4 Community Group</a> as far as the W3C is concerned.</p>\n<p>And that might be the very first thing you ought to know about CSS-Next: it is part of the W3C and consists of CSSWG members, developers, designers, user agents, and, really, anyone passionate about the web and who wants to participate in the discussion. W3C groups like CSS-Next are <strong>open to everyone</strong> to bring our disparate groups together, opening opportunities to shape tomorrow’s vision of the web.</p>\n<p>CSS-Next, in particular, is where people gather to discuss the possibility of <strong>raising awareness of CSS evolutions</strong> during the last decade. At its core, the group is discussing approaches for bundling CSS features that have shipped since CSS3 was released in 2009 and how to name the bundle (or bundles, perhaps) so we have a way of referring to this particular “era” of CSS and pushing those features forward.</p>\nWhy We Need A Group Like CSS-Next\n<p>Let’s go back a few years. More specifically, let’s return to the year 2020.</p>\n<p>It all started when Safari Evangelist <a href=\"https://jensimmons.com\">Jen Simmons</a> posted an <a href=\"https://github.com/w3c/csswg-drafts/issues/4770\">open issue in the CSSWG’s GitHub repo for CSS draft specifications</a> requesting a definition for a “CSS4” release.</p>\n<p><img src=\"https://files.smashing.media/articles/time-to-talk-about-css5/1-w3c-repo-css4.png\" /></p>\n<p>This might be one of the biggest responses — if not <em>the</em> biggest response — to a CSSWG issue based solely on emoji reactions.</p>\n<p><img src=\"https://files.smashing.media/articles/time-to-talk-about-css5/2-emoji-reactions.png\" /></p>\n<p>The idea of defining CSS4 had some back-ups by Chris Coyier, Nicole Sullivan, and PPK. The idea is to push technologies forward and help educators and site owners, even if it’s just for the sake of marketing.</p>\n<p>But why is this important? Why should we care about another level or “CSS Saga”? To get to that point, we might need to talk about CSS3 and what exactly it defines.</p>\nWhat Exactly Is “CSS3”?\n<p>The CSS3 grouping of features included <strong>level-3 specs</strong> for features from typography to selectors and backgrounds. From this point on, each CSS spec has been numbered individually.</p>\n<p>However, <strong>CSS3 is still the most common term developers use to define the capabilities of modern CSS.</strong> We see this across the web, from the way educational institutions teach CSS to the job requirements on resumes.</p>\n<p>The term CSS3 loses meaning year-over-year. You can see the dilution everywhere. The earliest CSS3 drafts were published in June 1999 — before many of my colleagues were even born — and yet CSS is one of the fastest-growing languages in the current webscape.</p>\nWhat About The CSS3 Logo?\n<p>When we look at job postings, we run into vacancies asking for knowledge of CSS3, which is over 10 years old. Without an updated level, we’re just asking if you’ve written CSS since the <code>border-radius</code> property came out. Furthermore, when we want to learn CSS, a CSS3 logo next to educational materials no longer signals current material. It kind of feels like time has stood still.</p>\n<p>Here’s an example job posting that illustrates the issue:</p>\n<p><img src=\"https://files.smashing.media/articles/time-to-talk-about-css5/3-job-requirements-list-css3.png\" /></p>\n<p>But that’s not all. If you do a Google search on “Learn CSS” and check the images, you might be surprised how many CSS3 logos you can spot:</p>\n<p><img src=\"https://files.smashing.media/articles/time-to-talk-about-css5/4-google-search-learn-css.png\" /></p>\n<p>About 50% of the images show the CSS3 badge. To me, this clearly signals:</p>\n<ol>\n<li>People want badges or logos to aid in signaling skills.</li>\n<li>The CSS3 brand has made a large impact on the web ecosystem.</li>\n<li>The CSS3 logo has reached the end of its efficacy.</li>\n</ol>\n<p><strong>CSS3</strong> <strong>had</strong> <strong>still has a huge impact on the ecosystem.</strong> The same logo is trying to say it teaches Flexbox all the way to <code>color-mix()</code> — a spread of hundreds of CSS features.</p>\nWhat Exactly Does “Modern CSS” Mean?\n<p>CSS3 and HTML5 were big improvements to those respective languages — <strong>we’ve come a long way</strong> since then. We have features that people didn’t even think were possible back in 2012 (when we officially spoke of CSS3 as a level).</p>\n<p>For example, there was a time when people thought that containers didn’t know anything and it never be possible to style an element based on the width of its parent. But now, of course, we have CSS Container Queries, and all of this is possible today. The things that are possible with CSS changed over time, as so <a href=\"https://www.youtube.com/watch?v=-Fw8GSksUIo\">beautifully told by Miriam Suzanne at CSS Day 2023</a>.</p>\n<p>We do not want to ignore the success of CSS3 and say it is wrong; in fact, we believe it’s time to <strong>repeat the tremendous success of CSS3</strong>.</p>\n<p>Imagine yourself 10 years from now reading a “modern” CSS feature that was introduced as many as 10 years ago. It wouldn’t add up, right? <strong>Modern is not a future-proof name</strong>, something that Geoff Graham opined when asking the correct question, “<a href=\"https://geoffgraham.me/what-exactly-is-modern-css/\">What exactly is ‘Modern CSS’?</a>”</p>\n<blockquote>“<a href=\"https://css-tricks.com/naming-things-is-only-getting-harder/\">Naming is always hard</a>, yet it’s just something we have to do in CSS to properly select things. I think it’s time we start naming [CSS releases] like this, too. It’s only a matter of time before “modern” isn’t “modern” anymore.”<br /><br />— Geoff Graham</blockquote>\n\n<p>This is exactly where the CSS-Next community group comes in.</p>\nLet’s Talk About “CSS Eras”\n<p>The CSS-Next community group aims to <strong>align and modernize the general understanding of CSS in the wider developer community</strong> by labeling feature sets that have shipped since the initial set of CSS3 features, helping developers upskill their understanding of CSS across the ecosystem.</p>\n<h3>Why Isn’t This Part Of The Web Platform Baseline?</h3>\n<p>The definition of what is “current” CSS changes with time. Sometimes, specs are incomplete or haven’t even been drafted. While <a href=\"https://web.dev/baseline/\">Baseline</a> looks at the current browser support of a feature in CSS, we want to take a look at the evolution of the language itself. The CSS levels should not care about which browser implemented it first.</p>\n<p>It might be more nuanced than this in reality, but that’s pretty much the gist. We also don’t want it to become another “modern CSS” bucket. Indeed, referring to CSS3 as an “era” has helped compartmentalize how we can shift into CSS4, CSS5, and beyond. For example, labeling something as a “CSS4” feature provides a hint as far as when that feature was born. A feature that reaches “baseline” meanwhile merely indicates the status of that feature’s browser implementation, which is a separate concern.</p>\n<p>Identifying features by era and implementation status are both indicators and provide meta information about a CSS feature but with different purposes.</p>\n<h3>Why Not Work With An Annual Snapshot Instead Of A Numbered Era?</h3>\n<p>It’s fair to wonder if a potential solution is to take a “snapshot” of the CSS feature set each year and use that as a mile marker for CSS feature releases. However, an annual picture of the language is less effective than defining a particular era in which specific features are introduced.</p>\n<p>There were a handful of years when CSS was relatively quiet compared to the mad dash of the last few years. Imagine a year in which nothing, or maybe very few, CSS features are shipped, and the snapshot for that year is nearly identical to the previous year’s snapshot. Now imagine CSS explodes the following year with a deluge of new features that result in a massive delta between snapshots. It takes mental agility to compare complete snapshots of the entire language and find what’s new.</p>\nGoals And Non-Goals\n<p>I think I’ve effectively established that the term “CSS” alone isn’t clear or helpful enough to illustrate the evolution of the CSS, just as calling a certain feature “modern” degrades over time.</p>\n<p>Grouping features in levels that represent different eras of releases — even from a marketing standpoint — offers a good deal of meaning and has a track record of success, as we’ve seen with CSS3.</p>\n<p>All of this comes back to a set of goals that the CSS-Next group is rallying around:</p>\n<ul>\n<li>Help developers <strong>learn</strong> CSS.</li>\n<li>Help educators <strong>teach</strong> CSS.</li>\n<li>Help employers <strong>define</strong> modern web skills.</li>\n<li>Help the community <strong>understand</strong> the progression of CSS capabilities over time.</li>\n<li>Create a <strong>shared vernacular</strong> for describing how CSS evolves.</li>\n</ul>\n<p>What we do <em>not</em> want is to:</p>\n<ul>\n<li><strong>Affect spec definitions</strong>.<br />CSS-Next is not a group that would define the working process of or influence working groups such as the CSSWG.</li>\n<li><strong>Create official developer documentation.</strong><br />Making something like a new version of MDN doesn’t get us closer to a better understanding of how the language changes between eras.</li>\n<li><strong>Define browser specification work.</strong><br />This should be conducted in relevant standardization or pre-standardization forums (such as the CSSWG or <a href=\"https://open-ui.org\">OpenUI</a>).</li>\n<li><strong>Educate developers on CSS best practices.</strong><br />That has much more to do with feature implementations than the features themselves.</li>\n<li><strong>Manage browser compatibility data.</strong><br />Baseline is already doing that, and besides, we’ve already established that feature specifications and implementations are separate concerns.</li>\n</ul>\n<p>This doesn’t mean that everything in the last list is null and void. We could, for example, have CSS eras that list all the features specced in that period. And inside that list, there could be a baseline reference for the implementations of those features, making it easier to bring forward some ideas for the next <a href=\"https://web.dev/blog/interop-2024\">Interop</a>, which informs Baseline.</p>\n<p>This leaves the CSS-Next group with a super-clear focus to:</p>\n<ul>\n<li><strong>Research</strong> the community’s understanding of modern CSS,</li>\n<li><strong>Build</strong> a shared understanding of CSS feature evolution since CSS3,</li>\n<li><strong>Grouping</strong> those features into easily-digestible levels (i.e., CSS4, CSS5, and so on), and</li>\n<li><strong>Educate</strong> the community about modern CSS features.</li>\n</ul>\n<h3>We’d Likely Start With The “CSS5” Era</h3>\n<p>A lot of thought and work has gone into the way CSS is described in eras. The initial idea was to pick up where CSS3 left off and jump straight into CSS4. But the number of features released between the two eras would be massive, even if we narrowed it down to just the features released since 2020, never mind 2009.</p>\n<p>It makes sense, instead, to split the difference and call CSS4 a done deal as of, say, 2018 and a fundamental part of CSS in its current state as we begin with the next logical period: CSS5.</p>\n<p>Here’s how the definitions are currently defined: </p>\n<p><strong>CSS3 (~2009-2012):</strong><br />Level 3 CSS specs as defined by the CSSWG. (immutable)</p>\n<p><strong>CSS4 (~2013-2018):</strong><br />Essential features that were not part of CSS3 but are already a fundamental part of CSS.</p>\n<p><strong>CSS5 (~2019-2024):</strong><br />Newer features whose adoption is steadily growing.</p>\n<p><strong>CSS6 (~2025+):</strong><br />Early-stage features that are planned for future CSS.</p>\nUncle Sam CSS Wants You!\n<p>We released a <a href=\"https://github.com/CSS-Next/css-next/discussions/92\">request for comments</a> last May for community input from developers like you. We’ve received a few comments that have been taken into account, but we need much more feedback to help inform our approach. </p>\n<p>We want a big representative response from the community! But that takes awareness, and we need you to make that happen. Anything you can do to let your teams and colleagues that the CSS-Next group is a thing and that we’re trying to solve the way we talk about CSS features is greatly appreciated. We want to know what you and others think about the things we’re wrestling with, like whether or not the way we’re grouping eras above is a sound approach, where you think those lines should be drawn, and if you agree that we’re aiming for the right goals.</p>\n<p><strong>We also want you to participate.</strong> Anyone is welcome to <a href=\"https://www.w3.org/community/css4/join\">join the CSS-Next group</a> and we could certainly use help brainstorming ideas. There’s even an incubation group that conducts a biweekly hour-long session that takes place on Mondays at 8:00 a.m. Pacific Time (2:00 p.m. GMT).</p>\n<p>On a completely personal note, I’d like to add that I joined the CSS-Next group purely out of interest but became much more actively involved once the mission became very clear to me. As a developer working in an agency, I see how fast CSS changes and have struggled, like many of you, to keep up.</p>\n<p>A seasoned colleague of mine commented the other day that they wouldn’t even know how to approach vanilla CSS on a fresh website project. There is no shame in that! I know many of us feel the same way. So, why not bring it to marketing terms and figure out a better way to frame discussions about CSS features based on eras? You can help get us there!</p>\n<p>And if you think I’m blameless when it comes to talking about CSS in generic “modern” terms, all it takes is a quick look at the headline of <a href=\"https://www.smashingmagazine.com/2024/05/modern-css-layouts-no-framework-needed/\">another Smashing article I authored</a>… <em>this year!</em></p>\n<p><strong>Let’s get going with CSS5 and spread the word! Let me hear your thoughts.</strong></p>\n<h3>Resources</h3>\n<ul>\n<li><a href=\"https://www.w3.org/community/css4/\">CSS-Next Group Homepage</a></li>\n<li><a href=\"https://github.com/w3c/csswg-drafts/issues/4770\">CSSWG Drafts Issue #4770: Let’s Define CSS 4</a></li>\n<li><a href=\"https://github.com/CSS-Next/css-next/discussions/92\">CSS-Next Issue #92: Initial CSS Level Categorization</a></li>\n</ul>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"696ad95a21342f4ca7d2527db3e35ad452644f3b9e0e0e7313c8340b6ba4c183","category":"Tech"}