{"title":"Upgraded Claude 3.5 Sonnet from Anthropic (available now), computer use (public beta), and Claude 3.5 Haiku (coming soon) in Amazon Bedrock","link":"https://aws.amazon.com/blogs/aws/upgraded-claude-3-5-sonnet-from-anthropic-available-now-computer-use-public-beta-and-claude-3-5-haiku-coming-soon-in-amazon-bedrock/","date":1729623345000,"content":"<p><em><strong>November 4, 2024</strong>: Anthropic’s Claude 3.5 Haiku is now available in Amazon Bedrock.</em></p> \n<p>Four months ago, we <a href=\"https://aws.amazon.com/blogs/aws/anthropics-claude-3-5-sonnet-model-now-available-in-amazon-bedrock-the-most-intelligent-claude-model-yet/\">introduced Anthropic’s Claude 3.5 in Amazon Bedrock</a>, raising the industry bar for AI model intelligence while maintaining the speed and cost of <a href=\"https://aws.amazon.com/blogs/aws/anthropics-claude-3-sonnet-foundation-model-is-now-available-in-amazon-bedrock/\">Claude 3 Sonnet</a>.</p> \n<p>Today, I am excited to announce three new capabilities for the <a href=\"https://aws.amazon.com/bedrock/claude/\">Claude 3.5 model family in Amazon Bedrock</a>:</p> \n<p><strong>Upgraded Claude 3.5 Sonnet</strong> – You now have access to an upgraded Claude 3.5 Sonnet model that builds upon its predecessor’s strengths, offering even more intelligence at the same cost. Claude 3.5 Sonnet continues to improve its capability to solve real-world software engineering tasks and follow complex, agentic workflows. The upgraded Claude 3.5 Sonnet helps across the entire software development lifecycle, from initial design to bug fixes, maintenance, and optimizations. With these capabilities, the upgraded Claude 3.5 Sonnet model can help build more advanced chatbots with a warm, human-like tone. Other use cases in which the upgraded model excels include knowledge Q&amp;A platforms, data extraction from visuals like charts and diagrams, and automation of repetitive tasks and operations.</p> \n<p><strong>Computer use</strong> – Claude 3.5 Sonnet now offers computer use capabilities in Amazon Bedrock in public beta, allowing Claude to perceive and interact with computer interfaces. Developers can direct Claude to use computers the way people do: by looking at a screen, moving a cursor, clicking buttons, and typing text. This works by giving the model access to integrated tools that can return computer actions, like keystrokes and mouse clicks, editing text files, and running shell commands. Software developers can integrate computer use in their solutions by building an action-execution layer and grant screen access to Claude 3.5 Sonnet. In this way, software developers can build applications with the ability to perform computer actions, follow multiple steps, and check their results. Computer use opens new possibilities for AI-powered applications. For example, it can help automate software testing and back office tasks and implement more advanced software assistants that can interact with applications. Given this technology is early, developers are encouraged to explore lower-risk tasks and use it in a sandbox environment.</p> \n<p><strong>Claude 3.5 Haiku</strong> – The new Claude 3.5 Haiku is coming soon and combines rapid response times with improved reasoning capabilities, making it ideal for tasks that require both speed and intelligence. Claude 3.5 Haiku improves on its predecessor and matches the performance of Claude 3 Opus (previously Claude’s largest model). Claude 3.5 Haiku can help with use cases such as fast and accurate code suggestions, highly interactive chatbots that need rapid response times for customer service, e-commerce solutions, and educational platforms. For customers dealing with large volumes of unstructured data in finance, healthcare, research, and more, Claude 3.5 Haiku can help efficiently process and categorize information.</p> \n<p>According to Anthropic, the upgraded Claude 3.5 Sonnet delivers across-the-board improvements over its predecessor, with significant gains in coding, an area where it already excelled. The upgraded Claude 3.5 Sonnet shows wide-ranging improvements on industry benchmarks. On coding, it improves performance on SWE-bench Verified from 33% to 49%, scoring higher than all publicly available models. It also improves performance on TAU-bench, an agentic tool use task, from 62.6% to 69.2% in the retail domain, and from 36.0% to 46.0% in the airline domain. The following table includes the model evaluations provided by Anthropic.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/22/upgraded-claude-3-5-sonnet-eval.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/22/upgraded-claude-3-5-sonnet-eval.png\" alt=\"UPgraded Claude 3.5 Sonnet evaluations\" width=\"2801\" height=\"1932\" /></a></p> \n<p><span><strong>Computer use, a new frontier in AI interaction<br /> </strong></span>Instead of restricting the model to use APIs, Claude has been trained on general computer skills, allowing it to use a wide range of standard tools and software programs. In this way, applications can use Claude to perceive and interact with computer interfaces. Software developers can integrate this API to enable Claude to translate prompts (for example, “find me a hotel in Rome”) into specific computer commands (open a browser, navigate this website, and so on).</p> \n<p>More specifically, when invoking the model, software developers now have access to three new integrated tools that provide a virtual set of hands to operate a computer:</p> \n<ul> \n <li><strong>Computer tool</strong> – This tool can receive as input a screenshot and a goal and returns a description of the mouse and keyboard actions that should be performed to achieve that goal. For example, this tool can ask to move the cursor to a specific position, click, type, and take screenshots.</li> \n <li><strong>Text editor tool</strong> – Using this tool, the model can ask to perform operations like viewing file contents, creating new files, replacing text, and undoing edits.</li> \n <li><strong>Bash tool</strong> – This tool returns commands that can be run on a computer system to interact at a lower level as a user typing in a terminal.</li> \n</ul> \n<p>These tools open up a world of possibilities for automating complex tasks, from data analysis and software testing to content creation and system administration. Imagine an application powered by Claude 3.5 Sonnet interacting with the computer just as a human would, navigating through multiple desktop tools including terminals, text editors, internet browsers, and also capable of filling out forms and even debugging code.</p> \n<p>We’re excited to help software developers explore these new capabilities with Amazon Bedrock. We expect this capability to improve rapidly in the coming months, and Claude’s current ability to use computers has limits. Some actions such as scrolling, dragging, or zooming can present challenges for Claude, and we encourage you to start exploring low-risk tasks.</p> \n<p>When looking at <a href=\"https://os-world.github.io/\">OSWorld</a>, a benchmark for multimodal agents in real computer environments, the upgraded Claude 3.5 Sonnet currently gets 14.9%. While human-level skill is far ahead with about 70-75%, this result is much better than the 7.7% obtained by the next-best model in the same category.</p> \n<p><span><strong>Using the upgraded Claude 3.5 Sonnet in the Amazon Bedrock console<br /> </strong></span>To get started with the upgraded Claude 3.5 Sonnet, I navigate to the <a href=\"https://console.aws.amazon.com/bedrock\">Amazon Bedrock console</a> and choose <strong>Model access</strong> in the navigation pane. There, I request access for the new <strong>Claude 3.5 Sonnet V2</strong> model.</p> \n<p>To test the new vision capability, I open another browser tab and download from the <a href=\"https://ourworldindata.org/\">Our World in Data website</a> the <a href=\"https://ourworldindata.org/grapher/wind-generation\">Wind power generation</a> chart in PNG format.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/22/wind-generation.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/22/wind-generation.png\" alt=\"Our Word in Data – Wind power generation chart\" width=\"1280\" height=\"904\" /></a></p> \n<p>Back in the Amazon Bedrock console, I choose <strong>Chat/text</strong> under <strong>Playgrounds</strong> in the navigation pane. For the model, I select <strong>Anthropic</strong> as the model provider and then <strong>Claude 3.5 Sonnet V2</strong>.</p> \n<p>I use the three vertical dots in the input section of the chat to upload the image file from my computer. Then I enter this prompt:</p> \n<p><code>Which are the top countries for wind power generation? Answer only in JSON.</code></p> \n<p>The result follows my instructions and returns the list extracting the information from the image.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/22/wind-generation-top-countries.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/22/wind-generation-top-countries.png\" alt=\"Console screenshot.\" width=\"933\" height=\"304\" /></a></p> \n<p><span><strong>Using the upgraded Claude 3.5 Sonnet with AWS CLI and SDKs<br /> </strong></span>Here’s a sample <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface (AWS CLI)</a> command using the <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/conversation-inference.html\">Amazon Bedrock Converse API</a>. I use the<code> --query</code> parameter of the CLI to filter the result and only show the text content of the output message:</p> \n<div> \n <pre><code>aws bedrock-runtime converse \\\n    --model-id anthropic.claude-3-5-sonnet-20241022-v2:0 \\\n    --messages '[{ \"role\": \"user\", \"content\": [ { \"text\": \"What do you throw out when you want to use it, but take in when you do not want to use it?\" } ] }]' \\\n    --query 'output.message.content[*].text' \\\n    --output text</code></pre> \n</div> \n<p>In output, I get this text in the response.</p> \n<p><code>An anchor! You throw an anchor out when you want to use it to stop a boat, but you take it in (pull it up) when you don't want to use it and want to move the boat.</code></p> \n<p>The <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a> implement a similar interface. For example, you can use the <a href=\"https://aws.amazon.com/sdk-for-python/\">AWS SDK for Python (Boto3)</a> to analyze the same image as in the console example:</p> \n<pre><code>import boto3\n\nMODEL_ID = \"anthropic.claude-3-5-sonnet-20241022-v2:0\"\nIMAGE_NAME = \"wind-generation.png\"\n\nbedrock_runtime = boto3.client(\"bedrock-runtime\")\n\nwith open(IMAGE_NAME, \"rb\") as f:\n    image = f.read()\n\nuser_message = \"Which are the top countries for wind power generation? Answer only in JSON.\"\n\nmessages = [\n    {\n        \"role\": \"user\",\n        \"content\": [\n            {\"image\": {\"format\": \"png\", \"source\": {\"bytes\": image}}},\n            {\"text\": user_message},\n        ],\n    }\n]\n\nresponse = bedrock_runtime.converse(\n    modelId=MODEL_ID,\n    messages=messages,\n)\nresponse_text = response[\"output\"][\"message\"][\"content\"][0][\"text\"]\nprint(response_text)\n</code></pre> \n<p><span><strong>Integrating computer use with your application<br /> </strong></span>Let’s see how computer use works in practice. First, I take a snapshot of the desktop of a Ubuntu system:</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/22/ubuntu-screenshot.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/22/ubuntu-screenshot.png\" alt=\"Ubuntu desktop screenshot\" width=\"1280\" height=\"800\" /></a></p> \n<p>This screenshot is the starting point for the steps that will be implemented by computer use. To see how that works, I run a Python script passing in input to the model the screenshot image and this prompt:</p> \n<p><code>Find me a hotel in Rome.</code></p> \n<p>This script invokes the upgraded Claude 3.5 Sonnet in Amazon Bedrock using the new syntax required for computer use:</p> \n<pre><code>import base64\nimport json\nimport boto3\n\nMODEL_ID = \"anthropic.claude-3-5-sonnet-20241022-v2:0\"\n\nIMAGE_NAME = \"ubuntu-screenshot.png\"\n\nbedrock_runtime = boto3.client(\n    \"bedrock-runtime\",\n    region_name=\"us-east-1\",\n)\n\nwith open(IMAGE_NAME, \"rb\") as f:\n    image = f.read()\n\nimage_base64 = base64.b64encode(image).decode(\"utf-8\")\n\nprompt = \"Find me a hotel in Rome.\"\n\nbody = {\n    \"anthropic_version\": \"bedrock-2023-05-31\",\n    \"max_tokens\": 512,\n    \"temperature\": 0.5,\n    \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\"type\": \"text\", \"text\": prompt},\n                {\n                    \"type\": \"image\",\n                    \"source\": {\n                        \"type\": \"base64\",\n                        \"media_type\": \"image/jpeg\",\n                        \"data\": image_base64,\n                    },\n                },\n            ],\n        }\n    ],\n    \"tools\": [\n        { # new\n            \"type\": \"computer_20241022\", # literal / constant\n            \"name\": \"computer\", # literal / constant\n            \"display_height_px\": 1280, # min=1, no max\n            \"display_width_px\": 800, # min=1, no max\n            \"display_number\": 0 # min=0, max=N, default=None\n        },\n        { # new\n            \"type\": \"bash_20241022\", # literal / constant\n            \"name\": \"bash\", # literal / constant\n        },\n        { # new\n            \"type\": \"text_editor_20241022\", # literal / constant\n            \"name\": \"str_replace_editor\", # literal / constant\n        }\n    ],\n    \"anthropic_beta\": [\"computer-use-2024-10-22\"],\n}\n\n# Convert the native request to JSON.\nrequest = json.dumps(body)\n\ntry:\n    # Invoke the model with the request.\n    response = bedrock_runtime.invoke_model(modelId=MODEL_ID, body=request)\n\nexcept Exception as e:\n    print(f\"ERROR: {e}\")\n    exit(1)\n\n# Decode the response body.\nmodel_response = json.loads(response[\"body\"].read())\nprint(model_response)\n</code></pre> \n<p>The body of the request includes new options:</p> \n<ul> \n <li><code>anthropic_beta</code> with value <code>[\"computer-use-2024-10-22\"]</code> to enable computer use.</li> \n <li>The <code>tools</code> section supports a new <code>type</code> option (set to <code>custom</code> for the tools you configure).</li> \n <li>Note that the computer tool needs to know the resolution of the screen (<code>display_height_px</code> and <code>display_width_px</code>).</li> \n</ul> \n<p>To follow my instructions with computer use, the model provides actions that operate on the desktop described by the input screenshot.</p> \n<p>The response from the model includes a <code>tool_use</code> section from the <code>computer</code> tool that provides the first step. The model has found in the screenshot the Firefox browser icon and the position of the mouse arrow. Because of that, it now asks to move the mouse to specific coordinates to start the browser.</p> \n<pre><code>{\n    \"id\": \"msg_bdrk_01WjPCKnd2LCvVeiV6wJ4mm3\",\n    \"type\": \"message\",\n    \"role\": \"assistant\",\n    \"model\": \"claude-3-5-sonnet-20241022\",\n    \"content\": [\n        {\n            \"type\": \"text\",\n            \"text\": \"I'll help you search for a hotel in Rome. I see Firefox browser on the desktop, so I'll use that to access a travel website.\",\n        },\n        {\n            \"type\": \"tool_use\",\n            \"id\": \"toolu_bdrk_01CgfQ2bmQsPFMaqxXtYuyiJ\",\n            \"name\": \"computer\",\n            \"input\": {\"action\": \"mouse_move\", \"coordinate\": [35, 65]},\n        },\n    ],\n    \"stop_reason\": \"tool_use\",\n    \"stop_sequence\": None,\n    \"usage\": {\"input_tokens\": 3443, \"output_tokens\": 106},\n}</code></pre> \n<p>This is just the first step. As with usual tool use requests, the script should reply with the result of using the tool (moving the mouse in this case). Based on the initial request to book a hotel, there would be a loop of tool use interactions that will ask to click on the icon, type a URL in the browser, and so on until the hotel has been booked.</p> \n<p>A more complete example is available in this <a href=\"https://github.com/anthropics/anthropic-quickstarts/tree/main/computer-use-demo\">repository shared by Anthropic</a>.</p> \n<p><span><strong>Things to know<br /> </strong></span>The upgraded <a href=\"https://aws.amazon.com/bedrock/claude/\">Claude 3.5 Sonnet</a> is available today in <a href=\"https://aws.amazon.com/bedrock/\">Amazon Bedrock</a> in the US West (Oregon) <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regions_az/\">AWS Region</a> and is offered at the same cost as the original Claude 3.5 Sonnet. For up-to-date information on regional availability, refer to the <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/bedrock-regions.html\">Amazon Bedrock documentation</a>. For detailed cost information for each Claude model, visit the <a href=\"https://aws.amazon.com/bedrock/pricing/\">Amazon Bedrock pricing page</a>.</p> \n<p>In addition to the greater intelligence of the upgraded model, software developers can now integrate computer use (available in public beta) in their applications to automate complex desktop workflows, enhance software testing processes, and create more sophisticated AI-powered applications.</p> \n<p>Claude 3.5 Haiku will be released in the coming weeks, initially as a text-only model and later with image input.</p> \n<p>You can see how computer use can help with coding in this video with <a href=\"https://x.com/alexalbert__\">Alex Albert</a>, Head of Developer Relations at Anthropic.</p> \n<p></p> \n<p>This <a href=\"https://youtu.be/ODaHJzOyVCQ?si=lb93qA2GuD4-n9Cc\">other video describes computer use for automating operations</a>.</p> \n<p>To learn more about these new features, visit the <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters-claude.html\">Claude models section of the Amazon Bedrock documentation</a>. Give the upgraded Claude 3.5 Sonnet a try in the <a href=\"https://console.aws.amazon.com/bedrock\">Amazon Bedrock console</a> today, and send feedback to <a href=\"https://repost.aws/tags/TAQeKlaPaNRQ2tWB6P7KrMag/amazon-bedrock\">AWS re:Post for Amazon Bedrock</a>. You can find deep-dive technical content and discover how our Builder communities are using Amazon Bedrock at <a href=\"https://community.aws/\">community.aws</a>. Let us know what you build with these new capabilities!</p> \n<p>– <a href=\"https://twitter.com/danilop\">Danilo</a></p>","author":"Danilo Poccia","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"6d2d4324c988b7f91f459079467df632e23898d7dcfd387267d2c8bf27bedc28","category":"Tech"}