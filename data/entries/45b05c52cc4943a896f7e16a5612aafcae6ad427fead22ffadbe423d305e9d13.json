{"title":"เรื่องที่น่าสนใจกับ Software Architect vs The Ivory Tower","link":"https://www.somkiat.cc/software-architect-vs-the-ivory-tower/","date":1745393296000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2025/04/software-architect-01-150x150.jpg\" alt=\"\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2025/04/software-architect-01-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2025/04/software-architect-01-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2025/04/software-architect-01.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2025/04/software-architect-01-1024x537.jpg\" alt=\"\" width=\"630\" height=\"330\" /></a></figure>\n\n\n\n<p>จากบทความเรื่อง <strong><a href=\"https://www.infoq.com/news/2023/01/ivory-tower-architects/\" target=\"_blank\">Avoid Being an \"Ivory Tower\" Architect: the Relationship between Architects and Their Organisation</a></strong><br />ทำการอธิบายถึงบทบาทของ Software Architect ในองค์กร<br />ที่ควรหลีกเลี่ยงการเป็นนักทฤษฎีที่อยู่บนคอคอยงาช้าง !!<br />ซึ่งเน้นแต่คิด แต่ไม่เน้นลงมือทำ หรือ ปฏิบัติจริง ๆ<br />มิเช่นนั้นจะเป็นเพียงคนที่สั่ง สั่ง สั่ง กำหนดแนวทาง<br />โดยไม่เข้าใจข้อจำกัด ปัญหา หรือความท้าทายในการลงมือทำเลย<br />ซึ่งทำให้เกิดปัญหาขึ้นมามากมาย</p>\n\n\n\n<span></span>\n\n\n\n<p>สิ่งที่สำคัญมาก ๆ ของสายงาน Software Architect จากบทความ<br />เป็นดังนี้</p>\n\n\n\n<p><strong>สร้าง  balance ระหว่างการดูภาพรวม กับ การลงรายละเอียด </strong></p>\n\n\n\n<p>เพื่อทำให้แน่ใจว่าแนวทางที่กำหนด หรือ ทิศทาง หรือ วิธีการ <br />มันนำมาใช้งานหรือลงมือทำจริงได้<br />ดังนั้นจำเป็นต้องรู้ต้องเห็นต้องเข้าใจภาพรวมของระบบ<br />และรายละเอียดต่าง ๆ<br />เทียบได้กับป่าและต้นไม้<br />ต้องรู้ภาพรวมของป่าว่าเป็นอย่างไร<br />และรู้ว่าต้นไม้แต่ละต้นอยู่ตรงไหน เป็นอย่างไร</p>\n\n\n\n<p><strong>การพูดคุยต้องเป็นแบบสองทาง มิใช่ทางเดียว</strong></p>\n\n\n\n<p>จำเป็นต้องรับฟัง feedback จากคนทำงาน<br />ว่ามีปัญหาอะไร อย่างไร<br />เพื่อที่จะใช้ในการปรับปรุง หรือ เปลี่ยนแปลงแนวทางที่กำหนดไว้<br />ให้เหมาะสมกับการทำงานจริง ๆ</p>\n\n\n\n<p>รวมทั้งต้องคอยเป็นทีมสนับสนุนและ service ทีมที่ลงมือทำจริง ๆ<br />ทั้งเรื่องความรู้ <br />ทั้งเรื่องของการแก้ไขปัญหา<br />ทั้งเรื่องของการประสานงาน<br />รวมทั้งกระจายความรู้ต่าง ๆ ไปยังส่วนต่าง ๆ ขององค์กร</p>\n\n\n\n<p>เช่นถ้าระบบเคยมีปัญหาเรื่องหนึ่ง ๆ แล้ว<br />มีการแก้ไขปัญหาแล้ว<br />ดังนั้นควรนำความรู้เหล่านี้ไปสอน หรือ แนะนำไปยังทีมต่าง ๆ ในองค์กร<br />เพื่อไม่ให้เจอปัญหานั้น ๆ อีกต่อไป</p>\n\n\n\n<p><strong>ดังนั้นเรื่องของการสื่อสารของ Software Architect จึงสำคัญมาก ๆ</strong></p>\n\n\n\n<p>ยิ่งสร้างความเชื่อมั่น และ ไว้เนื้อเชื่อใจมากยิ่งขึ้น<br />ยิ่งทำให้ทีมต่าง ๆ อยากทำงานด้วยอย่างมาก<br />เป็นทีมที่ช่วยเหลือ มิใช่คอยมา review คอยมาติ คอยมาด่า อย่างเดียว<br />แต่พอถามหา solution กลับตอบกลับมาว่า <br />คุณไปหามาเองสิ !!</p>\n\n\n\n<p><strong><em>สวัสดี !!</em></strong></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"45b05c52cc4943a896f7e16a5612aafcae6ad427fead22ffadbe423d305e9d13","category":"Thai"}