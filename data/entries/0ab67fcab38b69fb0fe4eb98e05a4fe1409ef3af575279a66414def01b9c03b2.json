{"title":"แนะนำใช้งาน RestClient ใน Spring Boot 3.2","link":"https://www.somkiat.cc/restclient-in-spring-boot-3-2/","date":1709952134000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/spring-boot-restclient-150x150.png\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/03/spring-boot-restclient-150x150.png 150w, https://www.somkiat.cc/wp-content/uploads/2024/03/spring-boot-restclient-75x75.png 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/03/spring-boot-restclient.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/spring-boot-restclient-1024x536.png\" width=\"594\" height=\"310\" /></a></figure>\n\n\n\n<p>ใน Spring Boot 3.2 นั้นมี <strong>RestClient</strong> ออกมาให้ใช้งาน<br />สำหรับเรียนกใช้งาน external service ผ่าน HTTP protocol<br />โดยก่อนหน้านี้น่าจะเคยใช้งาน</p>\n\n\n\n<ul>\n<li>RestTemplate สำหรับ synchronous call</li>\n\n\n\n<li>WebClient สำหรับ Spring WebFlux หรือการทำงานแบบ asynchronous และ non-blocking I/O</li>\n</ul>\n\n\n\n<p>ดังนั้นมาดูการใช้งาน RestClient กันว่าเป็นอย่างไร ?</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>RestClient</strong> นั้นจะถูกสร้างมาโดยทำงานอยู่บน WebClient<br />ซึ่งสามารถใช้ทดแทนทั้ง RestTemplate และ WebClient  ได้เลย ไม่ต้องแยกกันอีกต่อไป<br />รวมทั้งยังช่วยลด code ที่ไม่จำเป็นต่อการใช้งานใน RestTemplate ออกไป</p>\n\n\n\n<p><strong>ตัวอย่าง code</strong></p>\n\n\n\n[gist id=\"6dd5b52608aec8d4eb2798a7e44a0ec0\" file=\"1.java\"]\n\n\n\n<p>ส่วนการสร้าง RestClient นั้นทำได้ดังนี้</p>\n\n\n\n[gist id=\"6dd5b52608aec8d4eb2798a7e44a0ec0\" file=\"2.java\"]\n\n\n\n<p>ลองใช้งานกันดูครับ<br />สำหรับ Spring Boot 3.2<br />ขอให้สนุกกับการ coding</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"0ab67fcab38b69fb0fe4eb98e05a4fe1409ef3af575279a66414def01b9c03b2","category":"Thai"}