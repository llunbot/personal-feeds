{"title":"บันทึกเรื่องของ Resiliency Pattern ในการออกแบบระบบงาน","link":"https://www.somkiat.cc/note-resiliency-pattern/","date":1735292710000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/12/design-patterns-01-150x150.jpg\" alt=\"\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/12/design-patterns-01-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2024/12/design-patterns-01-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/12/design-patterns-01.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/12/design-patterns-01-1024x577.jpg\" alt=\"\" width=\"706\" height=\"398\" /></a></figure>\n\n\n\n<p>ระบบงานต่าง ๆ นั้นจำเป็นต้องทำงานร่วมกับระบบงานอื่น ๆ ผ่านระบบ network<br />ซึ่งแน่นอนว่า พร้อมพัง เสมอ<br />ดังนั้นในการออกแบบ พัฒนา และ ทดสอบ<br />จำเป็นต้องสนใจ และ ใส่ใจมาก ๆ ถ้ามีปัญหาขึ้นมา<br />จะจัดการกันอย่างไร เพื่อให้ระบบมีความเสถียร ไม่พังง่าย ๆ<br />หรือไม่เกิดไฟลามทุ่ง คือ ปัญหาเกิดที่หนึ่ง แล้วส่งผลกระทบไปทั่วระบบ !!<br />ดังนั้นเรื่องของ Resiliency Pattern จึงสำคัญมาก<br />อาจจะเรียกว่า Design for failure ก็ได้</p>\n\n\n\n<span></span>\n\n\n\n<p>มาดูกันว่ามีรูปแบบอะไรบ้าง ?<br />เพื่อช่วยให้ระบบมีความเสถียรมากขึ้น<br />สามารถรอบรับการขยายตัวได้ง่ายขึ้น<br />และสามารถทำงานได้ตลอดเวลามากขึ้น</p>\n\n\n\n<p><strong>กลุ่มที่ 1 จัดการที่ฝั่งของผู้เรียกใช้งาน หรือ consumer </strong></p>\n\n\n\n<p>เมื่อระบบงานที่เราเรียกใช้มีปัญหา เช่น พัง หรือ ช้า<br />จะไม่ส่งผลต่อผู้เรียกมากนัก หรือ ไม่พังไปด้วยกัน<br />ยกตัวอย่างรูปแบบที่ใช้จัดการ</p>\n\n\n\n<ul>\n<li><strong>Timeout</strong> (มักจะมาพร้อมกันการ retry) เพื่อลดการจองหรือใช้งาน resource ต่าง ๆ นานจนเกินไป </li>\n\n\n\n<li><strong>Circuit breaker</strong> หรือตัดก่อนตาย เตือนก่อนวายวอด เป็นการ monitor ตาม rate ของ failure ที่เกิดขึ้น ถ้าถึงจุดที่กำหนดไว้ จะทำการ disable การเรียกแบบชั่วคราว รอจนกว่าปลายทางจะกลับมาทำงานเป็นปกติ จึงจะเรียกไปแบบอัตโนมัติ เพื่อลดการเรียกไปยังปลายทางที่ไม่เสถียร ต้องทำการร่วมกับระบบ monitoring ของระบบ รวมทั้งระบบ alert จะช่วยทำให้เรารู้ทันทีว่าตรงจุดใดในระบบมีปัญหา เพื่อเข้าไปแก้ไขได้ง่ายขึ้น</li>\n\n\n\n<li><strong>Client-load balancing</strong> ทางฝั่ง consumer ทำการเลือกได้ว่า จะส่ง request ไปยัง provider instance ไหนเองได้</li>\n</ul>\n\n\n\n<p><strong>กลุ่มที่ 2 จัดการที่ฝั่งของผู้ถูกเรียก หรือ provider</strong></p>\n\n\n\n<p>เมื่อมี request เข้ามายังฝั่งของ provider มาก ๆ หรือ มากจนเกินไป<br />ส่งผลต่อ reponse time ของการเรียกใช้งาน<br />รวมทั้งอาจจะทำให้ระบบงานพังได้ง่าย ๆ<br />แล้วกระทบคนอื่น ๆ อีก ดังนั้นจึงมีรูปแบบการจัดการ </p>\n\n\n\n<ul>\n<li><strong>Rate limit</strong> ทำการกำหนด limit การใช้งานตามเงื่อนไขที่กำหนด เช่น ตามระบบ ตาม ip ตาม user เป็นต้น เราจะเจอกันทุกเดือน !!</li>\n\n\n\n<li><strong>Bulkhead</strong> เป็นแนวทางในการแยกส่วนต่าง ๆ ของระบบออกจากกัน เพื่อป้องกันปัญหา casecade failure หรือ ไฟลามทุ่ง นั่นให้ให้พังเป็นส่วน ๆ ไป ส่วนอื่น ๆ ก็ยังคงทำงานได้อยู่ นั่นคือการลดเรื่อง single point of failure</li>\n\n\n\n<li><strong>Load balance ทำงานร่วมกับ health check</strong> ของระบบงาน ซึ่งใช้ความสามารถของ load balance เพื่อกระจาย request ไปยัง provider instance ต่าง ๆ แต่ก็ทำการ monitor ด้วยว่า provider instance นั้น ๆ ยังคงมีสุขภาพดีไหมผ่าน health check ถ้าไม่ดี ก็จะไม่ส่ง request ไปนั่นเอง</li>\n\n\n\n<li><strong>Load Shedding</strong> หรือ sharding request ทำการจัดการ request เข้ามาช่วง peak load ระบบ provider จะรับมืออย่างไรบ้าง เพื่อให้ request ของแต่ละ user ทำงานตามลำดับความสำคัญได้ เช่น การใช้ priority queue มาช่วยจัดการ กระจาย request ไปตามกลุ่มของงาน หรือการใช้งาน token bucket มาช่วยจัดการเป็นต้น</li>\n</ul>\n\n\n\n<p><strong>Reference websites</strong></p>\n\n\n\n<ul>\n<li><a href=\"https://www.codecentric.de/wissens-hub/blog/resilience-design-patterns-retry-fallback-timeout-circuit-breaker\" target=\"_blank\">Resilience design patterns: retry, fallback, timeout, circuit breaker</a></li>\n\n\n\n<li><a href=\"https://learn.microsoft.com/en-us/azure/well-architected/reliability/design-patterns\" target=\"_blank\">Cloud design patterns that support reliability</a></li>\n</ul>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"7a172621ebf2fb2dc02f64143b0e27857e408a136339a615a3d7836298d3af22","category":"Thai"}