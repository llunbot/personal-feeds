{"title":"ลองใช้งาน Native AOT (Ahead of Time) ของ .NET","link":"https://www.somkiat.cc/dotnet-with-native-aot/","date":1677332332000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2023/02/aot-150x150.jpg\" alt srcset=\"https://www.somkiat.cc/wp-content/uploads/2023/02/aot-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2023/02/aot-75x75.jpg 75w\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/02/aot-1024x630.jpg\" alt width=\"504\" height=\"309\" /></figure>\n\n\n\n<p>ความสามารถนี้ถูกปล่อยออกมาตั้งแต่ <a href=\"https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/\" target=\"_blank\">.NET 7</a><br />ทำให้สามารถ deploy ระบบที่พัฒนาโดยไม่ต้องมี .NET Runtime ใด ๆ<br />โดยทำการ compile ไปเป็น native codeให้เลย<br />หรือเรียกว่า <a href=\"https://learn.microsoft.com/en-us/dotnet/core/deploying/#publish-self-contained\" target=\"_blank\">Self-contained app</a><br />ผลที่ตามมาคือ</p>\n\n\n\n<ul><li>Startup time เร็วขึ้น</li><li>ใช้ memory น้อยลง</li></ul>\n\n\n\n<p>ดังนั้นเหมาะมากต่อระบบที่ต้องการรับ load เยอะ ๆ <br />เพื่อให้ scale ได้ง่าย ด้วย resource ที่ใช้น้อยลงอีก<br />รวมทั้ง environment ที่มี resource จำกัดหรือน้อย เช่นพวก Serverless เป็นต้น<br />แต่ก็ยังมีข้อจำกัดในเรื่องของ library/dependency ที่ใช้งานได้อยู่</p>\n\n\n\n<span></span>\n\n\n\n<p>ใน <strong><a href=\"https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-8-preview-1/\" target=\"_blank\">.NET 8 preview 1</a></strong> ที่เพิ่มปล่อยออกมาให้ทดลองใช้งานนั้น<br />ก็ได้ทำการปรับปรุงการ build <br />ทำให้ขนาดของไฟล์ที่ได้นั้น มีขนาดเล็กลงไปอีก</p>\n\n\n\n<p><strong><a href=\"/Users/somkiat/data/slide/dotnet/learn/demo/bin/Release\" target=\"_blank\">ข้อจำกัดของ native AOT </a>มีคร่าว ๆ ดังนี้</strong></p>\n\n\n\n<ul><li>ตอนนี้ใช้ได้กับ console app เท่านั้น ดังนั้นพวก web, api ยังไม่ได้นะ รอไปก่อน</li><li>ไม่ support เรื่องต่าง ๆ เช่น dynamic loading, c++, runtime code generation</li></ul>\n\n\n\n<p>ดังนั้นมาลองใช้กันหน่อย</p>\n\n\n\n<p><strong>ขั้นตอนที่ 1</strong> ทำการสร้าง console project ขึ้นมา</p>\n\n\n\n<p><strong>ขั้นตอนที่ 2</strong> ทำการเพิ่ม config ใน profile file เพื่อทำการ publish แบบ AOT</p>\n\n\n\n[gist id=\"30d9e48ea48b11257da405f5b2552f77\" file=\"2.txt\"]\n\n\n\n<p><strong>ขั้นตอนที่ 3</strong> ทำการ build และ publish ได้เลย ขนาดของไฟล์ที่ได้จากตัวอย่างนี้ คือ 8.3 MB</p>\n\n\n\n[gist id=\"30d9e48ea48b11257da405f5b2552f77\" file=\"1.txt\"]\n\n\n\n<p>เพียงเท่านี้ก็ทำการ publish .NET project แบบ AOT ได้แล้ว</p>\n\n\n\n<p><strong>Reference Websites</strong></p>\n\n\n\n<ul><li><a href=\"https://www.panos.tech/r2r/\" target=\"_blank\">AoT in serverless .NET</a></li></ul>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"ec26d52471cd4f115e4b409eb3d80dce5b9495fa70067f809035b1baf35151dd","category":"Thai"}