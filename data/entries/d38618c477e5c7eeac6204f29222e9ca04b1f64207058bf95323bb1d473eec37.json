{"title":"HCP Waypoint to add actions, enhances golden pattern capabilities, and more","link":"https://www.hashicorp.com/blog/hcp-waypoint-adds-actions-enhancements-to-golden-pattern-capabilities-and-more","date":1717488000000,"content":"<p>Today at <a href=\"https://www.hashicorp.com/conferences/hashidays/london\">HashiDays in London</a>, we are pleased to announce that the public beta of HCP Waypoint <em>actions</em> will be available soon. Actions enable platform teams to seamlessly expose Day 2+ operations and workflows to developers. HCP Waypoint is designed to empower platform teams to define golden patterns and workflows for developers to enable management of applications at scale. The addition of actions helps organizations define and execute golden workflows such as building an application, performing a rollback, or executing operations in private environments.</p>\n\n<p>Alongside the new actions capability, we are announcing a suite of enhancements to HCP Waypoint templates and add-ons — two features that were first introduced in beta <a href=\"https://www.hashicorp.com/blog/a-new-vision-for-hcp-waypoint\">at HashiConf 2023</a>. These enhancements give platform teams more ways to customize templates and add-ons while also introducing new ways to enable a seamless end-to-end self-serve experience for developers. The enhancements include:</p>\n\n<ul>\n<li><strong>Variable inputs and outputs:</strong> Variable inputs let platform teams select or specify input variable values when creating golden patterns using templates and add-ons. Platform teams may also choose which input values should be provided by developers. Variable output lets developers see outputs from the applications they create or the add-ons they install in HCP Waypoint.</li>\n<li><strong>HCP Terraform project selection:</strong> This feature allows platform teams to pre-define the HCP Terraform project where the associated Terraform workspace will be created for both application creation and add-on installations.</li>\n<li><strong>HCP CLI support</strong>: Users can access the HCP command-line interface (CLI) to interact with HCP Waypoint to manage templates, and add-ons features.</li>\n<li><strong>Terraform provider support</strong>: Platform teams can configure HCP Waypoint features through the familiar Terraform interface.</li>\n</ul>\n\n<h2>Application lifecycle management challenges</h2>\n\n<p>Application lifecycle management involves all stages of application development, from creation until end-of-life. As services proliferate in large enterprises, managing them becomes more complex. The stages of an application’s lifecycle may involve supporting operations such as building, testing, releasing, and rollbacks. Each of these operations may use a different set of tools, which can create an inconsistent experience for developers. </p>\n\n<p>Manually managing the application lifecycle can be tedious and error prone. Development teams need in-depth knowledge of every tool, creating multiple learning curves that begin again every time technologies evolve and teams need to change tools.</p>\n\n<p>To help organizations meet these challenges, we are pleased to share that the public beta of HCP Waypoint <em>actions</em> will be available soon. </p>\n\n<h2>Actions for HCP Waypoint</h2>\n\n<p>HCP Waypoint actions will provide a push-button experience to enable Day 2 operations like build promotions, rollbacks, or modifying feature flags. Actions let platform teams seamlessly share golden workflows with developers. Developers can then use those actions to execute their workflows with the push of a button.</p>\n\n<p>Platform engineers can create actions that integrate with third-party APIs to trigger Day 2 workflows using the custom action type in HCP Waypoint. Once created, actions can be assigned to existing golden patterns using templates.</p>\n<img src=\"https://www.datocms-assets.com/2885/1717428938-create-an-action-custom.png\" alt=\"Creating\" /><p>When developers use templates to create applications, actions are automatically attached to the applications. Developers can use these actions to perform Day 2 operations such as triggering a build, deploying an application, or changing a feature flag.</p>\n<img src=\"https://www.datocms-assets.com/2885/1717428965-view-application.png\" alt=\"Accessing\" /><h2>Supporting operations in private environments with HCP Waypoint agents</h2>\n\n<p>Organizations often have infrastructure and application workloads spanning public clouds and private on-premises datacenters. HCP Waypoint agents provide a secure way to integrate private environment operations with HCP Waypoint actions. This means that even in more custom, self-managed infrastructure environments, HCP Waypoint actions can still perform Day 2 operations with a push-button experience. </p>\n\n<p>HCP Waypoint agents let customers execute their application lifecycle operations inside private on-premises environments while continuing to benefit from the HCP Waypoint management platform — without having to change their network access policies to ingest traffic.</p>\n<img src=\"https://www.datocms-assets.com/2885/1717433917-hcp-waypoint-agent-edited.png\" alt=\"HCP\" /><p>Platform engineers can create “agent” type actions and let developers execute them using the HCP Waypoint UI. Agents use an HCL configuration file that contains action definitions and instructions for what the agent should do when users run an action. For example, users can use the agent to trigger custom scripts written in Bash or other programs. Here is a sample HCP Waypoint agent configuration file:</p>\n<pre><code>group \"internal-infra-us-west-2\" {\n  action \"update-deployment\" {\n    run {\n      command = [\"./update-deployment.sh\", var.waypoint_application]\n    }\n  }\n\n  action \"example-action\" {\n    run {\n      command = [\"echo\", \"hello world\"]\n    }\n  }\n}</code></pre><h2>Input and output variables</h2>\n\n<p>HCP Waypoint helps platform teams define golden patterns for their application developers using templates and add-ons that build on <a href=\"https://developer.hashicorp.com/terraform/tutorials/cloud/no-code-provisioning\">no-code ready modules</a> present in HCP Terraform. Platform engineers often want to define a set of variables and associated values for creating templates or add-ons, and pass these values to the underlying no-code ready module during workspace provisioning. Additionally, platform teams want developers to provide variable values during application creation. Previously, templates and add-ons in HCP Waypoint didn’t allow users to specify variable values.</p>\n\n<p>Input variables let platform teams select or specify appropriate input variable values when creating templates and add-ons. These variable values can be passed to the no-code ready module when provisioning an HCP Terraform workspace. Platform teams may also choose variables whose values can be supplied by developers during application creation, which enhances composability and customization for developers.</p>\n<img src=\"https://www.datocms-assets.com/2885/1717428945-create-application-with-variables.png\" alt=\"Creating\" /><p>When creating applications using templates or installing add-ons, developers often need to see the resulting output values. These output values may include the application URL, code repository address, database address, and so on. Output variables let developers see these outputs in HCP Waypoint when they create applications or install an add-on.</p>\n<img src=\"https://www.datocms-assets.com/2885/1717428916-add-on-outputs.png\" alt=\"Viewing\" /><h2>HCP Terraform project selection</h2>\n\n<p>Platform teams often need to target a specific <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/projects\">HCP Terraform project</a> for workspaces created when developers build applications or install add-ons using HCP Waypoint. Users can now configure HCP Waypoint templates and add-ons to select an HCP Terraform project during the creation process.</p>\n<img src=\"https://www.datocms-assets.com/2885/1717434008-hcp-terraform-project-select-edited.png\" alt=\"Selecting\" /><h2>HCP CLI support</h2>\n\n<p>Previously, users could use only the HCP Waypoint UI to create, view, or manage their Waypoint resources. Now, the <a href=\"https://developer.hashicorp.com/hcp/docs/cli/commands/waypoint\">HCP CLI</a> supports HCP Waypoint, enabling interaction with templates, and add-ons features. Here is an example usage of the Waypoint subcommand in the HCP CLI:</p>\n<pre><code>hcp waypoint\nUSAGE\n  hcp waypoint  [Optional Flags]\n\nDESCRIPTION\n  The hcp waypoint command group lets you manage HCP Waypoint resources through\n  the CLI. These commands let you to interact with their HCP Waypoint instance to\n  manage their application deployment process.\n\nCOMMAND GROUPS\n  add-ons:       Manage HCP Waypoint add-ons and add-on definitions.\n  applications:  Manage HCP Waypoint applications.\n  templates:     Manage HCP Waypoint templates.\n  tfc-config:    Manage Terraform Cloud Configurations.</code></pre><h2>Terraform provider support</h2>\n\n<p>HCP Waypoint now supports managing resources such as templates, add-ons, or applications using the  <a href=\"https://registry.terraform.io/providers/hashicorp/hcp/latest/docs\">HCP Terraform provider</a> and provisioning them using HashiCorp Terraform. This lets platform teams configure HCP Waypoint features through the familiar Terraform interface, making it easier to manage their resources. Here is an example configuration that creates an HCP Waypoint template using the HCP Terraform provider and uses the template to create a HCP Waypoint application:</p>\n<pre><code>data \"tfe_project\" \"waypoint\" {\n  name         = \"Default Project\"\n  organization = \"waypoint-tfc-testing\"\n}\n\nresource \"hcp_waypoint_application_template\" \"static\" {\n  name                     = \"static-app\"\n  readme_markdown_template = base64encode(\"# Hello world!\")\n  terraform_no_code_module = {\n    source  = \"private/example/static-app/hello\"\n    version = \"0.0.1\"\n  }\n  terraform_cloud_workspace_details = {\n    name                 = data.tfe_project.waypoint.name\n    terraform_project_id = data.tfe_project.waypoint.id\n  }\n  labels = [\"static\"]\n}\n\nresource \"hcp_waypoint_application\" \"example\" {\n  name                    = \"example-application\"\n  application_template_id = hcp_waypoint_application_template.static.id\n}</code></pre><h2>Get started with HCP Waypoint</h2>\n\n<p>We are excited for users to try templates, add-ons, and actions in HCP Waypoint, available soon in public beta. If you don’t already have one, we recommend getting started by creating a HashiCorp Cloud Platform (HCP) account and giving HCP Waypoint a try. </p>\n\n<p>For more information, please visit the <a href=\"https://www.hashicorp.com/products/waypoint\">HCP product page</a> or <a href=\"https://portal.cloud.hashicorp.com/sign-up\">sign up through the HCP portal</a>. To learn more about HCP Waypoint templates, add-ons, and actions, please refer to the documentation and watch the demo video below:</p>\n\n<ul>\n<li><a href=\"https://developer.hashicorp.com/waypoint/tutorials/hcp-waypoint/get-started-hcp\">Getting started with HCP Waypoint tutorial</a></li>\n<li><a href=\"https://developer.hashicorp.com/waypoint/docs\">HCP Waypoint documentation</a></li>\n</ul>\n<p>For more context, check out HashiCorp Co-Founder and CTO Armon Dadgar’s whiteboard explainer video on internal developer platforms:</p>\n","author":"Anubhav Mishra","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"d38618c477e5c7eeac6204f29222e9ca04b1f64207058bf95323bb1d473eec37","category":"Tech"}