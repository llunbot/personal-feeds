{"title":"Build generative AI apps using AWS Step Functions and Amazon Bedrock","link":"https://aws.amazon.com/blogs/aws/build-generative-ai-apps-using-aws-step-functions-and-amazon-bedrock/","date":1701027625000,"content":"<p>Today we are announcing two new optimized integrations for <a href=\"https://aws.amazon.com/step-functions/\" target=\"_blank\">AWS Step Functions</a> with <a href=\"https://aws.amazon.com/bedrock/\">Amazon Bedrock</a>. Step Functions is a visual workflow service that helps developers build distributed applications, automate processes, orchestrate microservices, and create data and machine learning (ML) pipelines.</p> \n<p>In <a href=\"https://aws.amazon.com/blogs/aws/amazon-bedrock-is-now-generally-available-build-and-scale-generative-ai-applications-with-foundation-models/\" target=\"_blank\">September, we made available</a> Amazon Bedrock, the easiest way to build and scale generative artificial intelligence (AI) applications with foundation models (FMs). Bedrock offers a choice of foundation models from leading providers like AI21 Labs, Anthropic, Cohere, Stability AI, and Amazon, along with a broad set of capabilities that customers need to build generative AI applications, while maintaining privacy and security. You can use Amazon Bedrock from the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>, <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface (AWS CLI)</a>, or <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a>.</p> \n<p>The new Step Functions optimized integrations with Amazon Bedrock allow you to orchestrate tasks to build generative AI applications using Amazon Bedrock, as well as to integrate with over <a href=\"https://aws.amazon.com/blogs/aws/now-aws-step-functions-supports-200-aws-services-to-enable-easier-workflow-automation/\">220 AWS services</a>. With Step Functions, you can visually develop, inspect, and audit your workflows. Previously, you needed to invoke an <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> function to use Amazon Bedrock from your workflows, adding more code to maintain them and increasing the costs of your applications.</p> \n<p>Step Functions provides two new optimized API actions for Amazon Bedrock:</p> \n<ul> \n <li><code><strong>InvokeModel</strong></code> – This integration allows you to invoke a model and run the inferences with the input provided in the parameters. Use this API action to run inferences for text, image, and embedding models.</li> \n <li><code><strong>CreateModelCustomizationJob</strong></code> – This integration creates a fine-tuning job to customize a base model. In the parameters, you specify the foundation model and the location of the training data. When the job is completed, your custom model is ready to be used. This is an asynchronous API, and this integration allows Step Functions to <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-sync\">run a job</a> and wait for it to complete before proceeding to the next state. This means that the state machine execution will pause while the create model customization job is running and will resume automatically when the task is complete.</li> \n</ul> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/03/image01-1.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/03/image01-1.png\" alt=\"Optimized connectors\" width=\"712\" height=\"308\" /></a></p> \n<p>The <code>InvokeModel</code> API action accepts requests and responses that are up to 25 MB. However, Step Functions has a 256 kB limit on state payload input and output. In order to support larger payloads with this integration, you can define an <a href=\"https://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a> bucket where the <code>InvokeModel</code> API reads data from and writes the result to. These configurations can be provided in the parameters section of the API action configuration parameters section.</p> \n<p><span><strong>How to get started with Amazon Bedrock and AWS Step Functions<br /> </strong></span>Before getting started, ensure that you create the state machine in a Region where Amazon Bedrock is available. For this example, use US East (N. Virginia), <code>us-east-1</code>.</p> \n<p>From the AWS Management Console, create a new state machine. Search for “bedrock,” and the two available API actions will appear. Drag the <strong>InvokeModel</strong> to the state machine.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/03/image02.gif\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/03/image02.gif\" alt=\"Using the invoke model connector\" width=\"816\" height=\"558\" /></a></p> \n<p>You can now configure that state in the menu on the right. First, you can define which foundation model you want to use. Pick a model from the list, or get the model dynamically from the input.</p> \n<p>Then you need to configure the model parameters. You can enter the inference parameters in the text box or load the parameters from Amazon S3.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/06/image03-2.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/06/image03-2.png\" alt=\"Configuration for the API Action\" width=\"1778\" height=\"1408\" /></a></p> \n<p>If you keep scrolling in the API action configuration, you can specify additional configuration options for the API, such as the S3 destination bucket. When this field is specified, the API action stores the API response in the specified bucket instead of returning it to the state output. Here, you can also specify the content type for the requests and responses.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/03/image04.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/03/image04.png\" alt=\"Additional configuration for the connector\" width=\"962\" height=\"620\" /></a></p> \n<p>When you finish configuring your state machine, you can create and run it. When the state machine runs, you can visualize the execution details, select the Amazon Bedrock state, and check its inputs and outputs.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/03/image05.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/03/image05.png\" alt=\"Executing the state machine\" width=\"2030\" height=\"858\" /></a></p> \n<p>Using Step Functions, you can build state machines as extensively as you need, combining different services to solve many problems. For example, you can use Step Functions with Amazon Bedrock to create applications using prompt chaining. This is a technique for building complex generative AI applications by passing multiple smaller and simpler prompts to the FM instead of a very long and detailed prompt. To build a prompt chain, you can create a state machine that calls Amazon Bedrock multiple times to get an inference for each of the smaller prompts. You can use the <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-parallel-state.html\" target=\"_blank\">parallel state</a> to run all these tasks in parallel and then use an <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> function that unifies the responses of the parallel tasks into one response and generates a result.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/06/image06-1.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/06/image06-1.png\" width=\"1742\" height=\"938\" /></a></p> \n<p><span><strong>Available now<br /> </strong></span>AWS Step Functions optimized integrations for Amazon Bedrock are limited to the AWS Regions where Amazon Bedrock is available.</p> \n<p>You can get started with Step Functions and Amazon Bedrock by trying out a sample project from the <a href=\"https://console.aws.amazon.com/states/home\">Step Functions console</a>.</p> \n<p>– <a href=\"https://twitter.com/mavi888uy\" target=\"_blank\">Marcia</a></p>","author":"Marcia Villalba","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"79c092ba086ff7392cf94de4067a78dd5f5ce980f1f7415fa6dc643395362416","category":"Tech"}