{"title":"ทีมงานภาษา Go ยอมแพ้ เลิกหาทางแก้ Syntax ส่วนการตรวจความผิดพลาดหลังเรียก API ระบุไม่มีทางไหนได้รับการยอมรับ","link":"https://www.blognone.com/node/146788","date":1749051873000,"content":"<span>ทีมงานภาษา Go ยอมแพ้ เลิกหาทางแก้ Syntax ส่วนการตรวจความผิดพลาดหลังเรียก API ระบุไม่มีทางไหนได้รับการยอมรับ</span>\n\n  <div>\n    <div>Body</div>\n              <div><p>Robert Griesemer วิศวกรกูเกิลในทีมงานภาษา Go เขียนบล็อกสรุปถึงความพยายามที่จะสร้าง syntax ใหม่เพื่อจัดการความผิดพลาดหลังเรียก API ภายนอก เนื่องจากภาษา Go นั้นไม่รองรับ exception และความผิดพลาดต่างๆ จากการเรียกฟังก์ชั่นจะถูกรายงานออกมาออกในรูปแบบของการคืนค่าซึ่งโปรแกรมเมอร์ Go ก็มักใช้ตัวแปรชื่อ <code>err</code> มารับค่านี้ไว้ และตรวจสอบว่าเกิดความผิดพลาดหรือไม่</p>\n<p>แต่รูปแบบการตรวจสอบความผิดพลาดนี้ทำให้โค้ดไม่สวยในหลายกรณี โดยเฉพาะเมื่อมีการเรียกฟังก์ชั่นจำนวนมากๆ ก็จะเกิด <code>if</code> ที่ใช้ตรวจความผิดพลาดเต็มไปหมด</p>\n<p>Griesemer ระบุว่าทีมงานรับฟังความเห็นนี้ และหลายปีที่ผ่านมาก็พยายามหาทางแก้ปัญหาเริ่มตั้งแต่ปี 2018 เป็นต้นมา และข้อเสนอหลายอันก็สร้างข้อถกเถียงอย่างกว้างขวาง เช่น <a href=\"https://github.com/golang/go/issues/32437\">ข้อเสนอ <code>try</code> เมื่อปี 2019 มีคอมเมนต์เถียงกันกว่า 900 คอมเมนต์</a> หรือ<a href=\"https://github.com/golang/go/issues/71203\">ข้อเสนอ <code>?</code> เมื่อปี 2024</a> ที่ยืม syntax มาจากภาษา Rust</p>\n<p>หลังจากถกเถียงกันมาหลายปี Griesemer ระบุว่า syntax การจัดการความผิดพลาดของ Go ใช้งานได้ดี แม้จะทำให้โค้ดยาวไปบ้าง และการนำอิมพลีเมนต์ฟีเจอร์จัดการความผิดพลาดใหม่ก็สร้างความขัดแย้งในกลุ่มผู้ใช้ และฟีเจอร์การจัดการความผิดพลาดนี้ต่างจากฟีเจอร์อื่น เพราะถ้าใส่เข้ามาและมีคนเริ่มใช้ โปรแกรมเมอร์อื่นๆ ก็จะถูกบังคับให้ใช้งานไปพร้อมกัน ขณะที่ฟีเจอร์อื่น เช่น Generics คนที่ไม่สนใจใช้งานก็ยังทำงานได้ต่อไปโดยไม่ต้องใช้ฟีเจอร์นี้ นอกจากนี้ไลบรารีใหม่ๆ ก็ช่วยลดความยืดเยื้อของโค้ดลงได้บ้าง เช่น <code>cmp.Or</code> ก็ใช้จัดการความผิดพลาดได้ทีหลังหลายๆ API call</p>\n<p>จากข้อสรุปทั้งหมด Griesemer ประกาศว่าทีมงาน Go ยังไม่รับข้อเสนอการจัดการความผิดพลาดอีกแล้ว และทีมงานจะปิดข้อเสนอทั้งหมด</p>\n<p>ที่มา - <a href=\"https://go.dev/blog/error-syntax\">Go Blog</a></p>\n</div>\n          </div>\n<span><a href=\"https://www.blognone.com/user/lew\">lew</a></span>\n<span><time>Wed, 04/06/2025 - 22:44</time>\n</span>","author":"lew","siteTitle":"Blognone","siteHash":"ededadcf18490b3937e7dd89ebe8c00dc129addbdf1ebe4aff1f458146693da0","entryHash":"c268f70eef74bda05340ca2624b42619931a55ef159195c66511ca0dc6767423","category":"Thai"}