{"title":"Announcing Terraform AzureAD Provider 2.0","link":"https://www.hashicorp.com/blog/announcing-terraform-azuread-provider-2-0","date":1629993600000,"content":"<p>The HashiCorp Terraform Azure providers team is excited to announce the general availability of <a href=\"https://registry.terraform.io/providers/hashicorp/azuread/latest/docs\">version 2.0 of the Terraform AzureAD provider</a>. This release completes the transition to the <a href=\"https://docs.microsoft.com/en-us/graph/overview\">Microsoft Graph API</a>, which replaces the legacy Azure Active Directory Graph API. This transition includes numerous changes to existing resources to enhance the user experience and improve <a href=\"https://azure.microsoft.com/en-us/services/active-directory/\">Azure Active Directory</a> object management.</p>\n<p>Please consult the <a href=\"https://registry.terraform.io/providers/hashicorp/azuread/latest/docs/guides/microsoft-graph\">upgrade guide</a> before upgrading, as this release contains several breaking changes. You may need to update your configuration since several deprecated resources and attributes were removed in this version.</p>\n<p>Version 2.0 of the Terraform AzureAD provider supports Terraform version 0.12 and above.</p>\n<h2><a href=\"#changes-to-authentication\">»</a><a></a>Changes to Authentication</h2>\n<p>While existing authentication methods continue to be supported, because the provider uses a different API, you will likely need to revisit the API permissions granted to your authentication principals .</p>\n<p>We have included <a href=\"https://registry.terraform.io/providers/hashicorp/azuread/latest/docs/guides/microsoft-graph#authentication-and-national-clouds\">comprehensive instructions</a> in our upgrade guide. In addition, the documentation page for each resource now includes a dedicated section detailing the API roles required for that particular resource. One important change is that we no longer recommend using directory roles when authenticating using a service principal; Microsoft Graph features more comprehensive, fine-grained API roles that provide more control and better auditability.</p>\n<h2><a href=\"#new-required-uuid-properties\">»</a><a></a>New Required UUID Properties</h2>\n<p>A notable change in this version of the AzureAD provider is that you must set several properties in your configuration; these properties were previously managed by the provider. This includes the <code>id</code> field for application roles and OAuth 2.0 permission scopes. Requiring these fields enables Terraform to more reliably manage these aspects of your configuration, and unlocks workflows where these UUID values are well-known or pre-existing.</p>\n<p>Our upgrade guide <a href=\"https://registry.terraform.io/providers/hashicorp/azuread/latest/docs/guides/microsoft-graph#new-required-uuid-fields\">explains this change</a> in more detail, with examples demonstrating how you can use the Terraform <a href=\"https://registry.terraform.io/providers/hashicorp/random/latest/docs\">random provider</a> to emulate the earlier behavior.</p>\n<h2><a href=\"#new-resources\">»</a><a></a>New Resources</h2>\n<p>While new features have been purposely minimized for this major version, the provider introduces a new resource and data source:</p>\n<ol>\n<li>The <a href=\"https://registry.terraform.io/providers/hashicorp/azuread/latest/docs/resources/application_pre_authorized\">azuread_application_pre_authorized</a> resource allows you to manage pre-authorized applications linked to an existing Terraform-managed application.</li>\n<li>The <a href=\"https://registry.terraform.io/providers/hashicorp/azuread/latest/docs/data-sources/application_published_app_ids\">azuread_application_published_app_ids</a> data source helps improve the readability of your application configurations by providing named lookups for commonly used Microsoft-published APIs.</li>\n</ol>\n<h2><a href=\"#getting-started\">»</a><a></a>Getting Started</h2>\n<p>We recommend reading our <a href=\"https://registry.terraform.io/providers/hashicorp/azuread/latest/docs/guides/microsoft-graph\">upgrade guide</a> to find out more about the changes in this version of the Terraform AzureAD provider before upgrading your configuration.</p>\n<p>Version 2.0 of the Terraform AzureAD provider is available now on the <a href=\"https://registry.terraform.io/providers/hashicorp/azuread/latest/docs\">Terraform Registry</a>. You can use this version in your Terraform configuration like this:</p><pre><code>terraform {\n  required_providers {\n    azuread = {\n      source  = \"hashicorp/azuread\"\n      version = \"~&gt; 2.0.0\"\n    }\n  }\n}</code></pre><p>We also recommend upgrading to Terraform 1.0 even though the Terraform AzureAD provider will work with Terraform 0.12 or newer. Visit the <a href=\"https://www.terraform.io/upgrade-guides/1-0.html\">Terraform 1.0 upgrade guide</a> for more details.</p>\n<p>After you have upgraded all your configurations to version 2.0 of the Terraform AzureAD provider, don’t forget to audit your existing API permissions or directory roles and remove any that are no longer needed.</p>\n<p>In addition, we have created a <a href=\"https://learn.hashicorp.com/tutorials/terraform/azure-ad\">HashiCorp Learn tutorial</a> to guide you through using Terraform and the Azure AD 2.0 provider. In the process, you will learn about Terraform's configuration language, the Terraform Azure AD provider, and how to leverage both to simplify and automate your workflows.</p>","author":"Tom Bamford","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"0ddd4591c7fd51a78a1899efaff55cf3593f624b2247950b1adc6f7483ce78c2","category":"Tech"}