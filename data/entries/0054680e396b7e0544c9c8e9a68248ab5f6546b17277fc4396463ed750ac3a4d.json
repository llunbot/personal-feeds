{"title":"Terraform Enterprise adds new security and self-service features","link":"https://www.hashicorp.com/blog/terraform-enterprise-adds-new-security-and-self-service-features","date":1689782400000,"content":"<p>As cloud platform teams seek to scale their infrastructure provisioning capabilities across their organization, enabling self-service becomes a key driver of efficiency. But self-service introduces new challenges for security, compliance, and reliability. HashiCorp Terraform Enterprise, the self-hosted distribution of Terraform Cloud, has added new features to address these challenges, including:</p>\n\n<ul>\n<li>Vault-backed dynamic credentials</li>\n<li>No-code provisioning workflow</li>\n<li>Support for Terraform 1.5’s new config-driven import</li>\n<li>Continuous validation of infrastructure health</li>\n</ul>\n\n<p>This post reviews these major new enhancements from the last few HashiCorp Terraform releases.</p>\n\n<h2>Vault-backed dynamic credentials</h2>\n\n<p>A secure self-service workflow starts with secure handling of sensitive cloud credentials. Added to Terraform Enterprise in v202303-1, <a href=\"https://developer.hashicorp.com/terraform/enterprise/workspaces/dynamic-provider-credentials\">dynamic provider credentials</a> generates short-lived just-in-time credentials for the Amazon Web Services (AWS), Microsoft Azure, Google Cloud, and HashiCorp Vault providers using an OpenID Connect (OIDC) workflow.</p>\n\n<p>New in v202305-1, <a href=\"https://developer.hashicorp.com/terraform/enterprise/workspaces/dynamic-provider-credentials/vault-backed\">Vault-backed dynamic credentials</a> extends this functionality to support the Vault dynamic secrets engines for AWS, Azure, and Google Cloud. This approach provides a consolidated workflow using Vault for all your secrets management and centralized auditing needs, eliminating the risks and operational overhead of managing static credentials. Learn more about the benefits of this feature in the original <a href=\"https://www.hashicorp.com/blog/terraform-cloud-adds-vault-backed-dynamic-credentials\">Terraform Cloud adds Vault-backed dynamic credentials announcement blog</a>.</p>\n\n<p>As an added benefit specific to Terraform Enterprise, no inbound access to the Terraform Enterprise instance is required from cloud providers to validate the OIDC metadata. Only the Vault instance needs direct access to Terraform Enterprise. Interactions between Vault and the cloud provider are done using outbound API calls. This gives you all the benefits of dynamic credentials without additional exposure for Terraform Enterprise instances hosted in private networks.</p>\n<img src=\"https://www.datocms-assets.com/2885/1689696593-hasicorp_diagram_terraformenterprisevaultbackeddynamiccreds-1.png\" alt=\"Automatically\" /><h2>No-code provisioning</h2>\n\n<p>Our <a href=\"https://www.hashicorp.com/blog/hashicorp-state-of-cloud-strategy-survey-2023-inside-the-maturity-model\">2023 State of Cloud Strategy survey</a> showed that, for the third year in a row, skills shortages are a top challenge to cloud adoption. The no-code provisioning workflow, now generally available in Terraform Enterprise v202306-1, allows platform teams to enable self-service for users without requiring specific Terraform or HashiCorp Configuration Language (HCL) skills. Authors enable their modules for no-code provisioning so end users can provision infrastructure without writing any Terraform code. Module authors can also define the allowed values for input variables, reducing the friction of failed deployments due to invalid inputs and typos.</p>\n\n<p>Learn more about <a href=\"https://developer.hashicorp.com/terraform/enterprise/no-code-provisioning/module-design\">designing</a> and <a href=\"https://developer.hashicorp.com/terraform/enterprise/no-code-provisioning/provisioning\">provisioning</a> no-code modules in the Terraform Enterprise documentation, and check out the demo video:</p>\n<p>Find out how no-code provisioning and Vault-backed dynamic credentials work together with our new tutorial: <a href=\"https://developer.hashicorp.com/terraform/tutorials/cloud/dynamic-credentials-no-code\">Enable self-service workflows with Vault-backed dynamic credentials</a>.</p>\n\n<h2>Config-driven import with Terraform 1.5</h2>\n\n<p><a href=\"https://www.hashicorp.com/blog/terraform-1-5-brings-config-driven-import-and-checks\">Released in June</a>, Terraform 1.5 introduced a new and improved workflow to bring existing infrastructure under management — config-driven import. We’ve already heard great feedback on this new approach from many customers, and as of the July (v202307-1) release, this workflow is supported in Terraform Enterprise for a secure, unified experience. Resources to be imported are shown in the plan and apply output along with the auto-generated code. This means config-driven import can be used as part of VCS and CLI-driven workflows, which was not possible with the old <code>terraform import</code> command.</p>\n<img src=\"https://www.datocms-assets.com/2885/1689696772-import.png\" alt=\"Bulk\" /><h2>Continuous validation</h2>\n\n<p>Once you’ve provisioned (or imported) infrastructure, how do you ensure it remains healthy on Day 2 and beyond? Continuous validation, part of Terraform Enterprise v202307-1, provides automated health checks using assertions defined in your Terraform code so that your infrastructure works as expected over the long term. Customizable notifications alert infrastructure owners as soon as a check fails, helping you avoid costly downtime due to preventable issues such as expiring certificates or security issues from outdated images and newly discovered vulnerabilities.</p>\n\n<p>Continuous validation works with the new <a href=\"https://developer.hashicorp.com/terraform/tutorials/configuration-language/checks\"><code>check</code> blocks</a> introduced in Terraform 1.5. Checks are ideal for post-apply continuous validation because of their flexibility as a top-level construct, and they are well suited for holistic functional validations across your entire configuration. Along with drift detection, conditions and checks are evaluated on an ongoing basis via automatic <a href=\"https://developer.hashicorp.com/terraform/enterprise/workspaces/health\">health assessment</a> runs. The assessment interval can be customized by the Terraform Enterprise administrator.</p>\n\n<p>For more continuous validation examples, read our recent blog post about <a href=\"https://www.hashicorp.com/blog/8-terraform-continuous-validation-use-cases-for-aws-google-cloud-and-azure\">8 Terraform continuous validation use cases for AWS, Google Cloud, and Azure</a>.</p>\n\n<h2>Other enhancements and next steps</h2>\n\n<p>Along with these major new features, Terraform Enterprise also now supports assignment of <a href=\"https://developer.hashicorp.com/terraform/enterprise/workspaces/variables/managing-variables#variable-sets\">variable sets</a> at the project level, a <a href=\"https://www.hashicorp.com/blog/terraform-cloud-adds-new-sentinel-policy-review-ui\">new Sentinel policy review UI</a>, and the ability to <a href=\"https://developer.hashicorp.com/terraform/enterprise/users-teams-organizations/api-tokens#token-expiration\">set a lifetime</a> for user, team, and organization API tokens. And <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/agents/changelog#1-9-0-05-04-2023\">version 1.9 of Terraform Cloud agents</a> added support for <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/agents/hooks#setting-environment-variables\">writing to environment variables from agent hooks</a>, broadening the capabilities of custom agent images.</p>\n\n<p>Customers should note that June (v202306-1) marked the removal of the legacy run pipeline mode, which was first deprecated in February (v202302-1). If your environment is using a custom worker image, you must transition to a new custom agent image <em>before</em> moving to the v202306-1 release. To find out more about this migration, refer to the <a href=\"https://developer.hashicorp.com/terraform/enterprise/admin/infrastructure/worker-to-agent-migration\">custom agent image migration guide</a>. This migration guide has been updated to include the environment variable enhancement released in tfc-agent 1.9.</p>\n\n<p>For more information about the latest releases of Terraform Enterprise, review the release notes in the <a href=\"https://developer.hashicorp.com/terraform/enterprise/releases\">Terraform Enterprise documentation</a>. For more information about Terraform Enterprise or to get started, visit the <a href=\"https://www.hashicorp.com/products/terraform\">Terraform product page</a> or <a href=\"https://www.hashicorp.com/contact-sales\">contact HashiCorp sales</a>.</p>\n","author":"Dan Barr","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"0054680e396b7e0544c9c8e9a68248ab5f6546b17277fc4396463ed750ac3a4d","category":"Tech"}