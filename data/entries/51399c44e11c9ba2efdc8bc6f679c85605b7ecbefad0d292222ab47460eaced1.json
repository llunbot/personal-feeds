{"title":"Announcing HashiCorp Waypoint 0.5","link":"https://www.hashicorp.com/blog/announcing-hashicorp-waypoint-0-5","date":1628794800000,"content":"<p>We are pleased to announce the general availability of <a href=\"https://www.waypointproject.io/downloads\">HashiCorp Waypoint 0.5</a>. Waypoint is a tool that enables developers to describe how to get their applications from development to production in a single file and deploy using a single command, providing a modern workflow to build, deploy, and release across platforms.</p>\n<p>Waypoint 0.5 focuses on improving visibility into the health of deployments while empowering teams to perform more actions in the Waypoint UI. You can view a breakdown of deployment resources, such as <a href=\"https://kubernetes.io/docs/concepts/services-networking/service/\">Kubernetes Services</a> and their current health status, from the CLI and UI.</p>\n<p>This release includes several key features and improvements:</p>\n<ul>\n<li><strong>Status reports:</strong> Waypoint can now expose near real-time information for deployments and releases. You can check the resources managed by Waypoint and their overall health associated with the deployment environment.</li>\n<li><strong>Input variables:</strong> Input variables serve as parameters for a Waypoint project, allowing aspects of the project to be customized without being statically defined inside the <code>waypoint.hcl</code> file. Input variables enable platform operators to abstract details from the development team and create reusable Waypoint configurations.</li>\n<li><strong>OIDC authentication and user accounts:</strong> Waypoint now has a user account system and can be configured to sign up and log in using any OIDC provider, such as Google, GitLab, and others.</li>\n</ul>\n<p>This release includes many additional new features, workflow enhancements, general improvements, and bug fixes. The <a href=\"https://github.com/hashicorp/waypoint/blob/main/CHANGELOG.md\">Waypoint 0.5 changelog</a> contains a detailed list of all changes in this release.</p>\n<h2><a href=\"#status-reports\">»</a><a></a>Status Reports</h2>\n<p>Waypoint can now track the real-time health status of physical resources created as part of its operations, such as individual Kubernetes pods, Docker containers, AWS load balancers, and more. You can access the health status in both the UI and CLI.</p>\n<p>In the Waypoint UI, you can refresh your application status with the click of a button. If you’re curious about how an application is doing and want an up-to-date report from the application platform, clicking the \"Re-run health check\" icon will regenerate a status report and update it for you on demand. Currently, this feature is limited to projects configured with a remote Git data source.</p><img src=\"https://www.datocms-assets.com/2885/1628795714-status-report-refresh.png\" /><p>Before 0.5, even though a Waypoint deployment might declare itself as \"successful,\" the deployed resources such as a Kubernetes pod could have failed after being created. Waypoint’s new status reports allow teams to determine the health of deployed resources.</p>\n<p>For projects <a href=\"https://www.hashicorp.com/blog/using-waypoint-runners-to-enable-gitops-workflows\">backed by a remote data source with Git</a>, Waypoint server will automatically schedule a status report refresh for every application inside a project. By default, the server will refresh a project's application status at 5-minute intervals. You can adjust the refresh interval using the <a href=\"https://waypointproject.io/commands/project-apply\"><code>waypoint project apply</code></a> command or disable it per project.</p>\n<h3><a href=\"#new-cli-command-waypoint-status\">»</a><a></a>New CLI Command: <code>waypoint status</code></h3>\n<p>A new CLI command has been introduced in this release: <code>waypoint status</code>. This command provides details on the current state of all projects, their applications, and their applications’ deployment and release resources.</p>\n<p>When you run <code>waypoint status</code> inside a project directory, the new command will give you a quick overview of every application inside that project. This command includes a deployment’s workspace definition and the most recent deployment or release status check. Additionally, passing a target ‘project’ — such as <code>waypoint status project-name</code> — will show you details of the project requested without having to save the project locally.</p><img src=\"https://www.datocms-assets.com/2885/1628793743-waypoint-status.png\" /><p>For a more detailed view of an application in a project, you can use the <code>-app</code> flag for diving deeper. This view shows you an application summary, the summary of the last deployment, and its resources. If a release exists, the status command will also show you a release summary with the resources it created.</p><img src=\"https://www.datocms-assets.com/2885/1628793702-waypoint-status-detailed.png\" /><p>For a higher-level detail view of all projects defined inside your Waypoint server, you can run the <code>waypoint status</code> command outside a project directory or include the <code>-all-projects</code> flag.</p><img src=\"https://www.datocms-assets.com/2885/1628793661-waypoint-status-all-projects.png\" /><h2><a href=\"#improved-status-indicators\">»</a><a></a>Improved Status Indicators</h2>\n<p>Along with the previously mentioned status report, the browser UI now presents an application’s operational status along with its health status, in a readable and transparent way:</p><img src=\"https://www.datocms-assets.com/2885/1628793845-waypoint-status-indicator.png\" /><h2><a href=\"#deployment-urls\">»</a><a></a>Deployment URLs</h2>\n<p>The browser UI now displays complete deployment URLs instead of a more generic button label. Teams self-hosting URL services should find this feature particularly useful.</p><img src=\"https://www.datocms-assets.com/2885/1628793900-deployment-urls.png\" /><h2><a href=\"#git-ref-information\">»</a><a></a>Git Ref Information</h2>\n<p>Projects that utilize the GitOps workflow within Waypoint now display the commit that triggered the operation, while clicking on the Git commit copies the Secure Hash Algorithm (SHA) value to your clipboard.</p><img src=\"https://www.datocms-assets.com/2885/1628793957-git-ref-information.png\" /><h2><a href=\"#input-variables\">»</a><a></a>Input Variables</h2>\n<p>Input variables allow the customization of aspects of Waypoint configuration with values that may change or get set per Waypoint run. Users can now apply parameters by declaring variables in the <code>waypoint.hcl</code> file and setting their values using CLI options, environment variables, and the Waypoint server UI.</p><img src=\"https://www.datocms-assets.com/2885/1628794022-input-variables.png\" /><img src=\"https://www.datocms-assets.com/2885/1628794088-input-variables-settings.png\" /><p>By defining values that you can customize, you can provide a consistent interface to change how a given configuration behaves, allowing for easier cross-environment deployments. You can assign values to variables in different files — for example, a <code>test.wpvars</code> and a <code>prod.wpvars</code> — and then pull in those environment-specific values based on where you are releasing your deployment.</p>\n<p>The <code>waypoint.hcl</code> configuration file serves as a central location for variable definition, though values can originate from <a href=\"https://waypointproject.io/docs/waypoint-hcl/variables/input#assigning-values-to-custom-input-variables\">various sources</a> based on your preferences for managing input values. Input variables make it easier to produce deployments across different workstreams, from developer workstations to your CI pipeline.</p>\n<p>To give input variables a try, check out our <a href=\"https://learn.hashicorp.com/tutorials/waypoint/input-variables\">HashiCorp Learn tutorial</a>.</p>\n<h2><a href=\"#oidc-authentication-and-user-accounts\">»</a><a></a>OIDC Authentication and User Accounts</h2>\n<p>Before Waypoint 0.5, the only authentication method available was a token authentication mechanism including an invite capability to help facilitate token distribution. While Waypoint’s token system works well, the tokens don’t get assigned to an identity. That means individuals can use multiple tokens, making it impossible to determine <em>who</em> did what.</p>\n<p>Waypoint now can support OIDC providers such as Google, GitLab, and others, though the OIDC functionality does not entirely replace the token system. The built-in token system supports machine-to-machine level access, and human operators can use OIDC to authenticate and acquire a token.</p><img src=\"https://www.datocms-assets.com/2885/1628794168-oidc-authentication.png\" /><p>For more information on how to configure this feature, please refer to the <a href=\"https://tip.waypointproject.io/docs/server/auth/oidc\">OIDC documentation</a>.</p>\n<p>We hope you enjoy Waypoint 0.5!</p>\n<h2><a href=\"#next-steps\">»</a><a></a>Next Steps</h2>\n<ul>\n<li><a href=\"https://www.waypointproject.io/downloads\">Download Waypoint 0.5</a> from the project website.</li>\n<li>Learn more about Waypoint with tutorials on the <a href=\"https://learn.hashicorp.com/waypoint\">HashiCorp Learn</a> site.</li>\n<li><a href=\"https://www.waypointproject.io/community\">Contribute to the Waypoint project</a> and participate in its community.</li>\n<li><a href=\"https://www.waypointproject.io/docs/extending-waypoint\">Extend Waypoint</a> by creating a plugin.</li>\n</ul>","author":"Taylor Dolezal","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"51399c44e11c9ba2efdc8bc6f679c85605b7ecbefad0d292222ab47460eaced1","category":"Tech"}