{"title":"บันทึกปัญหาการใช้ Data structure ใน Redis","link":"https://www.somkiat.cc/data-structure-in-redis/","date":1628411050000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header><div><p><time>August 8, 2021</time> <span><a href=\"https://www.somkiat.cc/category/programming/\" rel=\"category tag\">Programming</a>, <a href=\"https://www.somkiat.cc/category/tools/\" rel=\"category tag\">Tools</a></span></p></div></header><div><p><strong>ปัญหาที่พบเจอสำหรับการจัดเก็บข้อมูลใน <a rel=\"noreferrer noopener\" href=\"https://redis.io/\" target=\"_blank\">Redis</a></strong><br>นั่นก็คือ การเลือก data structure ที่ไม่เหมาะสมกับการใช้งาน<br>ส่งผลให้การทำงานในแต่ละ operation สูงขึ้น<br>ส่งผลให้ Redis รับงานได้น้อยลง<br>เนื่องจาก Redis ทำงานแบบ Single Thread นะ (แต่ก็ปรับปรุงมาเยอะ)<br>ดังนั้นจึงกลับมาดูที่ต้นเหตุ รวมทั้งความรู้พื้นฐานกันหน่อย</p><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/08/distributed-caching-in-aspdotnet-core-with-redis-1.png\" alt=\"\" width=\"544\" height=\"360\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/08/distributed-caching-in-aspdotnet-core-with-redis-1.png 800w, https://www.somkiat.cc/wp-content/uploads/2021/08/distributed-caching-in-aspdotnet-core-with-redis-1-300x199.png 300w, https://www.somkiat.cc/wp-content/uploads/2021/08/distributed-caching-in-aspdotnet-core-with-redis-1-768x510.png 768w\" sizes=\"(max-width: 544px) 100vw, 544px\"></figure><p><strong>โดยปกติข้อมูลที่เก็บใน Redis จะมี Data model แบบ Key-value</strong></p><p>ซึ่ง value สามารถมีรูปแบบของข้อมูลหลัก ๆ ดังนี้</p><ul><li><strong>Primitive data type</strong> เช่น string และ number</li><li><strong>Data structure</strong> ประกอบไปด้วย List, Set, Hash, SortedSet เป็นต้น</li></ul><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/08/redis-data-structure-types.jpeg\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/08/redis-data-structure-types.jpeg 876w, https://www.somkiat.cc/wp-content/uploads/2021/08/redis-data-structure-types-300x134.jpeg 300w, https://www.somkiat.cc/wp-content/uploads/2021/08/redis-data-structure-types-768x344.jpeg 768w\" sizes=\"(max-width: 876px) 100vw, 876px\"></figure><p>โดยส่วนใหญ่เราจำเป็นต้องทำความเข้าใจว่า<br>ระบบงานของเรานั้น ต้องการใช้ข้อมูลอย่างไร<br>เพื่อให้เลือก data structure ได้อย่างเหมาะสม<br>เนื่องจากการเข้าถึงข้อมูลใน Redis นั้น<br>จะมีการบอกและอธิบายไว้ชัดเจนว่ามี <strong><a rel=\"noreferrer noopener\" href=\"https://en.wikipedia.org/wiki/Big_O_notation\" target=\"_blank\">Big O</a></strong> เท่าไร</p><p><strong>ยกตัวอย่างเช่น การทำงานของ <a href=\"https://redis.io/commands/sort\" target=\"_blank\" rel=\"noreferrer noopener\">SORT</a> operation</strong></p><p>จะมี Big O คือ <strong>O(N+M*(log M))</strong> นั่นคือ<br>มีการทำงานตามจำนวนข้อมูลเป็นอย่างต่ำ</p><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.15.04-1024x538.png\" alt=\"\" width=\"543\" height=\"285\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.15.04-1024x538.png 1024w, https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.15.04-300x158.png 300w, https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.15.04-768x404.png 768w, https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.15.04-1536x808.png 1536w, https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.15.04.png 1780w\" sizes=\"(max-width: 543px) 100vw, 543px\"></figure><p>ดังนั้นจะดีกว่าไหม ถ้าเราลดเวลาการทำงานลงไป<br>ด้วยการเก็บข้อมูลที่ไม่ต้องมา SORT แบบนี้<br>หรือเป็นการเก็บข้อมูลแบบที่ SORT ให้เลยตั้งแต่แรก<br>นั่นคือการใช้ SortedSet<br>จากนั้นดึงข้อมูลก็ใช้ <a rel=\"noreferrer noopener\" href=\"https://redis.io/commands/zrange\" target=\"_blank\">ZRANGE</a> operation<br>ที่มี Big O เพียง <strong>O(M*(log M))</strong><br>ซึ่งน่าจะงานได้มีประสิทธิภาพกว่าไหม ?</p><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.21.11-1024x497.png\" alt=\"\" width=\"528\" height=\"256\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.21.11-1024x497.png 1024w, https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.21.11-300x146.png 300w, https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.21.11-768x373.png 768w, https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.21.11-1536x746.png 1536w, https://www.somkiat.cc/wp-content/uploads/2021/08/Screen-Shot-2564-08-08-at-15.21.11.png 1730w\" sizes=\"(max-width: 528px) 100vw, 528px\"></figure><p><strong>ดังนั้นเรื่องของการออกแบบ ต้อง สัมพันธ์การ use case ของระบบ</strong></p><p>ไม่ใช่เพียงแค่เก็บในสิ่งที่ทำงานได้รวดเร็วเท่านั้น<br>เพราะว่า แทนที่จะทำงานได้เร็ว กลับกลายเป็นคอขวด<br>เพราะว่าจะเก็บอย่างเดียว<br>โดยไม่ได้สนใจการนำมาใช้งาน ว่ามี operation cost มากเพียงใด</p></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"88a944db6a95e182b9ca0032b670cf731d87f5b8e25af0c4d99356b3280bb062","category":"Thai"}