{"title":"Terraform Cloud Adds Dynamic Provider Credentials for Vault and Official Cloud Providers","link":"https://www.hashicorp.com/blog/terraform-cloud-adds-dynamic-provider-credentials-vault-official-cloud-providers","date":1675108800000,"content":"<p>We are excited to announce the release of <em>dynamic provider credentials</em>, a new authentication model now available in public beta for <a href=\"https://cloud.hashicorp.com/products/terraform\">HashiCorp Terraform Cloud</a>. Dynamic provider credentials help users create short-lived, just-in-time (JIT) credentials for <a href=\"https://www.hashicorp.com/products/vault\">HashiCorp Vault</a> and the <a href=\"https://registry.terraform.io/browse/providers?tier=official\">official Terraform providers for the major cloud vendors</a>. This post discusses the benefits of dynamic vs. static credentials and reviews the details of the new authentication method.</p>\n<h2><a href=\"#credential-management-challenges\">»</a><a></a>Credential Management Challenges</h2>\n<p>Terraform Cloud users typically use static credentials to authenticate with Vault and cloud providers, but this practice brings operational and security challenges. Managing these static, long-lived credentials does not scale well without manual effort. Users must set credentials as workspace variables or variable sets in Terraform Cloud, adding additional steps to their authentication workflow. Manual storage of static credentials introduces security risks, even if credentials are rotated regularly. Manual credential rotation also puts an operational burden on administrators. Users need a way to safely and efficiently authenticate to their cloud providers and Vault.</p>\n<h2><a href=\"#introducing-dynamic-provider-credentials\">»</a><a></a>Introducing Dynamic Provider Credentials</h2>\n<p>Terraform Cloud now supports dynamic provider credentials for Vault and official cloud providers. Dynamic credentials are temporary and time-bound, lasting from a few minutes to several hours. They are unique to each Terraform workload and are generated on demand, as opposed to static credentials, which are defined ahead of time and shared. Dynamic credentials do not require manual rotation or revocation when they are no longer needed.</p>\n<h3><a href=\"#standards-based\">»</a><a></a>Standards-Based</h3>\n<p>The dynamic provider credentials feature is based on workload identity and implementation of the OpenID Connect (OIDC) standard. Organizations start by configuring Terraform Cloud as a trusted identity provider with their cloud platform or Vault. Terraform Cloud generates a signed identity token for every run. This token is exchanged with the provider to obtain temporary, short-lived credentials that are injected into the Terraform run environment. This exchange happens automatically for the supported providers by adding a few simple environment variables to the workspace.</p><img src=\"https://www.datocms-assets.com/2885/1676997362-dynamic-creds-vars-edited.png\" alt=\"Workspace\" /><h3><a href=\"#vault-provider\">»</a><a></a>Vault Provider</h3>\n<p>The <a href=\"https://registry.terraform.io/providers/hashicorp/vault/latest/docs\">Vault provider</a> is the primary way users interact with Vault using Terraform. It allows users to configure Vault authentication methods, roles, and policies, and to write and access static secrets for workloads. Administrators need a simple and secure way to authenticate a Terraform Cloud workspace with Vault without having to manually rotate Vault credentials. Dynamic provider credentials for Vault allows administrators to give workspaces access to the exact secrets they need without exposing Vault credentials as workspace variables.</p>\n<h3><a href=\"#cloud-providers\">»</a><a></a>Cloud Providers</h3>\n<p>Terraform Cloud dynamic provider credentials natively integrate with the Amazon Web Services (AWS), Microsoft Azure, and Google Cloud providers. Once an OIDC trust relationship is established, cloud admins scope roles with permissions appropriate to each workload. This eliminates the need for long-term API access keys or service principals and ensures that each Terraform Cloud run receives only the permissions it needs.</p>\n<h2><a href=\"#dynamic-provider-credentials-benefits\">»</a><a></a>Dynamic Provider Credentials Benefits</h2>\n<p>As users shift from static to dynamic credentials, a few key benefits emerge:</p>\n<p><strong>Reduced friction:</strong> Managing long-lived credentials requires custom solutions and processes that are typically taken on by the cloud platform team. Dynamic provider credentials remove the need to manage and store long-lived secrets in Terraform Cloud. Instead, temporary credentials are retrieved from a cloud platform on the fly, helping teams avoid the burden of manual secret rotation.</p>\n<p><strong>Reduced risk:</strong> Storing long-lived static credentials presents severe security risks, as cloud credentials are highly sensitive and can grant powerful privileges. Using temporary, short-lived credentials removes the need to store long-lived secrets in Terraform Cloud and significantly limits the impact of accidental credential exposure and reuse.</p>\n<p><strong>Granular permissions control:</strong> Dynamic provider credentials allow cloud platforms to scope privileges down to specific Terraform Cloud operations based on the run phase, workspace, project, or organization. For example, administrators can define read-only permissions for plans and write privileges for apply runs. This workflow helps keep permissions tightly scoped without manually managing and rotating credentials across many workspaces. This control gives users additional permissions customization and enables the least privilege principle.</p>\n<h2><a href=\"#get-started-with-dynamic-provider-credentials\">»</a><a></a>Get Started with Dynamic Provider Credentials</h2>\n<p>Dynamic provider credentials help organizations mitigate the security risks of storing long-lived credentials and avoid the operational burdens of manually rotating them. This helps simplify Terraform setup and ensures secure authentication across cloud environments.</p>\n<p>To learn more about dynamic provider credentials, check out the <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/workspaces/dynamic-provider-credentials\">documentation</a> and <a href=\"https://developer.hashicorp.com/terraform/tutorials/cloud/dynamic-credentials\">tutorial</a>. Sample code for all four integrations can be found in the <a href=\"https://github.com/hashicorp/terraform-dynamic-credentials-setup-examples\">setup examples repo on GitHub</a>.</p>\n<p>Get started with <a href=\"https://cloud.hashicorp.com/products/terraform\">Terraform Cloud</a> for free to begin provisioning and managing your infrastructure in any environment. And try <a href=\"https://cloud.hashicorp.com/products/vault\">HCP Vault</a>, the easiest way to get started with Vault. <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/users-teams-organizations/users#log-in-with-your-hashicorp-cloud-platform-account\">Link your Terraform Cloud and HashiCorp Cloud Platform accounts</a> together for a seamless sign-in experience.</p>","author":"Mitchell Ross","siteTitle":"HashiCorp Blog","siteHash":"3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"3b8a2a2425955c0c11153fc769adbdc0e5fb86384a7055db7bd7b9","category":"Tech"}