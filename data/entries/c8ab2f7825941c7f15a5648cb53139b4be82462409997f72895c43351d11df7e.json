{"title":"Announcing Amazon Managed Service for Apache Flink Renamed from Amazon Kinesis Data Analytics","link":"https://aws.amazon.com/blogs/aws/announcing-amazon-managed-service-for-apache-flink-renamed-from-amazon-kinesis-data-analytics/","date":1693417434000,"content":"<p>Today we are announcing the rename of Amazon Kinesis Data Analytics to <a href=\"https://aws.amazon.com/managed-service-apache-flink/\">Amazon Managed Service for Apache Flink</a>, a fully managed and serverless service for you to build and run real-time streaming applications using <a href=\"https://flink.apache.org/\">Apache Flink</a>.</p> \n<p>We continue to deliver the same experience in your Flink applications without any impact on ongoing operations, developments, or business use cases. All your existing running applications in Kinesis Data Analytics will work as is without any changes.</p> \n<p>Many customers use Apache Flink for data processing, including support for diverse use cases with a vibrant open-source community. While Apache Flink applications are robust and popular, they can be difficult to manage because they require scaling and coordination of parallel compute or container resources. With the explosion of data volumes, data types, and data sources, customers need an easier way to access, process, secure, and analyze their data to gain faster and deeper insights without compromising on performance and costs.</p> \n<p>Using Amazon Managed Service for Apache Flink, you can set up and integrate data sources or destinations with minimal code, process data continuously with sub-second latencies from hundreds of data sources like <a href=\"https://aws.amazon.com/kinesis/data-streams/\">Amazon Kinesis Data Streams</a> and <a href=\"https://aws.amazon.com/msk/\">Amazon Managed Streaming for Apache Kafka</a> (Amazon MSK), and respond to events in real-time. You can also analyze streaming data interactively with notebooks in just a few clicks with Amazon Managed Service for Apache Flink Studio with built-in visualizations powered by <a href=\"https://zeppelin.apache.org/\">Apache Zeppelin</a>.</p> \n<p>With Amazon Managed Service for Apache Flink, you can deploy secure, compliant, and highly available applications. There are no servers and clusters to manage, no compute and storage infrastructure to set up, and you only pay for the resources your applications consume.</p> \n<p><strong><u>A History to Support Apache Flink</u></strong><br /> <img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/08/16/apache_flink2_200_color_black.png\" alt width=\"200\" height=\"103\" />Since we <a href=\"https://aws.amazon.com/blogs/aws/amazon-kinesis-analytics-process-streaming-data-in-real-time-with-sql/\">launched Amazon Kinesis Data Analytics</a> based on a proprietary SQL engine in 2016, we learned that SQL alone was not sufficient to provide the capabilities that customers needed for efficient stateful stream processing. So, we started investing in Apache Flink, a popular open-source framework and engine for processing real-time data streams.</p> \n<p>In 2018, we provided support for <a href=\"https://aws.amazon.com/blogs/aws/new-amazon-kinesis-data-analytics-for-java/\">Amazon Kinesis Data Analytics for Java</a> as a programmable option for customers to build streaming applications using Apache Flink libraries and choose their own integrated development environment (IDE) to build their applications. In 2020, we repositioned Amazon Kinesis Data Analytics for Java to <a href=\"https://aws.amazon.com/about-aws/whats-new/2020/10/amazon-kinesis-data-analytics-for-java-is-now-amazon-kinesis-data-analytics-for-apache-flink/\">Amazon Kinesis Data Analytics for Apache Flink</a> to emphasize our continued support for Apache Flink. In 2021, we launched <a href=\"https://aws.amazon.com/blogs/aws/introducing-amazon-kinesis-data-analytics-studio-quickly-interact-with-streaming-data-using-sql-python-or-scala/\">Kinesis Data Analytics Studio</a> (now, Amazon Managed Service for Apache Flink Studio) with a simple, familiar notebook interface for rapid development powered by Apache Zeppelin and using Apache Flink as the processing engine.</p> \n<p>Since 2019, we have worked more closely with the Apache Flink community, increasing code contributions in the area of AWS connectors for Apache Flink such as those for Kinesis Data Streams and <a href=\"https://aws.amazon.com/kinesis/data-firehose/\">Kinesis Data Firehose</a>, as well as sponsoring annual <a href=\"https://www.flink-forward.org/\">Flink Forward</a> events. Recently, we contributed <a href=\"https://aws.amazon.com/blogs/opensource/making-it-easier-to-build-connectors-with-apache-flink-introducing-the-async-sink/\">Async Sink</a> to the <a href=\"https://flink.apache.org/news/2022/05/05/1.15-announcement.html\">Flink 1.15 release</a>, which improved cloud interoperability and added more sink connectors and formats, among other updates.</p> \n<p>Beyond connectors, we continue to work with the Flink community to contribute availability improvements and deployment options. To learn more, see <a href=\"https://aws.amazon.com/blogs/opensource/making-it-easier-to-build-connectors-with-apache-flink-introducing-the-async-sink/\">Making it Easier to Build Connectors with Apache Flink: Introducing the Async Sink</a> in the AWS Open Source Blog.</p> \n<p><strong><u>New Features in Amazon Managed Service for Apache Flink</u></strong><br /> As I mentioned, you can continue to run your existing Flink applications in Kinesis Data Analytics (now Amazon Managed Apache Flink) without making any changes. I want to let you know about a part of the service along with the console change and new feature,  a blueprint where you create an end-to-end data pipeline with just one click.</p> \n<p>First, you can use <a href=\"https://console.aws.amazon.com/flink/\">the new console of Amazon Managed Service for Apache Flink</a> directly under the Analytics section in AWS. To get started, you can easily create <strong>Streaming applications</strong> or <strong>Studio notebooks</strong> in the new console, with the same experience as before.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/08/16/2023-amazon-managed-service-apache-flink-1.jpg\" alt width=\"2450\" height=\"1179\" /></p> \n<p>To create a streaming application in the new console, choose <strong>Create from scratch</strong> or <strong>Use a blueprint</strong>. With a new blueprint option, you can create and set up all the resources that you need to get started in a single step using <a href=\"https://aws.amazon.com/cloudformation/\">AWS CloudFormation</a>.</p> \n<p>The blueprint is a curated collection of Apache Flink applications. The first of these has demo data being read from a Kinesis Data Stream and written to an <a href=\"https://aws.amazon.com/s3\">Amazon Simple Storage Service</a> (Amazon S3) bucket.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/08/16/2023-amazon-managed-service-apache-flink-2.jpg\" alt width=\"1741\" height=\"1518\" /></p> \n<p>After creating the demo application, you can configure, run, and open the Apache Flink dashboard to monitor your Flink application’s health with the same experiences as before. You can change a code sample in the <a href=\"https://github.com/awslabs/managed-service-for-apache-flink-blueprints\">GitHub repository</a> to perform different operations using the Flink libraries in your own local development environment.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/08/16/2023-amazon-managed-service-apache-flink-3.jpg\" alt width=\"2547\" height=\"1095\" /></p> \n<p>Blueprints are designed to be extensible, and you can leverage them to create more complex applications to solve your business challenges based on Amazon Managed Service for Apache Flink. Learn more about <a href=\"https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-it-works.html\">how to use Apache Flink libraries</a> in the AWS documentation.</p> \n<p>You can also use a blueprint to create your Studio notebook using Apache Zeppelin as a new setup option. With this new blueprint option, you can also create and set up all the resources that you need to get started in a single step using AWS CloudFormation.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/08/16/2023-amazon-managed-service-apache-flink-4.jpg\" alt width=\"1774\" height=\"1697\" /></p> \n<p>This blueprint includes Apache Flink applications with demo data being sent to an Amazon MSK topic and read in Managed Service for Apache Flink. With an Apache Zeppelin notebook, you can view, query, and analyze your streaming data. Deploying the blueprint and setting up the Studio notebook takes about ten minutes. Go get a cup of coffee while we set it up!</p> \n<p>After creating the new Studio notebook, you can open an Apache Zeppelin notebook to run SQL queries in your note with the same experiences as before. You can view a code sample in the GitHub repository to learn more about how to use Apache Flink libraries.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/08/16/2023-amazon-managed-service-apache-flink-5.jpg\" alt width=\"2560\" height=\"1073\" /></p> \n<p>You can run more SQL queries on this demo data such as user-defined functions, tumbling and hopping windows, <a href=\"https://nightlies.apache.org/flink/flink-docs-release-1.13/docs/dev/table/sql/queries/topn/\">Top-N</a> queries, and delivering data to an S3 bucket for streaming.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/08/16/2023-amazon-managed-service-apache-flink-6.jpg\" alt width=\"2233\" height=\"1127\" /></p> \n<p>You can also use Java, Python, or Scala to power up your SQL queries and deploy your note as a continuously running application, as shown in the blog posts, <a href=\"https://aws.amazon.com/blogs/aws/introducing-amazon-kinesis-data-analytics-studio-quickly-interact-with-streaming-data-using-sql-python-or-scala/\">how to use the Studio notebook</a> and <a href=\"https://aws.amazon.com/blogs/big-data/query-your-amazon-msk-topics-interactively-using-amazon-kinesis-data-analytics-studio/\">query your Amazon MSK topics</a>.</p> \n<p>To learn more blueprint samples, see GitHub repositories such as <a href=\"https://github.com/aws-samples/amazon-kinesis-data-analytics-blueprints/blob/main/apps/java-datastream/msk-serverless-to-s3-datastream-java\">reading from MSK Serverless and writing to Amazon S3</a><strong>, </strong><a href=\"https://github.com/aws-samples/amazon-kinesis-data-analytics-blueprints/blob/main/apps/java-datastream/msk-serverless-to-msk-serverless-datastream-java\">reading from MSK Serverless and writing to MSK Serverless</a>, and <a href=\"https://github.com/aws-samples/amazon-kinesis-data-analytics-blueprints/blob/main/apps/python-table-api/msk-serverless-to-s3-tableapi-python\">reading from MSK Serverless and writing to Amazon S3</a>.</p> \n<p><strong><u>Now Available</u></strong><br /> You can now use <a href=\"https://aws.amazon.com/managed-service-apache-flink\">Amazon Managed Service for Apache Flink</a>, renamed from Amazon Kinesis Data Analytics. All your existing running applications in Kinesis Data Analytics will work as is without any changes.</p> \n<p>To learn more, visit the <a href=\"https://aws.amazon.com/managed-service-apache-flink\">new product page</a> and <a href=\"https://docs.aws.amazon.com/managed-flink/latest/java/what-is.html\">developer guide</a>. You can send feedback to <a href=\"https://repost.aws/tags/TASbyzidEzSJuhJrZ9W8JLDQ/amazon-kinesis-data-analytics\">AWS re:Post for Amazon Managed Service for Apache Flink</a>, or through your usual AWS Support contacts.</p> \n<p>— <a href=\"https://twitter.com/channyun\">Channy</a></p>","author":"Channy Yun","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"c8ab2f7825941c7f15a5648cb53139b4be82462409997f72895c43351d11df7e","category":"Tech"}