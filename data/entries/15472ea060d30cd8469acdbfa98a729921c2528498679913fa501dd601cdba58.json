{"title":"Simplified Responsive Design Mode","link":"https://webkit.org/blog/14670/simplified-responsive-design-mode/","date":1696527618000,"content":"<p>Responsive design is a well-established practice of creating designs that adapt to different screen sizes. Gone are the days when you could create a new website designed for one screen size. Today’s devices are a menagerie of resolutions, from screens that fit on your wrist to the one you hold in your hand or rest on your lap, and even virtual screens that wrap around your entire field of vision.</p>\n<p>There are so many screen sizes today that it’s made designing to a specific set of resolutions almost meaningless. Instead, we’re using powerful modern layout tools like Container Queries, Grid, and Flexbox to create fluid layouts so that designs can adapt to <em>any</em> screen size.</p>\n<p>Creating resilient, adaptive designs requires tools that help you quickly explore your layouts in every resolution. Responsive Design Mode in Safari does just that. It gives you a fast preview of how your web page layout adapts to different viewport dimensions and aspect ratios in real time.</p>\n<p>As part of the suite of developer tools, Responsive Design Mode is available when you <a href=\"https://developer.apple.com/documentation/safari-developer-tools/enabling-developer-features\">enable</a> <strong>Show features for web developers</strong> in Safari’s <strong>Advanced</strong> settings. Once enabled, you can jump into <a href=\"https://developer.apple.com/documentation/safari-developer-tools/responsive-design-mode\">Responsive Design Mode</a> for the currently focused tab or window by choosing <strong>Enter Response Design Mode</strong> from the <strong>Develop</strong> menu or pressing Command-Control-R (⌃⌘R).</p>\n<h2>New Design</h2>\n<p>With its streamlined design in Safari 17, Responsive Design Mode makes it faster and easier to test your designs.</p>\n<figure><img width=\"1920\" height=\"1222\" src=\"https://webkit.org/wp-content/uploads/simplified-rdm.png\" alt=\"Screenshot of webkit.org in the simplified Responsive Design Mode\" srcset=\"https://webkit.org/wp-content/uploads/simplified-rdm.png 1920w, https://webkit.org/wp-content/uploads/simplified-rdm-300x191.png 300w, https://webkit.org/wp-content/uploads/simplified-rdm-1024x652.png 1024w, https://webkit.org/wp-content/uploads/simplified-rdm-768x489.png 768w, https://webkit.org/wp-content/uploads/simplified-rdm-1536x978.png 1536w\" /></figure>\n<h3>Resizing</h3>\n<p>Notably, the row of device and window icons is gone, helping you focus on creating adaptive designs that fluidly respond to any screen size as the web moves away from rigid, resolution-specific designs.</p>\n<figure><img width=\"1380\" height=\"440\" src=\"https://webkit.org/wp-content/uploads/close-up-RDM.png\" alt=\"Close up cropped image of Responsive Design Mode showing with display size controls showing 485 × 985 (82%), 3x,  Open with Simulator button\" srcset=\"https://webkit.org/wp-content/uploads/close-up-RDM.png 1380w, https://webkit.org/wp-content/uploads/close-up-RDM-300x96.png 300w, https://webkit.org/wp-content/uploads/close-up-RDM-1024x326.png 1024w, https://webkit.org/wp-content/uploads/close-up-RDM-768x245.png 768w\" /></figure>\n<p>Resizing is as easy as clicking the “handles” at any side of the viewport preview and dragging them to <em>any</em> size. You can watch the dimensions of the viewport change in the size display shown in screen point units at the upper-left.</p>\n<p>You can even test viewport sizes beyond the size of the display you’re actively using. Keep dragging the handles, and the preview fluidly scales, showing the zoom level as a percentage of the actual size of the viewport. At 100%, each pixel of web content is visible in the preview. When the viewport grows to a size larger than the window size of Safari, the zoom level decreases, indicating the preview is scaled down to fit the available space in the window.</p>\n<h3>Pixel Density</h3>\n<p>Another dimension of screen size designers need to consider today is the pixel density of screens. Pixels have gotten much smaller on modern devices, affecting the pixel-based assets in your designs, like interface icons, photos, or videos. A menu next to the effective viewport dimension allows you to change the pixel ratio used in the preview. The 1x, 2x, and 3x settings help you test all the assets you went the extra mile to prepare to give your users the best experience regardless of their device capabilities.</p>\n<p>Instead of generating each asset by hand, many folks opt to configure their build tools to automatically resize assets for the <code>srcset</code> attribute on image elements or the <code>image-set()</code> function in CSS to set the pixel ratio for a <code>background-image</code>.</p>\n<pre><code><span>&lt;<span>img</span> <span>src</span>=<span>\"image_1x.jpg\"</span> <span>srcset</span>=<span>\"image_2x.jpg 2x, image_3x.jpg 3x\"</span>&gt;</span>\n\n<span>&lt;<span>style</span>&gt;</span>\nbody {\n    background-image: image-set(\"background_1x.jpg\" 1x, \"background_2x.jpg\" 2x);\n}\n<span>&lt;/<span>style</span>&gt;</span>\n</code></pre>\n<p>Here, the pixel ratio control helps you ensure your tooling is configured correctly to generate all the needed assets.</p>\n<p>In CSS you can use media queries to apply styles based on the pixel ratio of the display. For instance, you can set thinner lines on a 2x display:</p>\n<pre><code><span>@media</span> (<span>min-resolution</span>: 2<span>dppx</span>) {\n  .<span>dividerLine</span> {\n    <span>border</span>: <span>0.5px</span> <span>solid</span> <span>grey</span>;\n  }\n}\n</code></pre>\n<p>The pixel ratio control also allows you to test those styles.</p>\n<h3>Simulators</h3>\n<p>Responsive Design Mode shows you a good approximation of how your web page layout will be affected by viewport sizes. But iOS, iPadOS, watchOS, and visionOS have different rendering behaviors optimized to their form factors that are necessarily different than macOS.</p>\n<p>Fast, real-time feedback is what makes Responsive Design Mode so helpful, but it comes with a tradeoff in accuracy. It’s a familiar problem in technology. For example, Xcode offers SwiftUI developers a preview mode that allows them to see the interfaces their code generates and even lets them interact with the interface in a limited capacity. But the complete experience requires building the project to see the result run in a simulator or on an actual device.</p>\n<p>So now, it’s easy to jump into device simulators to try your site designs with the same full-fidelity experience as an actual device.</p>\n<figure><img width=\"1920\" height=\"1200\" src=\"https://webkit.org/wp-content/uploads/rdm-simulator.jpg\" alt=\"Screenshot of webkit.org in Responsive Design Mode alongside an iPhone 14 Pro Max simulator with webkit.org loaded in Safari\" srcset=\"https://webkit.org/wp-content/uploads/rdm-simulator.jpg 1920w, https://webkit.org/wp-content/uploads/rdm-simulator-300x188.jpg 300w, https://webkit.org/wp-content/uploads/rdm-simulator-1024x640.jpg 1024w, https://webkit.org/wp-content/uploads/rdm-simulator-768x480.jpg 768w, https://webkit.org/wp-content/uploads/rdm-simulator-1536x960.jpg 1536w\" /></figure>\n<p>Responsive Design Mode offers a new <strong>Open with Simulator</strong> menu for quickly jumping into an Xcode device simulator for the current web page. It shows a list of suggested simulators, but many more are available than what’s listed. You’ll need to download and install Xcode from the App Store for free to run simulators. Selecting the <strong>Add simulators…</strong> option from the Open with Simulator menu will open a new tab in Safari with instructions on adding more simulators.</p>\n<p>To get a more accurate idea of how your web pages will behave in those environments, you can use simulators without needing access to the devices themselves. It also means you can download simulators for testing your web page in Safari on other macOS versions than the one you’re running now.</p>\n<h2>Web Inspector</h2>\n<p>Responsive Design Mode becomes an even more powerful tool when combined with Web Inspector. It allows you to find the source of layout issues while resizing the page or adjusting the pixel ratio. With developer features enabled, select <strong>Show Web Inspector</strong> from the <strong>Develop</strong> menu or press Command-Option-I (⌥⌘I).</p>\n<figure><img loading=\"lazy\" width=\"1500\" height=\"927\" src=\"https://webkit.org/wp-content/uploads/rdm-docked-web-inspector.png\" alt=\"Screenshot of webkit.org in Responsive Design Mode with Web Inspector docked to the right side of the window\" srcset=\"https://webkit.org/wp-content/uploads/rdm-docked-web-inspector.png 1500w, https://webkit.org/wp-content/uploads/rdm-docked-web-inspector-300x185.png 300w, https://webkit.org/wp-content/uploads/rdm-docked-web-inspector-1024x633.png 1024w, https://webkit.org/wp-content/uploads/rdm-docked-web-inspector-768x475.png 768w\" /></figure>\n<p>When debugging narrow viewport sizes, you might find it helpful to click the <strong>Dock to left</strong> or <strong>Dock to right</strong> button in Web Inspector to put it side-by-side with the preview viewport.</p>\n<h2>Feedback</h2>\n<p>The updated Responsive Design Mode distills the tools to the essentials for quickly assessing the layout of your web pages at any screen size. It gives you at a glance access to layout issues and accelerates testing your pages in a variety of device-accurate simulators.</p>\n<p>We love to hearing from you. Send a tweet to <a href=\"https://twitter.com/webkit\">@webkit</a> to share your thoughts Responsive Design Mode. Find us on Mastodon at <a href=\"https://front-end.social/@jensimmons\">@jensimmons@front-end.social</a> and <a href=\"https://mastodon.social/@jondavis\">@jondavis@mastodon.social</a>. If you run into any issues, we welcome your <a href=\"https://feedbackassistant.apple.com/\">feedback</a> on Safari UI like Responsive Design Mode, or your <a href=\"https://bugs.webkit.org/\">WebKit bug report</a> about web technologies or Web Inspector. Reporting issues makes an enormouse difference.</p>\n<p>Download the latest <a href=\"https://developer.apple.com/safari/download/\">Safari Technology Preview</a> to stay at the forefront of the web platform and to use the latest Web Inspector features.</p>\n<div>Note: Learn more about Web Inspector from the <a href=\"/web-inspector/\">Web Inspector Reference</a> documentation.</div>","author":"","siteTitle":"Blog – WebKit","siteHash":"7f8dbea0b8f53db2e11a2faa08c6dca9954c01638d09a2ce585b77a60d10f7a1","entryHash":"15472ea060d30cd8469acdbfa98a729921c2528498679913fa501dd601cdba58","category":"Tech"}