{"title":"HashiCorp at Google Cloud Next: Seamless infrastructure deployment and management","link":"https://www.hashicorp.com/blog/hashicorp-at-google-cloud-next-seamless-infrastructure-deployment-and-management","date":1692806400000,"content":"<p>Google Cloud's flagship cloud conference — <a href=\"https://cloud.withgoogle.com/next\">Google Cloud Next</a> — is back and once again HashiCorp will be there in full force. (Although the conference passes are sold out, you can still watch all the great sessions from Next '23 on demand, at your convenience with a free <a href=\"https://cloud.withgoogle.com/next\">Digital Pass</a>)</p>\n\n<p>For both in-person and remote attendees, we’re pleased to share the latest news on our long-standing relationship with Google Cloud, and how we help organizations provision, secure, run, and connect applications running in Google Cloud. In this post, we’ll share some highlights of our partnership and our plans for the event, Tuesday through Thursday, Aug. 29 - 31, in San Francisco. </p>\n\n<p>HashiCorp-Google Cloud developments this year include:</p>\n\n<ul>\n<li>Google provider for Terraform passes 350 million downloads </li>\n<li>Control and secure Terraform workflows on Google Cloud with dynamic provider credentials</li>\n<li>Validate the health of Google Cloud infrastructure via continuous validation<br /></li>\n<li>Automate Terraform Cloud from Google Kubernetes Engine (GKE)</li>\n<li>Create Terraform self-hosted Cloud agents on Google Cloud<br /></li>\n<li>Manage Google Cloud resources with Terraform and Infrastructure Manager</li>\n<li>Automate networking across Google Cloud runtimes with HashiCorp Consul and Apigee </li>\n</ul>\n\n<h2>Google Cloud provider for Terraform surpasses 350 million downloads</h2>\n\n<p>As of the publication of this post, the download count for the <a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs\">Google Cloud Platform provider for Terraform</a> stands at 359 million downloads, half of which occurred in the past 12 months.</p>\n<img src=\"https://www.datocms-assets.com/2885/1692807463-provider.png\" alt=\"Google\" /><p>While hundreds of millions of downloads represent a major milestone, Google Cloud and HashiCorp continue to develop new integrations to help customers work faster, use more services and features, and provide developer-friendly ways to deploy cloud infrastructure. </p>\n\n<h2>Control and secure Terraform workflows on Google Cloud with dynamic provider credentials</h2>\n\n<p>Terraform Cloud's <a href=\"https://www.hashicorp.com/blog/terraform-cloud-adds-dynamic-provider-credentials-vault-official-cloud-providers\">dynamic provider credentials</a> let you establish a trust relationship between Terraform Cloud and Google Cloud. They limit the blast radius of compromised credentials by using unique, short-lived credentials for each Terraform run. Dynamic provider credentials also allow you to scope fine-grained control over the resources that each of your Terraform Cloud projects and workspaces can manage.</p>\n\n<p>When you use dynamic provider credentials, Terraform Cloud begins each run by authenticating with Google Cloud, passing it details about the workload, including your organization and workspace name. Your cloud provider then responds with temporary credentials that Terraform Cloud uses to provision your resources for the run. This workflow is based on the OpenID Connect (OIDC) protocol, an open source standard for verifying identity across different systems. You can use Terraform Cloud’s native OIDC integration with Google Cloud to get dynamic credentials for the Google provider in your Terraform Cloud runs. To get started, learn how to <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/workspaces/dynamic-provider-credentials/gcp-configuration\">configure dynamic credentials with the Google Cloud provider</a>.</p>\n\n<h2>Validate the health of Google Cloud infrastructure via continuous validation</h2>\n\n<p>The continuous validation feature in Terraform Cloud allows users to validate the health of their infrastructure beyond the initial provisioning. This helps users to identify issues at the time they first appear and avoid situations where a change is identified only once it causes a customer-facing problem.</p>\n\n<p>Users can add checks to their Terraform configuration using check blocks. Check blocks contain assertions that are defined with a custom condition expression and an error message. When the condition expression evaluates to true the check passes, but when the expression evaluates to false Terraform shows a warning message that includes the user-defined error message.</p>\n\n<p>Custom conditions can be created using data from Terraform providers’ resources and data sources. Data can also be combined from multiple sources; for example, you can use checks to monitor expirable resources by comparing a resource’s expiration date attribute to the current time returned by Terraform’s built-in time functions. This <a href=\"https://www.hashicorp.com/blog/8-terraform-continuous-validation-use-cases-for-aws-google-cloud-and-azure\">guide</a> provides multiple use cases of how to use Terraform check blocks and continuous validation with Google Cloud. </p>\n\n<h2>Automate Terraform Cloud from Google Kubernetes Engine (GKE)</h2>\n\n<p>The <a href=\"https://github.com/hashicorp/terraform-k8s\">Terraform Cloud Operator for Kubernetes</a> provides first-class integration between <a href=\"https://kubernetes.io/\">Kubernetes</a> and <a href=\"https://www.hashicorp.com/products/terraform/editions/cloud/\">Terraform Cloud</a> by extending the Kubernetes control plane to enable lifecycle management of cloud and on-premises infrastructure. This operator provides a unified way to manage a Kubernetes application and its infrastructure dependencies through a single Kubernetes <a href=\"https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/\">CustomResourceDefinition</a> (CRD). After the infrastructure dependencies are created, pertinent information such as endpoints and credentials are returned from Terraform Cloud to Kubernetes.</p>\n\n<p>Terraform Cloud Operator for Kubernetes helps automate the provisioning of infrastructure from <a href=\"https://cloud.google.com/kubernetes-engine\">Google Kubernetes Engine (GKE)</a> and lets users manage Terraform Cloud with Kubernetes custom resources. </p>\n\n<h2>Create self-hosted Terraform Cloud agents on Google Cloud</h2>\n\n<p><a href=\"https://developer.hashicorp.com/terraform/cloud-docs/agents\">Terraform Cloud agents</a> allow Terraform Cloud to communicate with isolated, private, or on-premises infrastructure. By deploying lightweight agents within a specific network segment, you can establish a simple connection between your environment and Terraform Cloud which allows for provisioning operations and management. </p>\n\n<p>Google Cloud Terraform Cloud agents are Terraform modules that create self-hosted agents on Google Cloud. Using Terraform modules you now can quickly <a href=\"https://registry.terraform.io/modules/GoogleCloudPlatform/tf-cloud-agents/google/latest\">create and deploy agent pools for your Terraform Cloud workflows on Google Cloud</a>. Google Cloud agents are available in the Terraform Registry now and include: </p>\n\n<ul>\n<li>Terraform Cloud agents on Google Kubernetes Engine (GKE)</li>\n<li>Managed instance groups using virtual machines </li>\n<li>Instance groups using container virtual machines </li>\n</ul>\n\n<h2>Manage Google Cloud resources with Terraform and Infrastructure Manager</h2>\n\n<p>Google Cloud <a href=\"https://cloud.google.com/infrastructure-manager/docs/overview\">Infrastructure Manager</a> (Infra Manager) automates the deployment and management of Google Cloud infrastructure resources using Terraform. Infra Manager allows you to use infrastructure as code to manage the lifecycle of Google Cloud resources. Terraform is defined declaratively in a <a href=\"https://cloud.google.com/docs/terraform/blueprints/terraform-blueprints\">Terraform blueprint</a> that describes the end state of your infrastructure. You can version the Terraform blueprint, either in a public Git repository or in a <a href=\"https://cloud.google.com/infrastructure-manager/docs/upload-blueprint\">Cloud Storage</a> bucket, and use object versioning to version blueprints. To learn more, check out the newly published <a href=\"https://cloud.google.com/infrastructure-manager/docs/terraform\">Terraform and Infrastructure Manager guide</a>. </p>\n\n<h2>Automate networking across Google Cloud runtimes with Consul and Apigee</h2>\n\n<p><a href=\"https://www.consul.io/\">HashiCorp Consul</a> is how teams automate networking across Google Cloud runtimes. Consul now includes several extensions for <a href=\"https://www.envoyproxy.io/\">Envoy</a>. <a href=\"https://www.hashicorp.com/blog/consul-1-16-enhances-service-mesh-reliability-user-experience-and-security\">Consul’s Envoy extension capability</a> allows operators to offload service-to-service authorization to external tools and platforms. This allows more options to authorize traffic based on more conditions like allow/deny based on business hours.</p>\n\n<p>Apigee’s AuthZ integration is an example of using the external AuthZ extension. Apigee’s implementation requires an API key to be passed between services  in order to allow traffic. You can get started with the <a href=\"https://github.com/gautambaghel/consul-k8s-apigee-hybrid\">Consul AuthZ - Apigee repo</a>. If you are using Apigee today or considering an Apigee deployment, check out  <a href=\"https://cloud.google.com/apigee/docs/api-platform/envoy-adapter/v2.0.x/example-hybrid\">how to use the Apigee Adapter for Envoy with an Apigee hybrid deployment</a>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1692807693-consul-apigee-diagram.png\" alt=\"Authorization\" /><h2>Join us at Google Cloud Next and learn what’s next after Next</h2>\n\n<p>If you are attending Google Next in person or following along virtually, please sign up for the  <a href=\"https://cloud.withgoogle.com/next?session=DEV204\">Seamless Infrastructure Deployment and Management with Terraform</a> session, where HashiCorp and Google will cover why Terraform is an integral component of many teams’ infrastructure and applications, and to Google Cloud. The talk will focus on how Terraform  is used to build and operate resources as infrastructure as code. You’ll view Google Cloud projects that use Terraform as their foundation and learn Google's guidance on using Terraform to deliver the best user experience, time to value, and efficiency for Google Cloud customers. The session takes place on day two of Google Next, August 30th at 8 a.m. PT. </p>\n\n<p>And if you are on site, be sure to  join us at booth #1645 for demos and meet 1:1 with our technical experts to learn more about our product suite, and check out the latest on HashiCorp integrations with Google Cloud.</p>\n\n<p>After Google Next, join our upcoming <a href=\"https://www.hashicorp.com/events/webinars/seamless-infrastructure-deployment-and-management-with-terraform-and-gcp\">webinar series</a> covering Google Cloud projects that use Terraform as their foundation, with guidance on using Terraform to deliver the best user experience, time to value, and efficiency.</p>\n","author":"Gautam Baghel","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"2bb9481c1fb2055858b21040b44639f13fae228e470297abb0ad7709a8f02078","category":"Tech"}