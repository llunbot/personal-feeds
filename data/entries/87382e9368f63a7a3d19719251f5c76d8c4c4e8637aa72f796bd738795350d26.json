{"title":"ตอบคำถามเรื่อง แนวทางในการ shared code","link":"https://www.somkiat.cc/tips-shared-code/","date":1716095045000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/05/shared-service-150x150.png\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/05/shared-service-150x150.png 150w, https://www.somkiat.cc/wp-content/uploads/2024/05/shared-service-75x75.png 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/05/shared-service.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/05/shared-service.png\" /></a></figure>\n\n\n\n<p>จากการแบ่งปันเรื่องของ <strong><a href=\"https://www.skooldio.com/workshops/microservices\" target=\"_blank\">Microservices และ Software architecture</a></strong> นั้น<br />มีคำถามเกี่ยวกับการ shared code ระหว่างระบบงาน<br />ว่าเราควรจัดการอย่างไรบ้าง<br />จึงทำการสรุปแนวทางที่แนะนำไว้นิดหน่อย ดังนี้</p>\n\n\n\n<span></span>\n\n\n\n<p>เรื่องการ shared code นั้นเกิดมาจากส่วนการทำงานที่เหมือนกัน<br />จึงมักจะนำมาไว้ตรงกลาง เพื่อให้สามารถใช้งานร่วมกันได้<br />รูปแบบการ shared code เป็นดังนี้</p>\n\n\n\n<p><strong>รูปแบบที่ 1 ทำการ copy ไปใช้งานจากต้นฉบับเลย (copy-and-paste)</strong></p>\n\n\n\n<p>ตัวอย่างเช่นการ copy จาก project หนึ่งไปยัง project หนึ่ง<br />หรือจาก service หนึ่งไปยัง service หนึ่ง นั่นเอง<br />สามารถใช้งานได้ปกติ<br />แต่ถ้า code ชุดนั้นมีการเปลี่ยนแปลง ต้องตามไปเปลี่ยนแปลงหรือไม่<br />ถ้าใช้ต้องเปลี่ยนหมดเลย มันสร้างความยุ่งยากและวุ่นวายหรือไม่<br />แต่ถ้าการเปลี่ยนแปลงของแต่ละที่ที่ copy code ไป<br />มันไม่เกี่ยวข้องกัน วิธีนี้ก็น่าสนใจมาก ๆ นะ</p>\n\n\n\n<p><strong>รูปแบบที่ 2 สร้างเป็น library ไว้ตรงกลาง</strong> (shared library)</p>\n\n\n\n<p>อาจจะเริ่มจากพวก common/util ที่ใช้งานใน project/service เดียวกันก่อน<br />แต่เมื่อเริ่มใช้ซ้ำ ๆ หรือ เหมือนกันในหลาย project/service แล้ว<br />และเมื่อเปลี่ยนแปลง จะต้องเปลี่ยนแปลงในทุก ๆ ที่ที่ใช้งาน<br />ก็ให้นำออกมาสร้างเป็น shared library กันต่อไป<br />แล้วนำมาไว้ตรงกลางที่เป็น standard ของการจัดการในแต่ละภาษาโปรแกรม เช่น</p>\n\n\n\n<ul>\n<li>สำหรับภาษา Java สร้างเป็น JAR file หรือนำไป publish ขึ้น Maven/Gradle repository server (internal/public)</li>\n\n\n\n<li>สำหรับ JavaScript เก็บไว้ใน NPM package</li>\n\n\n\n<li>สำหรับ Python เก็บไว้ใน pip </li>\n</ul>\n\n\n\n<p>การใช้งานแบบนี้จะผูกมัดกับระบบงานนั้น ๆ มาก<br />ดังนั้นควรจัดการเรื่องของ versioning ให้ดี<br />รวมทั้งการทดสอบใช้ครอบคลุม มิเช่นนั้นแล้ว ผลกระทบจากการเปลี่ยนแปลงจะเยอะมาก ๆ<br />ยิ่งมีการใช้งาน shared library เยอะ ๆ <br />ยิ่งต้องระมัดระวังเรื่องขนาดของ project ที่จะใหญ่ขึ้นอีกด้วย</p>\n\n\n\n<p>ใช้ได้กับระบบงานที่พัฒนาด้วยภาษาโปรแกรมเดียวกันเท่านั้น</p>\n\n\n\n<p><strong>รูปแบบที่ 3 แยกออกมาเป็น service กันเลย (Shared service)</strong></p>\n\n\n\n<p>สร้างเป็น service ใหม่ แยกออกามาเป็นอีก process เป็นอิสระต่อระบบงานอื่น ๆ<br />ช่วยให้ระบบงานต่าง ๆ สามารถใช้งานได้<br />โดยไม่ต้องพัฒนาด้วยภาษาโปแกรมเดียวกัน</p>\n\n\n\n<p>แต่ต้องระวังเรื่องปัญหาต่าง ๆ ของ shared service เช่นกัน<br />ยกตัวอย่างเช่น</p>\n\n\n\n<ul>\n<li>performace การใช้งาน เพราะว่าเรียกผ่านระบบ network ไม่ใช้ process เดียวกันแล้ว ดังนั้น overhead จะสูง</li>\n\n\n\n<li>side effect จากการเปลี่ยนแปลง shared service ดังนั้น กระบวนการพัฒนา ทดสอบ และ deploy มีความสำคัญมาก ๆ ต้องมั่นใจว่า การเปลี่ยนแปลงไม่กระทบต่อผู้ใช้งานทุกคนด้วยเสมอ</li>\n\n\n\n<li>ปัญหาของการ scale เนื่องจากใช้งานจาก service มากมาย </li>\n\n\n\n<li><strong>ที่สำคัญมาก ๆ อย่าให้ shared service เป็นมะเร็ง service</strong> คือ นำเอา logic ของผู้ใช้งานมาใส่ใน shared service จะสูญเสียความเป็นอิสระไป มันจะเป็นปัญหาแบบตายผ่อนส่ง ไม่เจอในช่วงแรก ๆ นะครับ</li>\n</ul>\n\n\n\n<p>เป็น 3 รูปแบบที่แนะนำไว้<br />ซึ่งมีอีกหลายรูปแบบที่เกิดขึ้นมา เช่นใช้งาน <a href=\"https://learn.microsoft.com/en-us/azure/architecture/patterns/sidecar\" target=\"_blank\">sidecar</a> เป็นต้น</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/05/sidecar.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/05/sidecar.png\" width=\"478\" height=\"227\" /></a></figure>\n\n\n\n<p>ลองนำไปประยุกต์ใช้งานดูครับ<br />ว่ารูปแบบไหนที่เหมาะสมในแต่ละ use case ของเรา</p>\n\n\n\n<p></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"87382e9368f63a7a3d19719251f5c76d8c4c4e8637aa72f796bd738795350d26","category":"Thai"}