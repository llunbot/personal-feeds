{"title":"AWS Lambda turns ten – looking back and looking ahead","link":"https://aws.amazon.com/blogs/aws/aws-lambda-turns-ten-the-first-decade-of-serverless-innovation/","date":1731954230000,"content":"<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/06/l_code_snip_2024_1.png\" width=\"452\" height=\"225\" />I have a very vague memory of a 2013-era meeting with my then-colleague <a href=\"https://www.linkedin.com/in/timawagner/\">Tim Wagner</a>. The term serverless did not exist, but we chatted about various ways to allow developers to focus on code instead of on infrastructure. At some point, I recall throwing my arms skyward and indicating that it would be cool to simply toss the code into the air and have the cloud grab, store, and run it. After many more such meetings, Tim wrote a PRFAQ proposing that we build a platform that did just that, and in 2014 I was able to announce <a href=\"https://aws.amazon.com/blogs/aws/run-code-cloud/\">AWS Lambda – Run Code in the Cloud</a>.</p> \n<p><span><strong>From Startup to Enterprise</strong></span><br /> It is often the case that startups, with no installed base to worry about and the need to innovate, are the first to take a chance on something new such as Lambda. While that certainly did happen, I was pleasantly surprised to find that established companies—up to and including enterprises—were just as quick to jump in. After a bit of experimentation, they quickly found ways to build event-driven applications that supported critical internal use cases. I took this as an early indicator that Lambda would be a success. It was easy to see how quickly our customers felt a new sense of empowerment: they could move from idea to implementation, and from there to realizing business value, more quickly than ever, while still building their systems in a scalable and composable way.</p> \n<p>Today, over 1.5 million Lambda users collectively make tens of trillion function <a href=\"https://docs.aws.amazon.com/lambda/latest/api/API_Invoke.html\">invocations</a> per month. These customers use Lambda for file processing, stream processing (in conjunction with <a href=\"https://aws.amazon.com/kinesis/\">Amazon Kinesis</a> and/or <a href=\"https://aws.amazon.com/msk\">Amazon MSK</a>), web applications, IoT backends, mobile backends (often using <a href=\"http://aws.amazon.com/apigateway\">Amazon API Gateway</a> and <a href=\"https://aws-amplify.github.io/\">AWS Amplify</a> as well) and to support and power many other use cases.</p> \n<p><span><strong>The First Decade of Serverless Innovation</strong></span><br /> <img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/07/l_calendar_1.png\" width=\"452\" height=\"452\" />Let’s roll back the calendar and take a look at a few of the more significant Lambda launches of the past decade:</p> \n<p><strong>2014</strong> – The preview launch of <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> ahead of <a href=\"https://reinvent.awsevents.com/\">AWS re:Invent</a> 2014 with support for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-nodejs.html\">Node.js</a> and the ability to respond to event triggers from S3 buckets, DynamoDB tables, and Kinesis streams.</p> \n<p><strong>2015</strong> – <a href=\"https://aws.amazon.com/blogs/aws/aws-lambda-update-production-status-and-a-focus-on-mobile-apps/\">General availability</a>, use of <a href=\"https://aws.amazon.com/sns/\">Amazon Simple Notification Service (Amazon SNS)</a> notifications as triggers, and support for Lambda functions <a href=\"https://aws.amazon.com/blogs/aws/aws-lambda-update-run-java-code-in-response-to-events/\">written in Java</a>.</p> \n<p><strong>2016</strong> – Support for <a href=\"https://aws.amazon.com/blogs/aws/dynamodb-update-triggers-streams-lambda-cross-region-replication-app/\">DynamoDB Streams</a>, Support for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-python.html\">Python</a>, and an increase in the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-timeout.html\">function duration</a> to 5 minutes (this was later raised to 15 minutes)<strong>.</strong> Access to <a href=\"https://aws.amazon.com/blogs/aws/aws-lambda-update-python-vpc-increased-function-duration-scheduling-and-more/\">resources in a VPC</a>, the power to<a href=\"https://aws.amazon.com/blogs/aws/amazon-aurora-update-call-lambda-functions-from-stored-procedures-load-data-from-s3/\"> call Lambda functions</a> from Amazon Aurora stored procedures, <a href=\"https://aws.amazon.com/blogs/aws/new-for-aws-lambda-environment-variables-and-serverless-application-model/\">environment variables</a>, and the <a href=\"https://github.com/awslabs/serverless-application-model\">Serverless Application Model</a>. This year also saw the <a href=\"https://aws.amazon.com/blogs/aws/new-aws-step-functions-build-distributed-applications-using-visual-workflows/\">introduction</a> of Step Functions, which gave you the power to compose multiple Lambda functions to build more complex applications.</p> \n<p><strong>2017</strong> – <a href=\"https://aws.amazon.com/blogs/aws/aws-lambda-support-for-aws-x-ray/\">Support for AWS X-Ray</a>, launches of <a href=\"https://aws.amazon.com/blogs/aws/new-aws-sam-local-beta-build-and-test-serverless-applications-locally/\">AWS SAM Local</a> and the <a href=\"https://aws.amazon.com/blogs/aws/aws-serverless-app-repo/\">Serverless Application Repository</a>.</p> \n<p><strong>2018</strong> – <a href=\"https://aws.amazon.com/blogs/aws/aws-lambda-adds-amazon-simple-queue-service-to-supported-event-sources/\">Support for Amazon SQS</a> as an event trigger, the power to <a href=\"https://aws.amazon.com/blogs/aws/cloudformation-macros/\">Extend AWS CloudFormation with Lambda-powered macros</a>, and the ability to <a href=\"https://aws.amazon.com/blogs/aws/new-for-aws-lambda-use-any-programming-language-and-share-common-components/\">write your Lambda functions in any programming language</a>.</p> \n<p><strong>2019</strong> – Support for <a href=\"https://aws.amazon.com/blogs/aws/new-provisioned-concurrency-for-lambda-functions/\">provisioned concurrency</a> to give you additional control over performance.</p> \n<p><strong>2020</strong> – Access to Savings Plans to<a href=\"https://aws.amazon.com/blogs/aws/savings-plan-update-save-up-to-17-on-your-lambda-workloads/\"> save up to 17%</a>, the ability for Lambda functions to <a href=\"https://aws.amazon.com/blogs/aws/new-a-shared-file-system-for-your-lambda-functions/\">access a shared file system</a>, support for AWS PrivateLink to <a href=\"https://aws.amazon.com/blogs/aws/new-use-aws-privatelink-to-access-aws-lambda-over-private-aws-network/\">access your functions over a private network</a>, <a href=\"https://aws.amazon.com/blogs/aws/new-code-signing-a-trust-and-integrity-control-for-aws-lambda/\">code signing</a>, billing at <a href=\"https://aws.amazon.com/blogs/aws/new-for-aws-lambda-1ms-billing-granularity-adds-cost-savings/\">1 ms granularity</a>, functions that can <a href=\"https://aws.amazon.com/blogs/aws/new-for-aws-lambda-functions-with-up-to-10-gb-of-memory-and-6-vcpus/\">use up to 10 GB</a> of memory and 6 vCPUs, and <a href=\"https://aws.amazon.com/blogs/aws/new-for-aws-lambda-container-image-support/\">support for container images</a>.</p> \n<p><strong>2021</strong> – <a href=\"https://aws.amazon.com/blogs/aws/introducing-amazon-s3-object-lambda-use-your-code-to-process-data-as-it-is-being-retrieved-from-s3/\">Amazon S3 Object Lambda</a> to let you process data as it is being retrieved from S3, <a href=\"https://aws.amazon.com/blogs/aws/getting-started-with-using-your-favorite-operational-tools-on-aws-lambda-extensions-are-now-generally-available/\">AWS Lambda Extensions</a>, support for <a href=\"https://aws.amazon.com/blogs/aws/aws-lambda-functions-powered-by-aws-graviton2-processor-run-your-functions-on-arm-and-get-up-to-34-better-price-performance/\">running Lambda functions on Graviton processors</a>.</p> \n<p><strong>2022</strong> – Support for up to <a href=\"https://aws.amazon.com/blogs/aws/aws-lambda-now-supports-up-to-10-gb-ephemeral-storage/\">10 GB of ephemeral storage</a> per function invocation, <a href=\"https://aws.amazon.com/blogs/aws/announcing-aws-lambda-function-urls-built-in-https-endpoints-for-single-function-microservices/\">HTTPS endpoints</a> for Lambda functions, and <a href=\"https://aws.amazon.com/blogs/aws/new-accelerate-your-lambda-functions-with-lambda-snapstart/\">Lambda SnapStart</a> to make function invocation faster and more predictable.</p> \n<p><strong>2023</strong> – Amazon S3 Object Lambda <a href=\"https://aws.amazon.com/blogs/aws/new-use-amazon-s3-object-lambda-with-amazon-cloudfront-to-tailor-content-for-end-users/\">support for CloudFront</a>, <a href=\"https://aws.amazon.com/es/blogs/compute/introducing-aws-lambda-response-streaming/\">response streaming</a>, and <a href=\"https://aws.amazon.com/blogs/aws/aws-lambda-functions-now-scale-12-times-faster-when-handling-high-volume-requests/\">12x faster function scaling</a> when handling an unpredictable volume of requests.</p> \n<p><strong>2024</strong> -New controls to make it easier to <a href=\"https://aws.amazon.com/about-aws/whats-new/2024/07/aws-lambda-search-filter-aggregate-function-logs/\">capture and search</a> your Lambda function logs, SnapStart support for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html\">Java functions that use the ARM64 architecture</a>, <a href=\"https://aws.amazon.com/blogs/compute/aws-lambda-introduces-recursive-loop-detection-apis/\">recursive loop detection</a>, a <a href=\"https://aws.amazon.com/blogs/compute/introducing-an-enhanced-in-console-editing-experience-for-aws-lambda/\">new console editor</a> based on VS Code, and an <a href=\"https://aws.amazon.com/blogs/compute/introducing-an-enhanced-local-ide-experience-for-aws-lambda-developers/\">enhanced local IDE experience</a>. The last two launches were designed to improve the developer experience by making it easier to build, test, debug, and deploy Lambda functions.</p> \n<p>Again, this is just a subset of what we have launched. If you want to find even more launches, check out the <a href=\"https://aws.amazon.com/blogs/aws/category/compute/aws-lambda/\">Lambda category</a> tag and search the <a href=\"https://aws.amazon.com/new/?whats-new-content-all.sort-by=item.additionalFields.postDateTime&amp;whats-new-content-all.sort-order=desc&amp;awsf.whats-new-categories=*all&amp;whats-new-content-all.q=lambda&amp;whats-new-content-all.q_operator=AND\">What’s New for Lambda</a>.</p> \n<p><span><strong>The Next Decade of Serverless<img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/07/lambda_old_man_2.png\" width=\"452\" height=\"452\" /><br /> </strong></span>From the start, the vision for severless has been about helping developers to move from idea to business value more quickly. With that in mind, here are a couple of trends that seem clear to me as I look at Lambda’s direction over the first decade:</p> \n<p><strong>Default Choice</strong> – The serverless model is definitely here to stay, and will likely become the default operating model over time.</p> \n<p><strong>Continued Shift Toward Composability</strong> – Over time I can see that serverless applications will continue to make increasing use of reusable, prebuilt components. Aided by AI-powered development tools, a lot of new code will focus on connecting exiting components together in new and powerful ways. This will also boost consistency and reliability across applications.</p> \n<p><strong>Automated, AI-Optimized Infrastructure</strong> <strong>Management</strong>– We have already seen that Lambda reduces the amount of time and effort needed for managing infrastructure. Going forward, I can see that Machine Learning and other forms of AI will help to optimize costs and performance by allocating resources optimally with minimal human intervention. Applications will run on infrastructure that is automated, self-healing, and fault tolerant.</p> \n<p><strong>Extensibility and Integration</strong> – As a consequence of the two previous items, applications should be able to grow and adapt to changing conditions more easily than ever.</p> \n<p><strong>Security</strong> – Automated infrastructure management, real-time monitoring and other forms of threat detection, and AI-assisted remediation will work together to make serverless applications even more secure.</p> \n<p><span><strong>Some Lambda Resources</strong></span><br /> If you are already using Lambda to build serverless apps, great! If you are ready to get started, here are some resources to help out:</p> \n<p><strong>Serverless Training</strong> – Enroll in the free <a href=\"https://explore.skillbuilder.aws/learn/public/learning_plan/view/92/serverless-learning-plan?la=cta&amp;cta=topbanner\">Serverless Learning Plan</a> to learn about serverless concepts, common patterns, and best practices. Read the <a href=\"https://d1.awsstatic.com/training-and-certification/ramp-up_guides/Ramp-Up_Guide_Serverless.pdf\">Serverless Ramp-Up Guide,</a> and look at our extensive (in both topic and language) selection of <a href=\"https://explore.skillbuilder.aws/learn/public/catalog/view/4?lasec=tile&amp;tile=dt&amp;ctldoc-catalog-0=field16-_39\">digital training courses</a> and in-person <a href=\"https://aws.amazon.com/training/classroom/?laar=sec&amp;sec=ct\">classroom training</a>:</p> \n<p><a href=\"https://explore.skillbuilder.aws/learn/public/catalog/view/4?lasec=tile&amp;tile=dt&amp;ctldoc-catalog-0=field16-_39\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/07/lambda_dig_training_1.png\" width=\"694\" height=\"497\" /></a></p> \n<p><strong>Case Studies</strong> – Review the <a href=\"https://aws.amazon.com/serverless/customers/?customer-references-cards.sort-by=item.additionalFields.sortDate&amp;customer-references-cards.sort-order=desc&amp;awsf.content-type=*all&amp;awsf.customer-references-location=*all&amp;awsf.customer-references-industry=*all&amp;awsf.customer-references-segment=*all&amp;awsf.customer-references-product=*all\">AWS Serverless Customer Success</a> stories to learn how AWS customers are building and innovating with Lambda and other serverless technologies.</p> \n<p><strong>re:Invent 2024 Sessions</strong> -Browse the re:Invent 2024 Session Catalog to find nearly 200 sessions focused on <a href=\"https://registration.awsevents.com/flow/awsevents/reinvent24/public/page/catalog?trk=www.google.com&amp;search.topic=1714148249632020q301\">Serverless Compute &amp; Containers</a>:</p> \n<p><a href=\"https://registration.awsevents.com/flow/awsevents/reinvent24/public/page/catalog?trk=www.google.com&amp;search.topic=1714148249632020q301\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/07/lambda_rein2024_sess_1.png\" width=\"694\" height=\"527\" /></a></p> \n<p><strong>Podcast</strong> – Listen to Episode 137 (<a href=\"https://developers.podcast.go-aws.com/web/podcasts/episode_137/index.html\">AWS Lambda: A Decade of Transformation</a>) of the AWS Developers Podcast to hear <a href=\"https://www.linkedin.com/in/marc-brooker-b431772b/\">Marc Brooker</a> and <a href=\"https://www.linkedin.com/in/julianrwood/?originalSubdomain=uk\">Julian Wood</a> discuss the origins, evolution, and impact of Lambda.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/09/lambda_books_300_1.png\" width=\"300\" height=\"267\" /><strong>New Books</strong> – Take a peek at some of the newest books on serverless development and architecture:</p> \n<ul> \n <li><a href=\"https://www.amazon.com/Serverless-Development-AWS-Enterprise-Scale-Solutions/dp/1098141938\">Serverless Development on AWS: Building Enterprise-Scale Serverless Solutions</a></li> \n <li><a href=\"https://www.amazon.com/Advanced-AWS-Lambda-Comprehensive-Serverless/dp/B0DLWZFVKN\">Advanced AWS Lambda: Comprehensive Guide to Serverless Computing </a></li> \n <li><a href=\"https://www.amazon.com/Building-Modern-Applications-Serverless-Comprehensive-ebook/dp/B0DKTVV3WS\">Building Modern Applications with Serverless</a></li> \n <li><a href=\"https://www.amazon.com/Event-Driven-Architecture-AWS-Lambda-SNS/dp/B0DL5JHN67\">Event-Driven Architecture with AWS Lambda and SNS</a></li> \n <li><a href=\"https://www.amazon.com/SERVERLESS-MICROSERVICES-AWS-Microservices-Architectures/dp/B0DKTJ3XK4\">Serverless Microservices with AWS</a></li> \n <li><a href=\"https://www.amazon.com/Mastering-Serverless-Architectures-Lambda-Comprehensive/dp/B0DJD6S9JN\">Mastering Serverless Architectures with AWS Lambda</a></li> \n</ul> \n<p>I hope that you have enjoyed this not-so-brief look at the past, present, and future of <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a>. Leave me a comment and let me know what you think!</p> \n<p></p>\n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>\n<p></p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"5dcdf5b31149084eba802ad20408937b1aaca6e5521c615baa3dea0d35b25ebd","category":"Tech"}