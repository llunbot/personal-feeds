{"title":"Boundary LDAP authentication","link":"https://www.hashicorp.com/blog/boundary-ldap-authentication","date":1689177600000,"content":"<p>HashiCorp Boundary 0.13 includes several important preview features that enable organizations to integrate their directories directly with Boundary via the <a href=\"https://en.wikipedia.org/wiki/Lightweight_Directory_Access_Protocol\">LDAP protocol</a>. These previewed features will be initially enabled by the Boundary CLI, API, and SDK, as well as in HashiCorp Terraform, with admin UI support to come in the near future. </p>\n\n<p>This post dives into more detail about Boundary’s support for LDAP auth method.</p>\n\n<h2>What’s new</h2>\n\n<p>Organizations store usernames, passwords, email addresses, and groups, along with other data in their directories (popular directory servers include Active Directory and Free IPA). LDAP is an open, vendor-neutral application protocol for accessing and maintaining that directory data.</p>\n\n<p>Boundary now includes an LDAP auth method that allows Boundary to delegate authentication to an LDAP directory. The first time a user successfully authenticates using an LDAP auth method, a new LDAP account is created using the user’s account login name. If groups are enabled for an LDAP auth method, then each time a user authenticates, their account’s group memberships are updated in Boundary. LDAP managed groups allow administrators to assign roles within Boundary based on an LDAP account’s group memberships.  </p>\n\n<h2>Keeping UX familiar</h2>\n\n<p>Creating a Boundary LDAP auth method is just like creating and interacting with other auth method types in Boundary. If you’re already familiar with OIDC auth methods, accounts, and managed groups, you’ll find the same domain types for the LDAP auth method and the same sorts of workflows enabled.</p>\n\n<p>Also, if you're familiar with Vault's LDAP auth method, then you’ll see we’ve made every attempt to align <a href=\"https://github.com/hashicorp/boundary/blob/auth-ldap-llb/website/content/docs/concepts/domain-model/auth-methods.mdx\">Boundary’s LDAP</a> and <a href=\"https://developer.hashicorp.com/vault/api-docs/auth/ldap\">Vault’s LDAP</a> auth method capabilities and configuration parameters. For example, both Boundary and Vault support Active Directory’s <a href=\"https://learn.microsoft.com/en-us/azure/active-directory/hybrid/plan-connect-userprincipalname\">UserPrincipalName</a> for login names and retrieving an account’s group membership from Active Directory’s <a href=\"https://learn.microsoft.com/en-us/windows/win32/adschema/a-tokengroups\">Token Groups</a> attribute. </p>\n\n<p>We’ve also given back to the community by open sourcing LDAP client authentication in this GitHub repository: <a href=\"https://github.com/hashicorp/cap/tree/main/ldap\">github.com/hashicorp/cap/ldap</a>. You can use it to integrate your services with LDAP servers for authentication, account, and group information. </p>\n\n<h2>Command-line demo</h2>\n\n<p>As an introduction to Boundary’s new LDAP capabilities, we’ve put together a DIY command-line demo where you’ll learn how to:</p>\n\n<ul>\n<li>Create an LDAP auth method</li>\n<li>Set that new LDAP auth method as a primary auth method for the global scope</li>\n<li>Create an LDAP managed group</li>\n<li>Authenticate a user using LDAP</li>\n</ul>\n\n<p>This demonstration uses a <a href=\"https://www.forumsys.com/2022/05/10/online-ldap-test-server/\">public read-only online LDAP test server</a>. This test server allows you to authenticate (bind) as individual users and includes group membership data for those users. The users’ login names are associated with famous scientists, and our examples use the login name of <code>einstein</code>.  All users in this test server have the same password: <code>password</code>. </p>\n\n<p>If you’d like to use your own development LDAP server, you’ll need the appropriate configuration information. An exhaustive list, along with brief descriptions, of configuration parameters is here: <a href=\"https://github.com/hashicorp/boundary/blob/auth-ldap-llb/website/content/docs/concepts/domain-model/auth-methods.mdx#ldap-auth-method-attributes\">LDAP Auth Method Attributes</a>.</p>\n\n<p>The following demonstration commands depend on a locally running <code><a href=\"https://developer.hashicorp.com/boundary/tutorials/oss-getting-started/oss-getting-started-dev\">boundary dev</a></code> environment. If you’ve already got Boundary installed locally, then you can simply run it in a terminal using:</p>\n\n<pre><code>boundary dev \n</code></pre>\n\n<p>The first step is to <a href=\"https://developer.hashicorp.com/boundary/tutorials/oss-getting-started/oss-getting-started-dev#login-to-the-boundary-console\">authenticate as an admin user</a> via the dev environment’s preconfigured password auth method:</p>\n<pre><code>boundary authenticate password \\\n--auth-method-id ampw_1234567890 \\  \n--login-name admin</code></pre><p>At this point, you’re ready to create an LDAP auth method in the global scope (this command requires that you’ve written <code>password</code> into a local file name <code>bind-pass.txt</code>):</p>\n<pre><code>boundary auth-methods create ldap \\\n-urls \"ldap://ldap.forumsys.com\" \\\n-bind-dn \"cn=read-only-admin,dc=example,dc=com\" \\\n-bind-password file://bind-pass.txt \\\n-user-dn \"dc=example,dc=com\" \\\n-user-attr \"uid\" \\\n-group-dn \"dc=example,dc=com\" \\\n-state active-public \\\n-enable-groups</code></pre><p>Set the <code>BOUNDARY_AUTH_METHOD_ID</code> environment variable, so you can use it in the commands that follow:</p>\n<pre><code>export BOUNDARY_AUTH_METHOD_ID=</code></pre><p>Make this new LDAP auth method the primary auth method for the global scope, so a user will be automatically created when a new LDAP account successfully authenticates:</p>\n<pre><code>boundary scopes update \\\n-id global \\\n-primary-auth-method-id $BOUNDARY_AUTH_METHOD_ID\n</code></pre><p>Create an LDAP managed group named <code>test-grp</code> for the new LDAP auth method that will include all LDAP accounts that belong to the <code>Scientists</code> group:</p>\n<pre><code>boundary managed-groups create ldap \\\n-name test-grp \\\n-group-names Scientists</code></pre><p>Authenticate with an LDAP account:</p>\n<pre><code>boundary authenticate ldap -login-name einstein</code></pre><p>Congratulations! You’ve successfully integrated Boundary with an LDAP server for authentication and managed groups.</p>\n\n<h2>Learn more</h2>\n\n<p>You can learn more about Boundary’s new LDAP capabilities by exploring the domain documentation:</p>\n\n<ul>\n<li><a href=\"https://github.com/hashicorp/boundary/blob/auth-ldap-llb/website/content/docs/concepts/domain-model/auth-methods.mdx#auth-methods\">Auth methods</a></li>\n<li><a href=\"https://github.com/hashicorp/boundary/blob/auth-ldap-llb/website/content/docs/concepts/domain-model/managed-groups.mdx\">Managed groups</a></li>\n<li><a href=\"https://github.com/hashicorp/boundary/blob/auth-ldap-llb/website/content/docs/concepts/domain-model/accounts.mdx\">Accounts</a></li>\n</ul>\n\n<p>You can also explore the new Boundary LDAP Terraform resources:</p>\n\n<ul>\n<li><a href=\"https://github.com/hashicorp/terraform-provider-boundary/blob/jimlambrt-auth-ldap/docs/resources/auth_method_ldap.md\">boundary<em>auth</em>method_ldap (Resource)</a></li>\n<li><a href=\"https://github.com/hashicorp/terraform-provider-boundary/blob/jimlambrt-auth-ldap/docs/resources/managed_group_ldap.md\">boundary<em>managed</em>group_ldap (Resource)</a></li>\n<li><a href=\"https://github.com/hashicorp/terraform-provider-boundary/blob/jimlambrt-auth-ldap/docs/resources/account_ldap.md\">boundary<em>account</em>ldap (Resource)</a></li>\n</ul>\n","author":"Jim Lambert","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"c9cdc40030314733287b736ba2fe8c96e824e0d77c7cf9c27908a48d48464b0c","category":"Tech"}