{"title":"Terraform Adds Support for GKE Autopilot","link":"https://www.hashicorp.com/blog/terraform-adds-support-for-gke-autopilot","date":1639501200000,"content":"<p>We are pleased to announce support for <a href=\"http://cloud.google.com/kubernetes-engine\">Google Kubernetes Engine</a> (GKE) Autopilot in HashiCorp Terraform. Released in February 2021, <a href=\"https://cloud.google.com/blog/products/containers-kubernetes/introducing-gke-autopilot\">GKE Autopilot</a> is a new mode of operation for GKE that automates node configuration and management. GKE Autopilot gives you a hands-off approach to using Kubernetes on Google Cloud by eliminating node management operations and maximizing your cluster efficiency. This post will detail what GKE Autopilot does, and how to use it with Terraform.</p>\n<h2><a href=\"#what-gke-autopilot-does\">»</a><a></a>What GKE Autopilot Does</h2>\n<p>Users can create a GKE cluster in standard mode or autopilot mode. The GKE standard mode is beneficial if you have a fair amount of experience managing the data plane of a Kubernetes environment and you would like to maintain control of resource consumption. On the other hand, GKE Autopilot provides management of nodes, pre-configuration of clusters, auto-scaling, auto-upgrades and security by Google Cloud so you can focus just on the development and not on the underlying infrastructure.</p>\n<p>GKE Autopilot provides:</p>\n<ol>\n<li>A completely automated Kubernetes platform</li>\n<li>Auto health-monitoring, checks, compute calculation, and auto-repair</li>\n<li>Efficient per-pod billing</li>\n</ol>\n<p>Autopilot helps shift several site reliability engineering (SRE) responsibilities from your team to Google Cloud’s, specifically for nodes and control planes where they help with cluster provisioning and maintenance. A comparison of both standard and autopilot modes can be found in <a href=\"https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview?authuser=3&amp;_ga=2.4785142.-452500305.1608062772#comparison\">Google Cloud’s GKE documentation</a>.</p>\n<h2><a href=\"#how-to-use-gke-autopilot-with-hashicorp-terraform\">»</a><a></a>How to Use GKE Autopilot with HashiCorp Terraform</h2>\n<p>GKE Autopilot can be enabled for your Kubernetes cluster by adding the variable <code>enable_autopilot = true</code> to your GKE Terraform configuration.</p>\n<p>In order to use the GKE Autopilot, you will need:</p>\n<ol>\n<li>A Google Cloud account</li>\n<li>A configured <a href=\"https://cloud.google.com/sdk/gcloud\">gcloud SDK</a></li>\n<li><a href=\"https://kubernetes.io/docs/reference/kubectl/overview/\">Kubectl</a></li>\n<li>The <a href=\"https://github.com/hashicorp/terraform-provider-google\">Google Cloud Terraform provider</a> version 3.63.0 or higher</li>\n</ol>\n<p>Here is an example workflow for enabling GKE Autopilot on a Kubernetes cluster using Terraform:</p>\n<p>First, create a Terraform file that contains the GKE cluster.</p>\n<p><code>Gke.tf</code>:</p>\n<p>Write out a Terraform configuration to provision a GKE Autopilot cluster using <code><a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster\">google_container_cluser</a></code> and enable Autopilot for that cluster. Please note that while using Autopilot, you do not have to specify the number of nodes required; they will be automatically calculated for you.</p><pre><code>variable \"gke_username\" {\n  default     = \"\"\n  description = \"gke username\"\n}\n \nvariable \"gke_password\" {\n  default     = \"\"\n  description = \"gke password\"\n}\n \n# GKE cluster\nresource \"google_container_cluster\" \"primary\" {\n  name     = \"${var.project_id}-gke\"\n  location = var.region\n \n  network    = google_compute_network.vpc.name\n  subnetwork = google_compute_subnetwork.subnet.name\n \n# Enabling Autopilot for this cluster\n  enable_autopilot = true\n}</code></pre><p>Make sure to choose the correct version of the Google Cloud Terraform provider for your cluster:  It must be 3.63.0, or later. If needed, you can update the provider using <code>terraform init -upgrade</code>.</p>\n<p><code>Versions.tf</code>:</p>\n<p>Set the Terraform version to at least 0.14 and the provider version to 3.63.0 or higher.</p><pre><code>terraform {\n  required_providers {\n    google = {\n      source  = \"hashicorp/google\"\n      version = \"3.63.0\"\n    }\n  }\n \n  required_version = \"~&gt; 0.14\"\n}</code></pre><p>Replace the values in your <code>terraform.tfvars</code> file with your <code>project_id</code> and <code>region</code>. Terraform will use these values to target your project when provisioning your resources. Your <code>terraform.tfvars</code> file should look like this:</p><pre><code>project_id = \"[YOUR-PROJECTID-HERE]\"\nregion     = \"us-central1\"</code></pre><p>After you have saved your customized variables file, initialize your Terraform workspace, which will download the provider and initialize it with the values mentioned in <code>terraform.tfvars</code> file.</p><pre><code>learn-terraform-provision-gke-autopiloy-cluster % terraform init\n \nInitializing the backend...\n \nInitializing provider plugins...\n- Finding hashicorp/google versions matching \"3.63.0\"...\n- Installing hashicorp/google v3.63.0...\n- Installed hashicorp/google v3.63.0 (self-signed, key ID 34365D9472D7468F)\n \nTerraform has been successfully initialized!\n \nYou may now begin working with Terraform. Try running \"terraform plan\" to see\nany changes that are required for your infrastructure. All Terraform commands\nshould now work.\n \nIf you ever set or change modules or backend configuration for Terraform,\nrerun this command to reinitialize your working directory. If you forget, other\ncommands will detect it and remind you to do so if necessary.</code></pre><p>To provision your GKE Autopilot cluster, in your initialized directory, run<code> terraform apply</code> and review the planned actions. Your terminal output should indicate the plan is running and what resources will be created.</p><pre><code>learn-terraform-provision-gke-cluster % terraform apply\n \nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n \nTerraform will perform the following actions:\n \nPlan: 3 to add, 0 to change, 0 to destroy.</code></pre><p>You can see this <code>terraform apply</code> will provision a VPC, subnet, and GKE Autopilot cluster. Confirm the <code>apply</code> with a <code>yes</code>. This process should take approximately 10 minutes. Upon successful application, your terminal prints the outputs defined in <code>vpc.tf</code> and <code>gke.tf</code>.</p><pre><code>Apply complete! Resources: 3 added, 0 changed, 0 destroyed.\n \nOutputs:\n \nkubernetes_cluster_host = \"34.136.240.175\"\nkubernetes_cluster_name = \"gkeautopilot2-gke\"\nproject_id = \"gkautopilot2\"\nregion = \"us-central1\"</code></pre><p>Once the cluster is deployed, you can review that it is live in your Google Cloud account:</p><img src=\"https://www.datocms-assets.com/2885/1639437192-gkeautopilot1.png\" /><p>The information page shows settings that can and can’t be changed. In the automation page, you can adjust the maintenance window after cluster creation.</p><img src=\"https://www.datocms-assets.com/2885/1639437226-gkeautopilot2.png\" /><p>GKE Autopilot is now active and providing automated node management, improved utilization, security, and reduced cost of maintenance. Users can leverage Google Cloud’s SRE tooling to maintain their nodes and pods.</p>\n<p>Google Cloud offers a 99.95% <a href=\"https://cloud.google.com/kubernetes-engine/sla\">SLA</a> for the control plane of its GKE Autopilot clusters, and a 99.9% SLA for GKE Autopilot pods, while reducing the overall operational load required for managing the clusters.</p>\n<h2><a href=\"#learn-more\">»</a><a></a>Learn More</h2>\n<p>For more information on how to get started with GKE using HashiCorp Terraform, please visit our tutorial on how to <a href=\"https://learn.hashicorp.com/tutorials/terraform/gke\">Provision a GKE Cluster Using Terraform</a> or visit our developer documentation for detailed information on <a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/using_gke_with_terraform\">Using GKE with Terraform</a>.</p>\n<p>We would love to hear your feedback on this feature. You can post bugs and feature requests for this provider by opening an <a href=\"https://github.com/hashicorp/terraform-provider-google\">issue on the GitHub Repository</a>.</p>","author":"Tejitha Raju","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"e39fdff073c107dc02040cf240fdea49eca759f27197c1728013debb5d3bae09","category":"Tech"}