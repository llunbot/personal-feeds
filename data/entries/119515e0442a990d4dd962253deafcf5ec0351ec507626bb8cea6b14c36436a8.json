{"title":"AWS CodeBuild for macOS adds support for Fastlane","link":"https://aws.amazon.com/blogs/aws/codebuild-for-macos-adds-support-for-fastlane/","date":1738796435000,"content":"<p>Iâ€™m pleased to announce the availability of <a href=\"https://fastlane.tools/\">Fastlane</a> in your <a href=\"https://aws.amazon.com/codebuild/\">AWS CodeBuild</a> for macOS environments. AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces ready-to-deploy software packages.</p> \n<p>Fastlane is an open source tool suite designed to automate various aspects of mobile application development. It provides mobile application developers with a centralized set of tools to manage tasks such as code signing, screenshot generation, beta distribution, and app store submissions. It integrates with popular continuous integration and continuous deployment (CI/CD) platforms and supports both iOS and Android development workflows. Although Fastlane offers significant automation capabilities, developers may encounter challenges during its setup and maintenance. Configuring Fastlane can be complex, particularly for teams unfamiliar with the syntax and package management system of Ruby. Keeping Fastlane and its dependencies up to date requires ongoing effort, because updates to mobile platforms or third-party services may necessitate adjustments to existing workflows.</p> \n<p>When <a href=\"https://aws.amazon.com/blogs/aws/add-macos-to-your-continuous-integration-pipelines-with-aws-codebuild/?trk=4b29643c-e00f-4ab6-ab9c-b1fb47aa1708&amp;sc_channel=el\">we introduced CodeBuild for macOS in August 2024</a>, we knew that one of your challenges was to install and maintain Fastlane in your build environment. Although it was possible to manually install Fastlane in a custom build environment, at AWS, <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/framework/cost-dp.html?trk=4b29643c-e00f-4ab6-ab9c-b1fb47aa1708&amp;sc_channel=el\">we remove the undifferentiated heaving lifting from your infrastructure</a> so you can spend more time on the aspects that matter for your business. Starting today, Fastlane is installed by default, and you can use the familiar command <code>fastlane build</code>in your <code>buildspec.yaml</code> file.</p> \n<p><span><strong>Fastlane and code signing<br /> </strong></span>To distribute an application on the App Store, developers must sign their binary with a private key generated on the Apple Developer portal. This private key, along with the certificate that validates it, must be accessible during the build process. This can be a challenge for development teams because they need to share the development private key (which allows deployment on selected test devices) among team members. Additionally, the distribution private key (which enables publishing on the App Store) must be available during the signing process before uploading the binary to the App Store.</p> \n<p>Fastlane is a versatile build system in that it also helps developers with the management of development and distribution keys and certificates. Developers can use <code>fastlane match</code> to share signing materials in a team and make them securely and easily accessible on individual developersâ€™ machines and on the CI environment. <code>match</code> allows the storage of private keys, the certificates, and the mobile provisioning profiles on a secured share storage. It makes sure that the local build environment, whether itâ€™s a developer laptop or a server machine in the cloud, stays in sync with the shared storage. At build time, it securely downloads the required certificates to sign your app and configures the build machine to allow the <code>codesign</code> utility to pick them up.</p> \n<p><code>match</code> allows the sharing of signing secrets through GitHub, GitLab, Google Cloud Storage, Azure DevOps, and <a href=\"https://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a>.</p> \n<p>If you already use one of these and youâ€™re migrating your projects to CodeBuild, you donâ€™t have much to do. You only need to make sure your CodeBuild build environment has access to the shared storage (see step 3 in the demo).</p> \n<p><span><strong>Letâ€™s see how it works<br /> </strong></span>If youâ€™re new to Fastlane or CodeBuild, letâ€™s see how it works.</p> \n<p>For this demo, I start with <a href=\"https://github.com/sebsto/amplify-ios-getting-started?trk=4b29643c-e00f-4ab6-ab9c-b1fb47aa1708&amp;sc_channel=el\">an existing iOS project</a>. The project is already configured to be built on CodeBuild. You can refer to my previous blog post, <a href=\"https://aws.amazon.com/blogs/aws/add-macos-to-your-continuous-integration-pipelines-with-aws-codebuild/?trk=4b29643c-e00f-4ab6-ab9c-b1fb47aa1708&amp;sc_channel=el\">Add macOS to your continuous integration pipelines with AWS CodeBuild</a>, to learn more details.</p> \n<p>Iâ€™ll show you how to get started in three steps:</p> \n<ul> \n <li>Import your existing signing materials to a shared private GitHub repository</li> \n <li>Configure <code>fastlane</code> to build and sign your project</li> \n <li>Use <code>fastlane</code>with CodeBuild</li> \n</ul> \n<p><strong>Step 1: Import your signing materials</strong></p> \n<p>Most of the <code>fastlane</code> <a href=\"https://docs.fastlane.tools/actions/match/?trk=4b29643c-e00f-4ab6-ab9c-b1fb47aa1708&amp;sc_channel=el\">documentation</a> I read explains how to create a new key pair and a new certificate to get started. Although this is certainly true for new projects, in real life, you probably already have your project and your signing keys. So, the first step is to import these existing signing materials.</p> \n<p>Apple App Store uses different keys and certificates for development and distribution (there are also ad hoc and enterprise certificates, but these are outside the scope of this post). You must have three files for each usage (thatâ€™s a total of six files):</p> \n<ul> \n <li>A <code>.mobileprovision</code> file that you can create and download from the Apple developer console. The provisioning profile links your identity, the app identity, and the entitlements the app might have.</li> \n <li>A <code>.cer</code> file, which is the certificate emitted by Apple to validate your private key. You can download this from the <a href=\"https://developer.apple.com/account/resources/certificates/list\">Apple Developer portal</a>. Select the certificate, then select <strong>Download</strong>.</li> \n <li>A <code>.p12</code> file, which contains your private key. You can download the key when you create it in the <a href=\"https://developer.apple.com/account/resources/certificates/add\">Apple Developer portal</a>. If you didnâ€™t download it but have it on your machine, you can export it from the Apple Keychain app. Note that the KeyChain.app is hidden in macOS 15.x. You can open it with <code>open /System/Library/CoreServices/Applications/Keychain\\ Access.app</code>. Select the key you want to export and right click to select <strong>Export.</strong></li> \n</ul> \n<table> \n <tbody> \n  <tr> \n   <td><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/01/31/2025-01-31_17-16-05.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/01/31/2025-01-31_17-16-05-1024x561.png\" alt=\"Export p12 files from Keychain\" width=\"1024\" height=\"561\" /></a></td> \n   <td><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/01/31/2025-01-31_17-17-53.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/01/31/2025-01-31_17-17-53.png\" alt=\"\" width=\"1286\" height=\"450\" /></a></td> \n  </tr> \n </tbody> \n</table> \n<p>When you have these files, create a <code>fastlane/Matchfile</code> file with the following content:</p> \n<pre><code>git_url(\"https://github.com/sebsto/secret.git\")\nstorage_mode(\"git\")\ntype(\"development\")\n# or use appstore to use the distribution signing key and certificate\n# type(\"appstore\")</code></pre> \n<p>Be sure to replace the URL of your GitHub repository and <span><strong>make sure this repository is private</strong></span>. It will serve as a storage for your signing key and certificate.</p> \n<p>Then, I import my existing files with the <code>fastlane match import --type appstore</code> command. I repeat the command for each environment: <code>appstore</code> and <code>development</code>.</p> \n<p>The very first time, <code>fastlane</code> prompts me for my Apple Id username and password. It connects to App Store Connect to verify the validity of the certificates or to create new ones when necessary. The session cookie is stored in <code>~/.fastlane/spaceship/&lt;your apple user id&gt;/cookie</code>.</p> \n<p><code>fastlane match</code> also asks for a password. It uses this password to generate a key to crypt the signing materials on the storage. Donâ€™t forget this password because it will be used at build time to import the signing materials on the build machine.</p> \n<p>Here is the command and its output in full:</p> \n<pre><code> fastlane match import --type appstore\n\n[âœ”] ðŸš€\n[16:43:54]: Successfully loaded '~/amplify-ios-getting-started/code/fastlane/Matchfile' ðŸ“„\n\n+-----------------------------------------------------+\n| Detected Values from './fastlane/Matchfile'         |\n+--------------+--------------------------------------+\n| git_url.     | https://github.com/sebsto/secret.git |\n| storage_mode | git                                  |\n| type         | development                          |\n+--------------+--------------------------------------+\n\n[16:43:54]: Certificate (.cer) path:\n./secrets/sebsto-apple-dist.cer\n[16:44:07]: Private key (.p12) path:\n./secrets/sebsto-apple-dist.p12\n[16:44:12]: Provisioning profile (.mobileprovision or .provisionprofile) path or leave empty to skip\nthis file:\n./secrets/amplifyiosgettingstarteddist.mobileprovision\n[16:44:25]: Cloning remote git repo...\n[16:44:25]: If cloning the repo takes too long, you can use the `clone_branch_directly` option in match.\n[16:44:27]: Checking out branch master...\n[16:44:27]: Enter the passphrase that should be used to encrypt/decrypt your certificates\n[16:44:27]: This passphrase is specific per repository and will be stored in your local keychain\n[16:44:27]: Make sure to remember the password, as you'll need it when you run match on a different machine\n[16:44:27]: Passphrase for Match storage: ********\n[16:44:30]: Type passphrase again: ********\nsecurity: SecKeychainAddInternetPassword &lt;NULL&gt;: The specified item already exists in the keychain.\n[16:44:31]: ðŸ”“ Successfully decrypted certificates repo\n[16:44:31]: Repo is at: '/var/folders/14/nwpsn4b504gfp02_mrbyd2jr0000gr/T/d20250131-41830-z7b4ic'\n[16:44:31]: Login to App Store Connect (sebsto@mac.com)\n[16:44:33]: Enter the passphrase that should be used to encrypt/decrypt your certificates\n[16:44:33]: This passphrase is specific per repository and will be stored in your local keychain\n[16:44:33]: Make sure to remember the password, as you'll need it when you run match on a different machine\n[16:44:33]: Passphrase for Match storage: ********\n[16:44:37]: Type passphrase again: ********\nsecurity: SecKeychainAddInternetPassword &lt;NULL&gt;: The specified item already exists in the keychain.\n[16:44:39]: ðŸ”’ Successfully encrypted certificates repo\n[16:44:39]: Pushing changes to remote git repo...\n[16:44:40]: Finished uploading files to Git Repo [https://github.com/sebsto/secret.git]\n</code></pre> \n<p>I verify that Fastlane imported my signing material to my Git repository.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/01/31/2025-01-31_17-42-52.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/01/31/2025-01-31_17-42-52.png\" alt=\"Fastlane match - github repo after import\" width=\"931\" height=\"356\" /></a></p> \n<p>I can also configure my local machine to use these signing materials during the next build:</p> \n<pre><code>Â» fastlane match appstore \n\n[âœ”] ðŸš€ \n[17:39:08]: Successfully loaded '~/amplify-ios-getting-started/code/fastlane/Matchfile' ðŸ“„\n\n+-----------------------------------------------------+\n|   Detected Values from './fastlane/Matchfile'       |\n+--------------+--------------------------------------+\n| git_url      | https://github.com/sebsto/secret.git |\n| storage_mode | git                                  |\n| type         | development                          |\n+--------------+--------------------------------------+\n\n\n+-------------------------------------------------------------------------------------------+\n|                                 Summary for match 2.226.0                                 |\n+----------------------------------------+--------------------------------------------------+\n| type                                   | appstore                                         |\n| readonly                               | false                                            |\n| generate_apple_certs                   | true                                             |\n| skip_provisioning_profiles             | false                                            |\n| app_identifier                         | [\"com.amazonaws.amplify.mobile.getting-started\"] |\n| username                               | xxxx@xxxxxxxxx                                   |\n| team_id                                | XXXXXXXXXX                                       |\n| storage_mode                           | git                                              |\n| git_url                                | https://github.com/sebsto/secret.git             |\n| git_branch                             | master                                           |\n| shallow_clone                          | false                                            |\n| clone_branch_directly                  | false                                            |\n| skip_google_cloud_account_confirmation | false                                            |\n| s3_skip_encryption                     | false                                            |\n| gitlab_host                            | https://gitlab.com                               |\n| keychain_name                          | login.keychain                                   |\n| force                                  | false                                            |\n| force_for_new_devices                  | false                                            |\n| include_mac_in_profiles                | false                                            |\n| include_all_certificates               | false                                            |\n| force_for_new_certificates             | false                                            |\n| skip_confirmation                      | false                                            |\n| safe_remove_certs                      | false                                            |\n| skip_docs                              | false                                            |\n| platform                               | ios                                              |\n| derive_catalyst_app_identifier         | false                                            |\n| fail_on_name_taken                     | false                                            |\n| skip_certificate_matching              | false                                            |\n| skip_set_partition_list                | false                                            |\n| force_legacy_encryption                | false                                            |\n| verbose                                | false                                            |\n+----------------------------------------+--------------------------------------------------+\n\n[17:39:08]: Cloning remote git repo...\n[17:39:08]: If cloning the repo takes too long, you can use the `clone_branch_directly` option in match.\n[17:39:10]: Checking out branch master...\n[17:39:10]: Enter the passphrase that should be used to encrypt/decrypt your certificates\n[17:39:10]: This passphrase is specific per repository and will be stored in your local keychain\n[17:39:10]: Make sure to remember the password, as you'll need it when you run match on a different machine\n[17:39:10]: Passphrase for Match storage: ********\n[17:39:13]: Type passphrase again: ********\nsecurity: SecKeychainAddInternetPassword &lt;NULL&gt;: The specified item already exists in the keychain.\n[17:39:15]: ðŸ”“  Successfully decrypted certificates repo\n[17:39:15]: Verifying that the certificate and profile are still valid on the Dev Portal...\n[17:39:17]: Installing certificate...\n\n+-------------------------------------------------------------------------+\n|                          Installed Certificate                          |\n+-------------------+-----------------------------------------------------+\n| User ID           | XXXXXXXXXX                                          |\n| Common Name       | Apple Distribution: Sebastien Stormacq (XXXXXXXXXX) |\n| Organisation Unit | XXXXXXXXXX                                          |\n| Organisation      | Sebastien Stormacq                                  |\n| Country           | US                                                  |\n| Start Datetime    | 2024-10-29 09:55:43 UTC                             |\n| End Datetime      | 2025-10-29 09:55:42 UTC                             |\n+-------------------+-----------------------------------------------------+\n\n[17:39:18]: Installing provisioning profile...\n\n+-------------------------------------------------------------------------------------------------------------------+\n|                                          Installed Provisioning Profile                                           |\n+---------------------+----------------------------------------------+----------------------------------------------+\n| Parameter           | Environment Variable                         | Value                                        |\n+---------------------+----------------------------------------------+----------------------------------------------+\n| App Identifier      |                                              | com.amazonaws.amplify.mobile.getting-starte  |\n|                     |                                              | d                                            |\n| Type                |                                              | appstore                                     |\n| Platform            |                                              | ios                                          |\n| Profile UUID        | sigh_com.amazonaws.amplify.mobile.getting-s  | 4e497882-d80f-4684-945a-8bfec1b310b9         |\n|                     | tarted_appstore                              |                                              |\n| Profile Name        | sigh_com.amazonaws.amplify.mobile.getting-s  | amplify-ios-getting-started-dist             |\n|                     | tarted_appstore_profile-name                 |                                              |\n| Profile Path        | sigh_com.amazonaws.amplify.mobile.getting-s  | /Users/stormacq/Library/MobileDevice/Provis  |\n|                     | tarted_appstore_profile-path                 | ioning                                       |\n|                     |                                              | Profiles/4e497882-d80f-4684-945a-8bfec1b310  |\n|                     |                                              | b9.mobileprovision                           |\n| Development Team ID | sigh_com.amazonaws.amplify.mobile.getting-s  | XXXXXXXXXX                                   |\n|                     | tarted_appstore_team-id                      |                                              |\n| Certificate Name    | sigh_com.amazonaws.amplify.mobile.getting-s  | Apple Distribution: Sebastien Stormacq       |\n|                     | tarted_appstore_certificate-name             | (XXXXXXXXXX)                                 |\n+---------------------+----------------------------------------------+----------------------------------------------+\n\n[17:39:18]: All required keys, certificates and provisioning profiles are installed ðŸ™Œ</code></pre> \n<p><strong>Step 2: Configure Fastlane to sign your project</strong></p> \n<p>I create a Fastlane build configuration file in <code>fastlane/Fastfile</code> (you can use <code>fastlane init</code> command to get started):</p> \n<pre><code>default_platform(:ios)\n\nplatform :ios do\n  before_all do\n    setup_ci\n  end\n\n  desc \"Build and Sign the binary\"\n  lane :build do\n    match(type: \"appstore\", readonly: true)\n    gym(\n      scheme: \"getting started\",\n      export_method: \"app-store\"\n    )\n  end\nend\n</code></pre> \n<p>Make sure that the <code>setup_ci</code> action is added to the <code>before_all</code> section of <code>Fastfile</code> for the <code>match</code> action to function correctly. This action creates a temporary Fastlane keychain with correct permissions. Without this step, you may encounter build failures or inconsistent results.</p> \n<p>And I test a local build with the command <code>fastlane build</code>. I enter the password I used when importing my keys and certificate, then I let the system build and sign my project. When everything is correctly configured, it produces a similar output.</p> \n<pre><code>...\n[17:58:33]: Successfully exported and compressed dSYM file\n[17:58:33]: Successfully exported and signed the ipa file:\n[17:58:33]: ~/amplify-ios-getting-started/code/getting started.ipa\n\n+---------------------------------------+\n|           fastlane summary            |\n+------+------------------+-------------+\n| Step | Action           | Time (in s) |\n+------+------------------+-------------+\n| 1    | default_platform | 0           |\n| 2    | setup_ci         | 0           |\n| 3    | match            | 36          |\n| 4    | gym              | 151         |\n+------+------------------+-------------+\n\n[17:58:33]: fastlane.tools finished successfully ðŸŽ‰</code></pre> \n<p><strong>Step 3: Configure CodeBuild to use Fastlane</strong></p> \n<p>Next, I create a project on CodeBuild. Iâ€™m not going into the step-by-step guide to help you to do so. You can refer to <a href=\"https://aws.amazon.com/blogs/aws/add-macos-to-your-continuous-integration-pipelines-with-aws-codebuild/?trk=4b29643c-e00f-4ab6-ab9c-b1fb47aa1708&amp;sc_channel=el\">my previous post</a> or to <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/fleets.html#fleets.configure-macos?trk=4b29643c-e00f-4ab6-ab9c-b1fb47aa1708&amp;sc_channel=el\">the CodeBuild documentation</a>.</p> \n<p>There is just one Fastlane-specific configuration. To access the signing materials, Fastlane requires access to three secret values that Iâ€™ll pass as environment variables:</p> \n<ul> \n <li><code>MATCH_PASSWORD</code>, the password I entered when importing the signing material. Fastlane uses this password to decipher the encrypted files in the GitHub repository</li> \n <li><code>FASTLANE_SESSION</code>, the value of the Apple Id session cookie, located at <code>~/.fastlane/spaceship/&lt;your apple user id&gt;/cookie</code>. The session is valid from a couple of hours to multiple days. When the session expires, reauthenticate with the command <code>fastlane spaceauth</code> from your laptop and update the value of <code>FASTLANE_SESSION</code> with the new value of the cookie.</li> \n <li><code>MATCH_GIT_BASIC_AUTHORIZATION</code>, a base 64 encoding of your GitHub username, followed by a colon, followed by a personal authentication token (PAT) to access your private GitHub repository. You can generate PAT on <a href=\"https://github.com/settings/personal-access-tokens\">the GitHub console</a> in Your Profile &gt; Settings &gt; Developers Settings &gt; Personal Access Token. I use this command to generate the value of this environment variable: <code>echo -n my_git_username:my_git_pat | base64</code>.</li> \n</ul> \n<p>Note that for each of these three values, I can enter the Amazon Resource Name (ARN) of the secret on <a href=\"https://aws.amazon.com/secrets-manager/\">AWS Secrets Manager</a> or the plain text value. We strongly <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec.env.secrets-manager?trk=4b29643c-e00f-4ab6-ab9c-b1fb47aa1708&amp;sc_channel=el\">recommend using Secrets Manager to store security-sensitive values</a>.</p> \n<p>Iâ€™m a security-conscious user, so I store the three secrets in Secrets Manager with these commands:</p> \n<p><code>aws --region $REGION secretsmanager create-secret --name /CodeBuild/MATCH_PASSWORD --secret-string MySuperSecretPassword<br /> aws --region $REGION secretsmanager create-secret --name /CodeBuild/FASTLANE_SESSION --secret-string $(cat ~/.fastlane/spaceship/my_appleid_username/cookie)<br /> aws --region $REGION secretsmanager create-secret --name /CodeBuild/MATCH_GIT_BASIC_AUTHORIZATION --secret-string $(echo -n my_git_username:my_git_pat | base64)<br /> </code></p> \n<p>If your build project refers to secrets stored in Secrets Manager, the build projectâ€™s service role must allow theÂ <code>secretsmanager:GetSecretValue</code> action. If you chose <strong>New service role</strong> when you created your project, CodeBuild includes this action in the default service role for your build project. However, if you chose <strong>Existing service role</strong>, you must include this action to your service role separately.</p> \n<p>For this demo, I use this <a href=\"https://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a> policy:</p> \n<pre><code>{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"secretsmanager:GetSecretValue\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:secretsmanager:us-east-2:012345678912:secret:/CodeBuild/*\"\n\t\t\t]\n\t\t}\n\t]\n}</code></pre> \n<p>After I created the project in the CodeBuild section of the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>, I enter the three environment variables. Notice that the value is the name of the secret in Secrets Manager.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/02/03/2025-02-03_18-20-53.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/02/03/2025-02-03_18-20-53.png\" alt=\"Codebuild - environment variables for Fastlane match\" width=\"719\" height=\"272\" /></a></p> \n<p>You can also define the environment variables and their Secrets Manager secret name in your <code>buildpsec.yaml</code>Â file.</p> \n<p>Next, I modify the <code>buildspec.yaml</code> file at the root of my project to use <code>fastlane</code> to build and sign the binary. My <code>buildspec.yaml</code> file now looks like this one:</p> \n<pre><code># buildspec.yml\nversion: 0.2\nphases:\n  install:\n    commands:\n      - code/ci_actions/00_install_rosetta.sh\n  pre_build:\n    commands:\n      - code/ci_actions/02_amplify.sh\n  build:\n    commands:\n      - (cd code &amp;&amp; fastlane build)\nartifacts:\n  name: getting-started-$(date +%Y-%m-%d).ipa\n  files:\n    - 'getting started.ipa'\n  base-directory: 'code'</code></pre> \n<p>The Rosetta and Amplify scripts are required to receive the Amplify configuration for the backend. If you donâ€™t use <a href=\"https://aws-amplify.github.io/\">AWS Amplify</a> in your project, you donâ€™t need these.</p> \n<p>Notice that there is nothing in the build file that downloads the signing key or prepares the keychain in the build environment; <code>fastlane match</code> will do that for me.</p> \n<p>I add the new <code>buildspec.yaml</code> file and my <code>./fastlane</code>Â directory to Git. I commit and push these files. <code>git commit -m \"add fastlane support\" &amp;&amp; git push</code></p> \n<p>When everything goes well, I can see the build running on CodeBuild and the <span><strong>Succeeded</strong></span> message.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/02/04/2025-02-04_09-25-46.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/02/04/2025-02-04_09-25-46-1024x655.png\" alt=\"Codebuild - succeed message\" width=\"800\" height=\"512\" /></a></p> \n<p><strong><span>Pricing and availability</span><br /> </strong>Fastlane is now pre-installed at no extra cost on all macOS images that CodeBuild uses, in all <a href=\"https://docs.aws.amazon.com/glossary/latest/reference/glos-chap.html#region\">Regions</a> where CodeBuild for macOS is available. At the time of this writing, these are US East (Ohio, N. Virginia), US West (Oregon), Asia Pacific (Sydney), and Europe (Frankfurt).</p> \n<p>In my experience, it takes a bit of time to configure <code>fastlane match</code> correctly. When itâ€™s configured, having it working on CodeBuild is pretty straightforward. Before trying this on CodeBuild, be sure it works on your local machine. When something goes wrong on CodeBuild, triple-check the values of the environment variables and make sure CodeBuild has access to your secrets on AWS Secrets Manager.</p> \n<p>Now go build (on macOS)!</p>","author":"SÃ©bastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"119515e0442a990d4dd962253deafcf5ec0351ec507626bb8cea6b14c36436a8","category":"Tech"}