{"title":"The Feature Trap: Why Feature Centricity Is Harming Your Product","link":"https://smashingmagazine.com/2024/01/feature-centricity-harming-product/","date":1706540400000,"content":"<p>Most product teams think in terms of features. Features are easy to brainstorm and write requirement docs for, and they fit nicely into our backlogs and ticketing systems. In short, thinking in terms of features makes it easy to manage the complex task of product delivery.</p>\n<p>However, we know that the best products are <em>more</em> than the sum of their parts, and sometimes, the space between the features is as important as the features themselves. So, what can we do to improve the process?</p>\n<p>The vast majority of product teams are organized around delivering features — new pieces of functionality that extend the capabilities of the product. These features will often arise from conversations the company is having with prospective buyers:</p>\n<ul>\n<li>“What features are important to you?”</li>\n<li>“What features are missing from your current solution?”</li>\n<li>“What features would we need to add in order to make you consider switching from your existing provider to us?” and so on.</li>\n</ul>\n<p>The company will then compile a list of the most popular feature requests and will ask the product team to deliver them.</p>\n<p>For most companies, this is what <em>customer centricity</em> looks like; asking customers to tell them what they want — and then building those features into the product in the hope they’ll buy — becomes of key importance. This is based on the fundamental belief that people buy products primarily for the <em>features</em> so we assemble our roadmaps accordingly.</p>\n<p>We see this sort of thinking with physical products all the time. For instance, take a look at the following Amazon listing for one of the top-rated TV sets from last year. It’s like they hurled up the entire product roadmap directly onto the listing!</p>\n<p><img src=\"https://files.smashing.media/articles/feature-centricity-harming-product/1-amazon-listing.png\" /></p>\n<p>Now, of course, if you’re a hardcore gamer with very specific requirements, you might absolutely be looking for a TV with “VRR, ALLM, and eARC as specified in HDMI2.1, plus G-Sync, FreeSync, Game Optimizer, and HGiG.” But for me? I don’t have a clue what any of those things mean, and I don’t really care. Instead, I’ll go to a review site where they explain what the product actually <em>feels like</em> to use in everyday life. The reviewers will explain how good the unboxing experience is. How sturdy the build is. How easy it is to set up. They’ll explain that the OS is really well put together and easy to navigate, the picture quality is probably the best on the market, and the sound, while benefiting from the addition of a quality sound bar, is very clear and understandable. In short, they’ll be describing the <strong>user experience</strong>. </p>\n<p>The ironic thing is that when I talk to most founders, product managers, and engineers about how they choose a TV, they’ll say exactly the same thing. And yet, for some reason, we struggle to take that personal experience and apply it to our own users!</p>\n<p><strong>Tip:</strong> As a fun little trick, next time you find yourself arguing about <em>features</em> over <em>experience</em>, ask people to get out their phones. I bet that the vast majority of folks in the room will have an iPhone, despite Samsung and Google phones generally having better cameras, more storage, better screens, and so on. The reason why iPhones have risen in dominance (if we ignore the obvious platform lock-in) is because, despite perhaps not having the best feature set on the market, they feel so nice to use. </p>\n<p><img src=\"https://files.smashing.media/articles/feature-centricity-harming-product/2-conference-room-by-alexandre-pellaes.jpg\" /></p>\nSeeing Things From The Users’ Perspective\n<p>While feature-centric thinking is completely understandable, it misses a whole class of problems. The features in and of themselves might look good on paper and work great in practice, but do they mesh together to form a convincing whole? Or is the full experience a bit of a mess? </p>\n<p>All the annoying bumps, barriers, and inconsistencies that start accruing around each new feature, if left unsolved, can limit the amount of value users can extract from the product. And if you don’t effectively identify and remove these barriers in a deliberate and structured way, any additional functionality will simply add to the problem.</p>\n<p>If users are already struggling to extract value from existing features, how do you expect them to extract any <em>additional</em> value you might be adding to the product? </p>\n<blockquote>“As a product manager, it’s natural to want to offer as many features as possible to your customers. After all, you want to provide value, right? But what happens when you offer too many features? Your product becomes bloated, convoluted, and difficult to use.”<br />— “<a href=\"https://faqprime.com/en/are-too-many-features-hurting-your-product-heres-how-to-fix-it/\">Are Too Many Features Hurting Your Product?</a>”</blockquote>\n\n<p>These barriers and inconsistencies are usually the result of people not thinking through the user experience. And I don’t mean <a href=\"https://www.linkedin.com/pulse/diagram-shows-value-great-ux-jared-spool-2rxae\"><em>user experience</em></a> in some abstract way. I mean literally walking through the product step-by-step as though you’d never seen it before — sometimes described as having a “beginner’s mind” — and considering the following questions:</p>\n<ul>\n<li>Is it clear what value this product delivers and how I can get that value?</li>\n<li>If I were a new user, would the way the product is named and structured make sense to me?</li>\n<li>Can I easily build up a mental model of where everything is and how the product works?</li>\n<li>Do I know what to do next?</li>\n<li>How is this going to fit into my existing workflow?</li>\n<li>What’s getting in my way and slowing me down?</li>\n</ul>\n<p>While approaching things with a beginner’s mind sounds easy, it’s actually a surprisingly hard mindset for people to adopt — letting go of everything they know (or think they know) about their product, market, and users. Instead, their position as a superuser tends to cloud their judgment: believing that because something is obvious to them (something that they have created and have been working on for the past two years), it will be obvious to a new user who has spent less than five minutes with the product. This is where <a href=\"https://www.uxtweak.com/usability-testing/\">usability testing</a> (a UX research method that evaluates whether users are able to use a digital product efficiently and effectively) should normally “enter the stage.”</p>\n<p>The issue with trying to approach things with a beginner’s mind is also often exacerbated by “<a href=\"https://en.wikipedia.org/wiki/Motivated_reasoning\">motivated reasoning</a>,” the idea that we view things through the lens of what we <em>want</em> to be true, rather than what <em>is</em> true. To this end, you’re much more likely to discount feedback from other people if that feedback is going to result in some negative outcome, like having to spend extra time and money redesigning a user flow when you’d rather be shipping that cool new feature you came up with last week.</p>\n<p>I see this play out in usability testing sessions all the time. The first subject comes in and struggles to grasp a core concept, and the team rolls their eyes at the incompetence of the user. The next person comes in and has the same experience, causing the team to ask where you found all these stupid users. However, as the third, fourth, and fifth person comes through and experiences the same challenge, “lightbulbs” slowly start forming over the team members’ heads:</p>\n<blockquote>“Maybe this isn’t the users’ fault after all? Maybe we’ve assumed a level of knowledge or motivation that isn’t there; maybe it’s the language we’ve used to describe the feature, or maybe there’s something in the way the interface has been designed that is causing this confusion?”</blockquote>\n\n<p>These kinds of insights can cause teams to fundamentally pivot their thinking. But this can also create a huge amount of discomfort and cognitive dissonance — realizing that your view of the world might not be entirely accurate. As such, there’s a strong motivation for people to avoid these sorts of realizations, which is why we often put so little effort (unfortunately) into understanding how our users perceive and use the things we create.</p>\n<p>Developing a beginner’s mind takes time and practice. It’s something that most people can cultivate, and it’s actually something I find designers are especially good at — stepping into other people’s shoes, unclouded by their own beliefs and biases. This is what designers mean when they talk about using <em>empathy</em>. </p>\nTowards A Two-Tier Process (Conclusion)\n<p>We obviously still need to have “feature teams.” Folks who can understand and deliver the new capabilities our users request (and our business partners demand). While I’d like to see more thought and validation when it comes to feature selection and creation, <a href=\"https://www.smashingmagazine.com/2023/08/improving-double-diamond-design-process/\">it’s often quicker to add new features to see if they get used</a> than to try and use research to give a definitive answer.</p>\n<p>As an example, I’m working with one founder at the moment who has been going around houses with their product team for months about whether a feature would work. He eventually convinced them to give it a try — it took four days to push out the change, and they got the feedback they needed almost instantly.</p>\n<p>However, as well as having teams focused on delivering new user value, we also need teams who are focused on helping <em>unlock and maximize existing</em> user value. These teams need to concentrate on outcomes over outputs; so, less <em>deliver X capability in Y sprints</em> than <em>deliver X improvement by Y date</em>. To do this, these teams need to have a high level of agency. This means taking them out of the typical feature factory mindset.</p>\n<p><img src=\"https://files.smashing.media/articles/feature-centricity-harming-product/3-feature-factory.jpg\" /></p>\n<p>The teams focusing on helping unlock and maximize existing user value need to be a little more cross-disciplinary than your traditional feature team. They’re essentially developing interventions rather than new capabilities — coming up with a hypothesis and running experiments rather than adding bells and whistles. <em>“How can we improve the onboarding experience to increase activation and reduce churn?”</em> Or, <em>“How can we improve messaging throughout the product so people have a better understanding of how it works and increase our North Star metric as a result?”</em></p>\n<p><strong>There’s nothing radical about focusing on outcomes over outputs.</strong> In fact, this way of thinking is at the heart of both the <a href=\"https://theleanstartup.com/\">Lean Startup</a> movement and the <a href=\"https://www.productled.org/foundations/what-is-product-led-growth\">Product Led Growth</a>. The problem is that while this is seen as received wisdom, very few companies actually put it into practice (although if you ask them, most founders believe that this is exactly what they do).</p>\n<p>Put simply, you can’t expect teams to work independently to deliver “outcomes” if you fill their their calendar with output work.</p>\n<p>So this two-tier system is really a hack, allowing you to keep sales, marketing, and your CEO (and your CEO’s partner) happy by delivering a constant stream of new features while spinning up a separate team who can remove themselves from the drum-beat of feature delivery and focus on the outcomes instead.</p>\n<h3>Further Reading</h3>\n<ul>\n<li>“<a href=\"https://www.komododigital.co.uk/insights/feature-addiction-can-ruin-a-digital-product/\">Why Too Many Features Can Ruin a Digital Product Before It Begins</a>” <em>(Komodo Digital)</em><br />Digital products are living, ever-evolving things. So, why do so many companies force feature after feature into projects without any real justification? Let’s talk about feature addiction and how to avoid it.</li>\n<li>“<a href=\"https://faqprime.com/en/are-too-many-features-hurting-your-product-heres-how-to-fix-it/\">Are Too Many Features Hurting Your Product?</a>” <em>(FAQPrime)</em><br />As a product manager, it’s natural to want to offer as many features as possible to your customers. After all, you want to provide value, right? But what happens when you offer too many features? Your product becomes bloated, convoluted, and difficult to use. Let’s take a closer look at what feature bloat is, why it’s a problem, and how you can avoid it. </li>\n<li>“<a href=\"https://cutle.fish/blog/12-signs-youre-working-in-a-feature-factory\">Twelve Signs You’re Working in a Feature Factory</a>,” John Cutler<br />The author started using the term <em>Feature Factory</em> when a software developer friend complained that he was “just sitting in the factory, cranking out features, and sending them down the line.” This article was written in 2016 and still holds its ground today. In 2019 there appeared a newer version of it (“<a href=\"https://amplitude.com/blog/12-signs-youre-working-in-a-feature-factory-3-years-later\">Twelve signs You’re Working in a Feature Factory — Three Years Later</a>”).</li>\n<li>“<a href=\"https://www.atlassian.com/agile\">What Is The Agile Methodology?</a>,” <em>(Atlassian)</em><br />The Agile methodology is a project management approach that involves breaking the project into phases and emphasizes continuous collaboration and improvement. Teams follow a cycle of planning, executing, and evaluating.</li>\n<li>“<a href=\"https://www.creative-cx.com/problem-statement-vs-hypothesis-which-is-more-important-for-experimentation/\">Problem Statement vs Hypothesis — Which ­­Is More Important</a>?,” Sadie Neve<br />When it comes to experimentation and conversion rate optimization (CRO), we often see people relying too much on their instincts. But in reality, nothing in experimentation is certain until tested. This means experimentation should be approached like a scientific experiment that follows three core steps: identify a problem, form a hypothesis, and test that hypothesis.</li>\n<li>“<a href=\"https://melissaperri.com/blog/2014/08/05/the-build-trap\">The Build Trap</a>,” Melissa Perri <em>(Produx Labs)</em><br />The <em>“move fast and break things”</em> mantra seems to have taken the startup world by storm since Facebook made it their motto a few years ago. But there is a serious flaw with this phrase, and it’s that most companies see this as an excuse to stop analyzing what they intend to build and why they should build it — those companies get stuck in what I call “The Build Trap.”</li>\n<li>“<a href=\"https://www.productled.org/foundations/what-is-product-led-growth\">What Is Product-led Growth?</a>” <em>(PLG Collective)</em><br />We are in the middle of a massive shift in the way people use and buy software. It’s been well over a decade since Salesforce brought software to the cloud. Apple put digital experiences in people’s pockets back in 2009 with the first iPhone. And in the years since the market has been flooded with consumer and B2B products that promise to meet just about every need under the sun.</li>\n<li><a href=\"https://theleanstartup.com/\">The Lean Startup</a><br />The Lean Startup isn’t just about how to create a more successful entrepreneurial business. It’s about what we can learn from those businesses to improve virtually everything we do.</li>\n<li>“<a href=\"https://www.uxtweak.com/usability-testing/\">Usability Testing — The Complete Guide</a>,” Daria Krasovskaya and Marek Strba<br />Usability testing is the ultimate method of uncovering any type of issue related to a system’s ease of use, and it truly is a must for any modern website or app owner. </li>\n<li>\"<a href=\"https://www.linkedin.com/pulse/diagram-shows-value-great-ux-jared-spool-2rxae\">The Value of Great UX</a>,” Jared Spool<br />How can we show that a great user experience produces immense value for the organization? We can think of experience as a spectrum, from extreme frustration to delight. In his article, Jared will walk you through how our work as designers is able to transform our users’ experiences from being frustrated to being delighted.</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2023/08/improving-double-diamond-design-process/\">Improving The Double Diamond Design Process</a>,” Andy Budd <em>(Smashing Magazine)</em><br />The so-called “Double Diamond” is a great way of visualizing an ideal design process, but it’s just not the way most companies deliver new projects or services. The article proposes a new “Double Diamond” idea that better aligns with the way work actually gets done and highlights the place where design has the most leverage.</li>\n<li>“<a href=\"https://andybudd.medium.com/are-we-moving-towards-a-post-agile-age-7751379fa1e2\">Are We Moving Towards a Post-Agile Age?</a>,” Andy Budd<br />Agile has been the dominant development methodology in our industry for a while now. While some teams are just getting to grips with Agile, others have extended it to the point that it’s no longer recognizable as Agile; in fact, many of the most progressive design and development teams are Agile only in name. What they are actually practicing is something new, different, and innately more interesting — something I’ve been calling Post-Agile thinking.</li>\n</ul>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"a5d568efec1a31cd12065e47cbcffef683d3b20f2523b1edaa11e5cc4db56001","category":"Tech"}