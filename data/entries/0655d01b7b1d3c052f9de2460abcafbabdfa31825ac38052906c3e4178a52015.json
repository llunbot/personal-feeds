{"title":"สรุปจากบทความเรื่อง Why hooks are the best thing to happen to React","link":"https://www.somkiat.cc/note-from-why-hooks-are-the-best-thing-to-happen-to-react/","date":1635869718000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/11/REACT-HOOKS-1-1024x576-1-150x150.png\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/11/REACT-HOOKS-1-1024x576-1.png\" /></figure>\n\n\n\n<p>จากบทความเรื่อง <strong><a href=\"https://stackoverflow.blog/2021/10/20/why-hooks-are-the-best-thing-to-happen-to-react/\" target=\"_blank\">Why hooks are the best thing to happen to React ?</a></strong> <br />จาก StackOverflow อธิบายเรื่องของ <a href=\"https://reactjs.org/docs/hooks-overview.html\" target=\"_blank\">React Hooks</a> ได้อย่างน่าสนใจ<br />ว่าการพัฒนาระบบงานด้วย React มีหลายแบบ<br />ทำให้การเปลี่ยนหรือย้ายไปมาทั้ง class และ functional component <br />เป็นเรื่องที่ไม่ง่ายเลย<br />ดังนั้นจึงเป็นที่มาของการสร้าง React Hooks<br />เพื่อให้ง่ายต่อการพัฒนา รวมทั้งการเปลี่ยนไปใช้งาน functional component อีกด้วย</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>โดยถ้าใครเริ่มด้วย class component</strong></p>\n\n\n\n<p>น่าจะต้องมาเรียนรู้เรื่องของ Life cycle ของ React ก่อน<br />ทั้งการเพิ่มหรือแก้ไขข้อมูลใน DOM ว่าเป็นอย่างไร<br />จะทำการ mount และ unmount อย่างไร<br />ทั้งการจัดการ render เมื่อข้อมูลเปลี่ยนแปลง<br />แน่นอนว่า การจะทำความเข้าใจไม่ง่ายเลย !!<br />แสดงดังรูป</p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/11/overflow-img-1024x561.jpg\" /></figure>\n\n\n\n<p><strong>ดังนั้นจึงสร้าง Hooks ขึ้นมาให้ใช้งาน แต่ต้องใช้งานกับ functional component เท่านั้น</strong></p>\n\n\n\n<p>เช่นมี useState และ useEffect ขึ้นมาใน Hooks<br />แน่นอนว่ายังมี Hooks อื่น ๆ ให้ศึกษาและใช้งานอีกเพียบ เช่น</p>\n\n\n\n<ul><li>useContext</li><li>useRef</li><li>useReducer</li><li>useMemo</li><li>useCallback</li></ul>\n\n\n\n<p>เพื่อให้ง่ายต่อการใช้งาน<br />ยกตัวอย่าง code ของ Hooks<br />เป็นการดึงข้อมูลจาก API ด้วย axios library<br />จากนั้นเอาค่ามาแสดงผล<br />แน่นอนว่า หลาย ๆ คนอาจจะบอกว่า มันคือ magic ที่ซ่อนความซับซ้อนเอาไว้ เช่นกัน</p>\n\n\n\n[gist id=\"eb6738893f0f4608f4e887d6636b079c\" file=\"HelloComponent.js\"]\n\n\n\n<p><strong>แต่ถ้าใช้ class component แล้ว ต้องมาจัดการผ่าน method ต่าง ๆ ของ class ดังนี้</strong></p>\n\n\n\n<ul><li>componentDidMount()</li><li>componentDidUpdate()</li><li>componentWillUnmount()</li></ul>\n\n\n\n<p>แต่ใน Hooks ใช้เพียง useEffect ก็พอ</p>\n\n\n\n<p><strong>รวมทั้งข้อมูลการตั้งคำถามเกี่ยวกับ React ใน StackOverflow ก็เพิ่มในทุก ๆ ปี</strong></p>\n\n\n\n<p>นั่นน่าจะแสดงให้เห็นอย่างชัดเจนว่า<br />การพัฒนาด้วย React มีความนิยม <br />พร้อมกับปัญหาของการพัฒนาที่เยอะด้วย<br />ซึ่งตรงข้ามกับ Angular เลย !!</p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/11/pasted-image-0.png\" /></figure>\n\n\n\n<p><strong>ดังนั้น React Hooks น่าจะเข้ามาช่วยให้การพัฒนา React ง่ายและสะดวกขึ้น</strong></p>\n\n\n\n<p>แต่เรื่องของ class component ก็ยังคงสำคัญเช่นกัน<br />ส่วน functional component + Hooks ก็เข้ามาเติมเต็มสิ่งที่ขาดหายไป<br />หรือใช้งาน functional component โดยไม่ต้องใช้ Hooks ก็ได้<br />ถ้าเราต้องการในเรื่องของ หน้าที่การทำงานที่ง่าย<br />เรื่องการ reuse และความยืดหยุ่นของ code</p>\n\n\n\n<p><strong><em>ขอให้สนุกกับการเขียน code ครับ</em></strong></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"0655d01b7b1d3c052f9de2460abcafbabdfa31825ac38052906c3e4178a52015","category":"Thai"}