{"title":"Agents for Amazon Bedrock is now available with improved control of orchestration and visibility into reasoning","link":"https://aws.amazon.com/blogs/aws/agents-for-amazon-bedrock-is-now-available-with-improved-control-of-orchestration-and-visibility-into-reasoning/","date":1701191032000,"content":"<p>Back in July, we <a href=\"https://aws.amazon.com/blogs/aws/preview-enable-foundation-models-to-complete-tasks-with-agents-for-amazon-bedrock/\">introduced Agents for Amazon Bedrock</a> in preview. Today, <a href=\"https://aws.amazon.com/bedrock/agents/\">Agents for Amazon Bedrock</a> is generally available.</p> \n<p>Agents for Amazon Bedrock helps you accelerate generative artificial intelligence (AI) application development by orchestrating multistep tasks. Agents uses the reasoning capability of foundation models (FMs) to break down user-requested tasks into multiple steps. They use the developer-provided instruction to create an orchestration plan and then carry out the plan by invoking company APIs and accessing knowledge bases using Retrieval Augmented Generation (RAG) to provide a final response to the end user. If you’re curious how this works, check out my previous posts on agents that include a <a href=\"https://aws.amazon.com/blogs/aws/preview-enable-foundation-models-to-complete-tasks-with-agents-for-amazon-bedrock/\">primer on advanced reasoning</a> and a <a href=\"https://aws.amazon.com/blogs/aws/preview-connect-foundation-models-to-your-company-data-sources-with-agents-for-amazon-bedrock/\">primer on RAG</a>.</p> \n<p>Starting today, Agents for Amazon Bedrock also comes with enhanced capabilities that include improved control of the orchestration and better visibility into the chain of thought reasoning.</p> \n<p>Behind the scenes, Agents for Amazon Bedrock automates the prompt engineering and orchestration of user-requested tasks, such as managing retail orders or processing insurance claims. An agent automatically builds the orchestration prompt and, if connected to knowledge bases, augments it with your company-specific information and invokes APIs to provide responses to the user in natural language.</p> \n<p>As a developer, you can use the new trace capability to follow the reasoning that’s used as the plan is carried out. You can view the intermediate steps in the orchestration process and use this information to troubleshoot issues.</p> \n<p>You can also access and modify the prompt that the agent automatically creates so you can further enhance the end-user experience. You can update this automatically created prompt (or prompt template) to help the FM enhance the orchestration and responses, giving you more control over the orchestration.</p> \n<p>Let me show you how to view the reasoning steps and how to modify the prompt.</p> \n<p><strong><u>View reasoning steps<br /> </u></strong>Traces gives you visibility into the agent’s reasoning, known as the chain of thought (CoT). You can use the CoT trace to see how the agent performs tasks step by step. The CoT prompt is based on a reasoning technique called <a href=\"https://arxiv.org/pdf/2210.03629.pdf\">ReAct</a> (synergizing <em>reasoning</em> and <em>acting</em>). Check out the <a href=\"https://aws.amazon.com/blogs/aws/preview-enable-foundation-models-to-complete-tasks-with-agents-for-amazon-bedrock/\">primer on advanced reasoning in my previous blog post</a> to learn more about ReAct and the specific prompt structure.</p> \n<p>To get started, navigate to the <a href=\"https://console.aws.amazon.com/bedrock/home\">Amazon Bedrock console</a> and select the working draft of an existing agent. Then, select the <strong>Test</strong> button and enter a sample user request. In the agent’s response, select <strong>Show trace</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-bedrock-agents-ga-01.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-bedrock-agents-ga-01.png\" alt=\"Agents for Amazon Bedrock\" width=\"1755\" height=\"1018\" /></a></p> \n<p>The CoT trace shows the agent’s reasoning step-by-step. Open each step to see the CoT details.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/2023-bedrock-agents-ga-03.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/2023-bedrock-agents-ga-03.png\" alt=\"Agents for Amazon Bedrock\" width=\"1472\" height=\"1477\" /></a></p> \n<p>The enhanced visibility helps you understand the rationale used by the agent to complete the task. As a developer, you can use this information to refine the prompts, instructions, and action descriptions to adjust the agent’s actions and responses when iteratively testing and improving the user experience.</p> \n<p><strong><u>Modify agent-created prompts<br /> </u></strong>The agent automatically creates a prompt template from the provided instructions. You can update the preprocessing of user inputs, the orchestration plan, and the postprocessing of the FM response.</p> \n<p>To get started, navigate to the Amazon Bedrock console and select the working draft of an existing agent. Then, select the <strong>Edit</strong> button next to <strong>Advanced prompts</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/2023-bedrock-agents-ga-04.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/2023-bedrock-agents-ga-04.png\" alt=\"Agents for Amazon Bedrock\" width=\"1419\" height=\"1765\" /></a></p> \n<p>Here, you have access to four different types of templates. Preprocessing templates define how an agent<br /> contextualizes and categorizes user inputs. The orchestration template equips an agent with short-term memory, a list of available actions and knowledge bases along with their descriptions, as well as few-shot examples of how to break down the problem and use these actions and knowledge in different sequences or combinations. Knowledge base response generation templates deﬁne how knowledge bases will be used and summarized in the response. Postprocessing templates deﬁne how an agent will format and present a final response to the end user. You can either keep using the template defaults or edit and override the template defaults.</p> \n<p><strong><u>Things to know</u></strong><br /> Here are a few best practices and important things to know when you’re working with Agents for Amazon Bedrock.</p> \n<p>Agents perform best when you allow them to focus on a specific task. The clearer the objective (instructions) and the more focused the available set of actions (APIs), the easier it will be for the FM to reason and identify the right steps. If you need agents to cover various tasks, consider creating separate, individual agents.</p> \n<p>Here are a few additional guidelines:</p> \n<ul> \n <li><strong>Number of APIs –</strong> Use three to five APIs with a couple of input parameters in your agents.</li> \n <li><strong>API design –</strong> Follow general best practices for designing APIs, such as ensuring idempotency.</li> \n <li><strong>API call validations –</strong> Follow best practices of API design by employing exhaustive validation for all API calls. This is particularly important because large language models (LLMs) may generate hallucinated inputs and outputs, and these validations prove helpful during such occurrences.</li> \n</ul> \n<p><b><u>Availability and pricing<br /> </u></b>Agents for Amazon Bedrock are available today in AWS Regions US East (N. Virginia) and US West (Oregon). You will be charged for the inference calls (<code>InvokeModel</code> API) made by agents. The <code>InvokeAgent</code> API is not charged separately. <a href=\"https://aws.amazon.com/bedrock/pricing/\">Amazon Bedrock Pricing</a> has all the details.</p> \n<p><span><strong>Learn more</strong></span></p> \n<ul> \n <li><a href=\"https://aws.amazon.com/bedrock/agents/\">Agents for Amazon Bedrock</a> product page</li> \n <li><a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/agents.html\">Agents for Amazon Bedrock User Guide</a></li> \n <li><a href=\"https://console.aws.amazon.com/bedrock/home\">Agents for Bedrock in the console</a></li> \n</ul> \n<p>— <a href=\"https://www.linkedin.com/in/antje-barth/\" target=\"_blank\">Antje</a></p>","author":"Antje Barth","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"7c903cc8a512abd0bc7ccd416dd048bb3d8a26a66f3c0354583ea9f5327aa5c7","category":"Tech"}