{"title":"Dart :: การจัดการ exception ที่น่าสนใจ","link":"https://www.somkiat.cc/dart-with-exception-handling/","date":1627576913000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/dart-logo-for-shares-150x150.png\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/dart-logo-for-shares-1024x575.png\" /></figure>\n\n\n\n<p>วันนี้ทำการแก้ไข code ที่พัฒนาด้วยภาษา Dart<br />ก็ไปเจอรูปแบบการจัดการ exception/error หลายรูปแบบ<br />ที่ทำงานกับ async function<br />จึงลองทำการสรุปไว้นิดหน่อย</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>พื้นฐานเล็กน้อยสำหรับ Dart</strong></p>\n\n\n\n<p>โดยที่ Dart จะแยก Error กับ Exception ออกจากกัน<br /><br /><strong>Error</strong> นั้นจะใช้สำหรับปัญหาในระดับ system เช่น memory error เป็นต้น<br />แน่นอนว่าเราไม่สามารถคาดเดาได้เลย<br /><br />ส่วน <strong>Exception</strong> นั้นใช้สำหรับระดับ application<br />เพิ่มเติมคือ รายละเอียดของปัญหาต่าง ๆ มาด้วย<br />ซึ่งทำให้สามารถดักจับได้ง่าย <br />รวมทั้งแก้ไขได้ง่ายขึ้น<br />แน่นอนว่าเรารู้ว่า น่าจะมีปัญหาอะไรเกิดขึ้นมาบ้าง<br /><br />โดยการใช้งานทั้งคู่ ควรที่จะสร้าง custom error/exception ขึ้นมาใช้<br />จะดีกว่าการใช้งานตรง ๆ ไปเลย</p>\n\n\n\n<p><strong>รูปแบบที่น่าสนใจประกอบไปด้วย</strong></p>\n\n\n\n<ul><li>try-catch-finally ปกติ + async-await</li><li>catchError()</li><li>onError ในการเรียกพวก async generator</li><li>ใช้งาน <strong><a href=\"https://api.flutter.dev/flutter/dart-async/Zone-class.html\" target=\"_blank\">Zone class </a></strong>มาช่วย</li></ul>\n\n\n\n<p>มาดูตัวอย่าง code ในแต่ละรูปแบบกัน</p>\n\n\n\n<p><strong>แบบที่ 1 try-catch-finally ปกติ + async-await</strong></p>\n\n\n\n[gist id=\"07e05a7ed212eee368d352906a1b95a3\" file=\"1.dart\"]\n\n\n\n<p><strong>แบบที่ 2 catchError()</strong></p>\n\n\n\n[gist id=\"07e05a7ed212eee368d352906a1b95a3\" file=\"2.dart\"]\n\n\n\n<p><strong>แบบที่ 3 onError ในการเรียกพวก async generator</strong></p>\n\n\n\n[gist id=\"07e05a7ed212eee368d352906a1b95a3\" file=\"3.dart\"]\n\n\n\n<p><strong>แบบที่ 4 ใช้งาน Zone class มาช่วย</strong></p>\n\n\n\n[gist id=\"07e05a7ed212eee368d352906a1b95a3\" file=\"4.dart\"]\n\n\n\n<p><strong><em>ปล. Exception ทุกอย่างของ Dart นั้นจะเป็น unchecked exception ทั้งหมด</em></strong></p>\n\n\n\n<p>ดูเพิ่มเติมได้ที่</p>\n\n\n\n<ul><li><a href=\"https://dart.dev/guides/libraries/futures-error-handling\" target=\"_blank\">Future and Error handling</a></li><li><a href=\"https://dart.dev/guides/language/language-tour#exceptions\" target=\"_blank\">Dart tour :: Exceptions</a></li></ul>\n\n\n\n<p></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"62815affa29e3479198b2c286a1128fb4f8745aa963a6a94b52dca1c4f5f715d","category":"Thai"}