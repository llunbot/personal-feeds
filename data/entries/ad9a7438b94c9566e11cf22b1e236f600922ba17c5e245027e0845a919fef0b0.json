{"title":"มาลองใช้งาน Docker image จากทาง Grafana คือ grafana/otel-lgtm","link":"https://www.somkiat.cc/use-docker-grafana-otel-lgtm/","date":1710510561000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-lgtm-150x150.png\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-lgtm-150x150.png 150w, https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-lgtm-75x75.png 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-lgtm.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/03/grafana-lgtm-1024x427.png\" width=\"690\" height=\"288\" /></a></figure>\n\n\n\n<p>OpenTelemetry นั้นเป็น project ที่ได้รับความนิยมขึ้นมา<br />จากเรื่องของ Distributed tracing และยังขยายเป็นเรื่อง metric กับ log ด้วย<br />โดยที่ตัวมันเองประกอบไปด้วยส่วนการทำงานต่าง ๆ  เช่น</p>\n\n\n\n<ul>\n<li>Instrument</li>\n\n\n\n<li>Collector</li>\n\n\n\n<li>Exporter</li>\n</ul>\n\n\n\n<p>ในฝั่งของ Grafana ก็มี <a href=\"https://www.somkiat.cc/lgtm-stack-from-grafana/\" target=\"_blank\">LGTM stack</a><br />แน่นอนว่าต้องสนับสนุน OpenTelemetry อย่างแน่นอน<br />และเพื่อให้ง่ายต่อการใช้งาน ทาง Grafana จึงได้สร้าง Docker image ออกมา<br />ในชื่อ <strong><a href=\"https://github.com/grafana/docker-otel-lgtm\" target=\"_blank\">grafana/otel-lgtm</a></strong><br />ดังนั้นมาลองใช้งานกัน</p>\n\n\n\n<span></span>\n\n\n\n<p><em>โดยเป้าหมายของ image ตัวนี้คือ<br />ใช้งานการ demo, development และ testing environment เท่านั้น</em></p>\n\n\n\n<p><strong>ใน image ตัวนี้ประกอบไปด้วย</strong></p>\n\n\n\n<ul>\n<li>OpenTelemetry collector สำหรับการรับข้อมูลเข้ามาผ่าน port 4317 คือ gRPC และ 4318 คือ HTTP</li>\n\n\n\n<li>ทำการ forward ข้อมูลแต่ละชนิดไปยังปลายทางของ exporter ต่าง ๆ</li>\n\n\n\n<li>Log ส่งไปยัง Loki</li>\n\n\n\n<li>Metric ส่งไปยัง Prometheus</li>\n\n\n\n<li>Tracing ส่งไปยัง Tempo</li>\n\n\n\n<li>ทำการดูข้อมูลต่าง ๆ ผ่าน dashboard ของ Grafana ด้วย port 3000 </li>\n\n\n\n<li>ในการดึงข้อมูลก็ต้องเรียนรู้ PromQL, TraceQL และ LogQL กันด้วย</li>\n</ul>\n\n\n\n<p>เป็นการ configuration พื้นฐานที่ไม่ต้องมาทำเองอีกแล้ว<br />ก็สบายขึ้นเยอะ</p>\n\n\n\n<p><strong>มาลองใช้งานกันดู ผ่าน docker compose ดีกว่า</strong></p>\n\n\n\n[gist id=\"d87ec5593c27208870a8f2570840d778\" file=\"docker-compose.yml\"]\n\n\n\n<p>ทำการ start กันหน่อย<br />Image ขนาด 1.4 GB กันเลย</p>\n\n\n\n[gist id=\"d87ec5593c27208870a8f2570840d778\" file=\"1.txt\"]\n\n\n\n<p>จากนั้นก็ยิงข้อมูลเข้ามาง่าย ๆ แล้ว<br />ลองใช้งานกันดูครับ</p>\n\n\n\n<p><strong>Reference Websites</strong></p>\n\n\n\n<ul>\n<li><a href=\"https://grafana.com/blog/2024/03/13/an-opentelemetry-backend-in-a-docker-image-introducing-grafana/otel-lgtm/?\" target=\"_blank\">An OpenTelemetry backend in a Docker image: Introducing grafana/otel-lgtm</a></li>\n</ul>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"ad9a7438b94c9566e11cf22b1e236f600922ba17c5e245027e0845a919fef0b0","category":"Thai"}