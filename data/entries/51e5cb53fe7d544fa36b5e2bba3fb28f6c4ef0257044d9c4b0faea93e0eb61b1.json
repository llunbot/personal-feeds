{"title":"How To Monitor And Optimize Google Core Web Vitals","link":"https://smashingmagazine.com/2024/04/monitor-optimize-google-core-web-vitals/","date":1713261600000,"content":"<p>This article is a sponsored by <a href=\"https://www.debugbear.com/?utm_campaign=sm-5\">DebugBear</a></p>\n<p>Google’s <a href=\"https://web.dev/articles/vitals\">Core Web Vitals initiative</a> has increased the attention website owners need to pay to user experience. You can now more easily see when users have poor experiences on your website, and <a href=\"https://www.debugbear.com/docs/core-web-vitals-ranking-factor?utm_campaign=sm-5\">poor UX also has a bigger impact on SEO</a>.</p>\n<p>That means you need to test your website to identify optimizations. Beyond that, <strong>monitoring ensures that you can stay ahead of your Core Web Vitals scores</strong> for the long term.</p>\n<p>Let’s find out how to work with different types of Core Web Vitals data and how monitoring can help you gain a deeper insight into user experiences and help you optimize them.</p>\nWhat Are Core Web Vitals?\n<p>There are three web vitals metrics Google uses to measure different aspects of website performance:</p>\n<ul>\n<li>Largest Contentful Paint (LCP),</li>\n<li>Cumulative Layout Shift (CLS),</li>\n<li>Interaction to Next Paint (INP).</li>\n</ul>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/1-core-web-vitals.png\" /></p>\n<h3>Largest Contentful Paint (LCP)</h3>\n<p>The <a href=\"https://www.debugbear.com/docs/metrics/largest-contentful-paint?utm_campaign=sm-5\">Largest Contentful Paint</a> metric is the closest thing to a traditional load time measurement. However, LCP doesn’t track a purely technical page load milestone like the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\">JavaScript Load Event</a>. Instead, it focuses on what the user can see by measuring <strong>how soon after opening a page, the largest content element on the page appears</strong>.</p>\n<p>The faster the LCP happens, the better, and Google rates a passing LCP score below 2.5 seconds.</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/2-largest-contentful-paint.png\" /></p>\n<h3>Cumulative Layout Shift (CLS)</h3>\n<p><a href=\"https://www.debugbear.com/docs/metrics/cumulative-layout-shift?utm_campaign=sm-5\">Cumulative Layout Shift</a> is a bit of an odd metric, as it doesn’t measure how fast something happens. Instead, it looks at <strong>how stable the page layout is once the page starts loading</strong>. Layout shifts mean that content moves around, disorienting the user and potentially causing accidental clicks on the wrong UI element.</p>\n<p>The CLS score is calculated by looking at how far an element moved and how big the element is. Aim for a score below 0.1 to get a good rating from Google.</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/3-cumulative-layout-shift.png\" /></p>\n<h3>Interaction to Next Paint (INP)</h3>\n<p>Even websites that load quickly often frustrate users when interactions with the page feel sluggish. That’s why <a href=\"https://www.debugbear.com/docs/metrics/interaction-to-next-paint?utm_campaign=sm-5\">Interaction to Next Paint</a> measures <strong>how long the page remains frozen after user interaction with no visual updates</strong>.</p>\n<p>Page interactions should feel practically instant, so Google recommends an INP score below 200 milliseconds.</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/4-interaction-to-next-paint.png\" /></p>\nWhat Are The Different Types Of Core Web Vitals Data?\n<p>You’ll often see different page speed metrics reported by different tools and data sources, so it’s important to understand the differences. We’ve <a href=\"https://www.smashingmagazine.com/2023/10/answering-questions-interpreting-page-speed-reports/\">published a whole article just about that</a>, but here’s the high-level breakdown along with the pros and cons of each one:</p>\n<ul>\n<li><strong>Synthetic Tests</strong><br />These tests are run on-demand in a controlled lab environment in a fixed location with a fixed network and device speed. They can produce very detailed reports and recommendations.</li>\n<li><strong>Real User Monitoring (RUM)</strong><br />This data tells you how fast your website is for your actual visitors. That means you need to install an analytics script to collect it, and the reporting that’s available is less detailed than for lab tests.</li>\n<li><strong>CrUX Data</strong><br />Google collects from Chrome users as part of the <a href=\"https://www.debugbear.com/blog/chrome-user-experience-report?utm_campaign=sm-5\">Chrome User Experience Report</a> (CrUX) and uses it as a ranking signal. It’s available for every website with enough traffic, but since it covers a 28-day rolling window, it takes a while for changes on your website to be reflected here. It also doesn’t include any debug data to help you optimize your metrics.</li>\n</ul>\nStart By Running A One-Off Page Speed Test\n<p>Before signing up for a monitoring service, it’s best to run a one-off lab test with a free tool like <a href=\"https://pagespeed.web.dev/\">Google’s PageSpeed Insights</a> or the <a href=\"https://www.debugbear.com/test/website-speed?utm_campaign=sm-5\">DebugBear Website Speed Test</a>. Both of these tools report with Google CrUX data that reflects whether real users are facing issues on your website.</p>\n<p><strong>Note</strong>: <em>The lab data you get from some Lighthouse-based tools — like PageSpeed Insights — <a href=\"https://www.debugbear.com/blog/is-pagespeed-insights-reliable?utm_campaign=sm-5\">can be unreliable</a>.</em></p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/5-one-off-page-speed-test.png\" /></p>\n<p>INP is best measured for real users, where you can see the elements that users interact with most often and where the problems lie. But a free tool like the <a href=\"https://www.debugbear.com/inp-debugger?utm_campaign=sm-5\">INP Debugger</a> can be a good starting point if you don’t have RUM set up yet.</p>\nHow To Monitor Core Web Vitals Continuously With Scheduled Lab-Based Testing\n<p>Running tests continuously has a few advantages over ad-hoc tests. Most importantly, <strong>continuous testing triggers alerts whenever a new issue appears on your website</strong>, allowing you to start fixing them right away. You’ll also have <strong>access to historical data</strong>, allowing you to see exactly when a regression occurred and letting you compare test results before and after to see what changed.</p>\n<p>Scheduled lab tests are easy to set up using a website monitoring tool like <a href=\"https://www.debugbear.com/?utm_campaign=sm-5\">DebugBear</a>. Enter a list of website URLs and pick a device type, test location, and test frequency to get things running:</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/6-scheduled-lab-based-testing.png\" /></p>\n<p>As this process runs, it feeds data into the detailed dashboard with historical Core Web Vitals data. You can monitor a number of pages on your website or track the speed of your competition to make sure you stay ahead.</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/7-dashboard-historical-core-web-vitals-data.png\" /></p>\n<p>When regression occurs, you can dive deep into the results using DebuBears’s <a href=\"https://www.debugbear.com/docs/compare?utm_campaign=sm-5\">Compare mode</a>. This mode lets you see before-and-after test results side-by-side, giving you context for identifying causes. You see exactly what changed. For example, in the following case, we can see that <a href=\"https://en.wikipedia.org/wiki/HTTP_compression\">HTTP compression</a> stopped working for a file, leading to an increase in page weight and longer download times.</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/8-debubears-compare-mode.png\" /></p>\nHow To Monitor Real User Core Web Vitals\n<p>Synthetic tests are great for super-detailed reporting of your page load time. However, other aspects of user experience, like layout shifts and slow interactions, heavily depend on how real users use your website. So, it’s worth <a href=\"https://www.debugbear.com/real-user-monitoring?utm_campaign=sm-5\">setting up real user monitoring with a tool like DebugBear</a>.</p>\n<p>To monitor real user web vitals, you’ll need to install an analytics snippet that collects this data on your website. Once that’s done, you’ll be able to see data for all three Core Web Vitals metrics across your entire website.</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/9-real-user-monitoring-debugbear.png\" /></p>\n<p>To optimize your scores, you can go into the dashboard for each individual metric, select a specific page you’re interested in, and then dive deeper into the data.</p>\n<p>For example, you can see whether a slow LCP score is caused by a slow server response, <a href=\"https://www.debugbear.com/blog/render-blocking-resources?utm_campaign=sm-5\">render blocking resources</a>, or by the LCP content element itself.</p>\n<p>You’ll also find that the LCP element varies between visitors. Lab test results are always the same, as they rely on a single fixed screen size. However, in the real world, visitors use a wide range of devices and will see different content when they open your website.</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/10-dashboard-lcp-debugbear.png\" /></p>\n<p>INP is tricky to debug without real user data. Yet an analytics tool like DebugBear can tell you exactly what page elements users are interacting with most often and which of these interactions are slow to respond.</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/11-inp-elements-debugbear.png\" /></p>\n<p>Thanks to the new <a href=\"https://www.debugbear.com/blog/long-animation-frames\">Long Animation Frames API</a>, we can also see specific scripts that contribute to slow interactions. We can then decide to optimize these scripts, remove them from the page, or run them in a way that does not block interactions for as long.</p>\n<p><img src=\"https://files.smashing.media/articles/monitor-optimize-google-core-web-vitals/12-inp-primary-scripts.png\" /></p>\nConclusion\n<p>Continuously monitoring Core Web Vitals lets you see how website changes impact user experience and ensures you get alerted when something goes wrong. While it’s possible to measure Core Web Vitals using a wide range of tools, those tools are limited by the type of data they use to evaluate performance, not to mention they only provide a single snapshot of performance at a specific point in time.</p>\n<p>A tool like DebugBear gives you access to several different types of data that you can use to troubleshoot performance and optimize your website, complete with RUM capabilities that offer a historial record of performance for identifying issues where and when they occur. <a href=\"https://www.debugbear.com/signup?utm_campaign=sm-5\">Sign up for a free DebugBear trial here</a>.</p>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"51e5cb53fe7d544fa36b5e2bba3fb28f6c4ef0257044d9c4b0faea93e0eb61b1","category":"Tech"}