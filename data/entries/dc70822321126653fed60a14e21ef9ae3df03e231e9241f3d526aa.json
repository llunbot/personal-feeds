{"title":"Dynamic provider credentials now generally available for Terraform Cloud","link":"https://www.hashicorp.com/blog/dynamic-provider-credentials-now-ga-for-terraform-cloud","date":1678381200000,"content":"<p>We are excited to announce the general availability of <em>dynamic provider credentials</em>, an authentication model for <a href=\"https://cloud.hashicorp.com/products/terraform\">Terraform Cloud</a> that’s also coming soon to <a href=\"https://developer.hashicorp.com/terraform/enterprise\">Terraform Enterprise</a>. Initially launched as a public beta in January, dynamic provider credentials help users create short-lived, just-in-time (JIT) credentials for HashiCorp Vault and the <a href=\"https://registry.terraform.io/browse/providers?tier=official\">official Terraform providers for the major cloud vendors</a> (Amazon Web Services, Microsoft Azure, and Google Cloud). This post reviews the details and benefits of this powerful new authentication method.</p>\n<h2><a href=\"#limitations-of-static-credentials\">»</a><a></a>Limitations of static credentials</h2>\n<p>Previously, Terraform Cloud and Enterprise users commonly relied on static credentials to authenticate with Vault and cloud providers. However, this practice posed both operational and security obstacles. Managing these static, long-lived credentials did not scale well without tedious, manual intervention. Users set credentials as workspace variables or variable sets in Terraform, adding additional complexity to their authentication process. Manually storing static credentials also introduced security vulnerabilities, even if the credentials were rotated regularly.</p>\n<h2><a href=\"#dynamic-provider-credentials\">»</a><a></a>Dynamic provider credentials</h2>\n<p>Dynamic provider credentials are temporary, time-bound, and unique to each Terraform workload. They are generated on demand, as opposed to static credentials, which are defined ahead of time and shared. Dynamic credentials do not require manual rotation or revocation when they are no longer needed.</p>\n<h3><a href=\"#standards-based\">»</a><a></a>Standards-based</h3>\n<p>Dynamic provider credentials leverage workload identity and implementation of the OpenID Connect (OIDC) standard. Organizations first configure Terraform Cloud as a trusted identity provider with their cloud platform or Vault. Terraform Cloud then generates a signed identity token for every workload to obtain temporary, short-lived credentials that are injected into the run environment. This exchange happens automatically for the supported providers by adding a few simple environment variables to the workspace.</p>\n<h3><a href=\"#vault-and-cloud-providers\">»</a><a></a>Vault and cloud providers</h3>\n<p>The <a href=\"https://registry.terraform.io/providers/hashicorp/vault/latest/docs\">Vault provider</a> allows users to configure Vault authentication methods, roles, and policies, and to write and access static secrets for workloads in Terraform. Administrators now have a simple and secure way to authenticate a Terraform workspace to Vault without manually rotating credentials or exposing them as workspace variables.</p>\n<p>Terraform Cloud dynamic provider credentials natively integrate with the <a href=\"https://aws.amazon.com/blogs/apn/simplify-and-secure-terraform-workflows-on-aws-with-dynamic-provider-credentials\">Amazon Web Services (AWS)</a>, <a href=\"https://www.hashicorp.com/partners/cloud/microsoft\">Microsoft Azure</a>, and <a href=\"https://www.hashicorp.com/partners/cloud/google-cloud\">Google Cloud</a> providers. Once an OIDC trust relationship is established, cloud admins scope roles with permissions appropriate to each workload. This eliminates the need for long-term API access keys or service principals and ensures that each Terraform Cloud run receives only the permissions it needs.</p>\n<h2><a href=\"#key-benefits\">»</a><a></a>Key benefits</h2>\n<p><strong>Simplify processes:</strong> Managing long-lived credentials requires custom solutions and processes typically taken on by the cloud platform team. Dynamic provider credentials simplify these processes by retrieving credentials on the fly, helping teams avoid the burden of manual secrets rotation.</p>\n<p><strong>Reduce risk:</strong> Storing long-lived static credentials presents severe security risks, as cloud credentials are highly sensitive and can grant powerful privileges. Using temporary, short-lived credentials removes the need to store long-lived secrets in Terraform Cloud and significantly limits the impact of accidental credential exposure and reuse.</p>\n<p><strong>Permissions control:</strong> Dynamic provider credentials provide platform teams with more granular permissions control, allowing them to scope privileges down to specific Terraform operations based on the run phase, workspace, project, or organization. This control helps keep permissions tightly scoped and enables the least privilege principle.</p>\n<h2><a href=\"#getting-started\">»</a><a></a>Getting started</h2>\n<p>To learn more about dynamic provider credentials, check out the <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/workspaces/dynamic-provider-credentials\">documentation</a> and <a href=\"https://developer.hashicorp.com/terraform/tutorials/cloud/dynamic-credentials\">tutorials</a>. Sample code for all four integrations can be found in the <a href=\"https://github.com/hashicorp/terraform-dynamic-credentials-setup-examples\">setup examples repo on GitHub</a>.</p>\n<p>Get started with <a href=\"https://cloud.hashicorp.com/products/terraform\">Terraform Cloud</a> for free to begin provisioning and managing your infrastructure in any environment. And try <a href=\"https://cloud.hashicorp.com/products/vault\">HCP Vault</a>, the easiest way to get started with Vault. <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/users-teams-organizations/users#log-in-with-your-hashicorp-cloud-platform-account\">Link your Terraform Cloud and HashiCorp Cloud Platform accounts</a> together for a seamless sign-in experience.</p>","author":"Mitchell Ross","siteTitle":"HashiCorp Blog","siteHash":"3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"dc70822321126653fed60a14e21ef9ae3df03e231e9241f3d526aa","category":"Tech"}