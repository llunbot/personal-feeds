{"title":"Announcing Amazon FSx Intelligent-Tiering, a new storage class for FSx for OpenZFS","link":"https://aws.amazon.com/blogs/aws/announcing-amazon-fsx-intelligent-tiering-a-new-storage-class-for-fsx-for-openzfs/","date":1733109762000,"content":"<p>When I speak to customers who are planning to migrate massive amounts of on-premises data to AWS, they tell me that they want to simplify their storage management, reduce their costs, and to make the data more accessible so that it can be used for analytics, machine learning training, genomics, and other use cases. Customers are already using Network Attached Storage (NAS) on-premises, and are looking for a cloud-based upgrade that offers similar capabilities including point-in-time snapshots, data clones, and user management.</p> \n<p>AWS customers such as <a href=\"https://aws.amazon.com/partners/success/amdocs/\">Amdocs</a>, <a href=\"https://aws.amazon.com/blogs/gametech/vela-games-cuts-game-build-times-by-60-using-infrastructure-on-aws/\">Vela Games</a>, and <a href=\"https://aws.amazon.com/solutions/case-studies/astera-labs/\">Astera Labs</a> have been running their mission-critical and performance-intensive NAS workloads like databases, game development and streaming, and semiconductor chip design on <a href=\"https://aws.amazon.com/fsx/openzfs/\">Amazon FSx for OpenZFS</a>. They’ve been using the existing SSD storage class on FSx to provide the predictable, high performance these workloads need. However, many other customers have large data sets that are stored on HDD-based or hybrid SSD/HDD-based NAS storage on prem that find it cost-prohibitive to move their data sets to all-SSD storage. Additionally, these customers are finding it increasingly challenging and expensive to manage provisioned storage on prem for unpredictable data sets and avoid running out of space. And they are keeping their NAS data around for longer because it could have future value for building their next model, investment strategy, or product, but that means they need to spend more time and effort monitoring access patterns and moving data around between hot and cold storage media to optimize costs.</p> \n<p><span><strong>FSx Intelligent-Tiering</strong></span><br /> <img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/fsx_int_1.png\" width=\"420\" height=\"165\" />Taking all of this into account, I am happy to be able to tell you about the new Amazon FSx Intelligent-Tiering storage class, available today for use with <a href=\"https://aws.amazon.com/fsx/openzfs/\">Amazon FSx for OpenZFS</a> file systems. The new storage class is priced 85% lower than the existing SSD storage class and 20% lower than traditional HDD-based deployments on premises, and brings full elasticity and intelligent tiering to NAS data sets.</p> \n<p>Your data moves between three storage tiers (Frequent Access, Infrequent Access, and Archive) with no effort on your part, so you get automatic cost savings with no upfront costs or commitments. Here’s how the tiers work:</p> \n<p><strong>Frequent Access</strong> – Data that has been accessed within the last 30 days is stored in this tier.</p> \n<p><strong>Infrequent Access</strong> – Data that has been not been accessed for 30 to 90 days is stored in tier, at a 44% cost reduction from Frequent Access.</p> \n<p><strong>Archive</strong> – Data that has not been accessed for 90 or more days is stored in this tier, at a 65% cost reduction from Infrequent Access.</p> \n<p>Regardless of the storage tier, your data is stored across multiple AWS Availability Zones (AZs) for redundancy and availability, and can be retrieved instantly in milliseconds.</p> \n<p>There’s no need to manage or pre-provision storage, making this storage class a great fit for uses case such as genomics, financial data analytics, seismic imagery analysis, and machine learning where storage requirements can change dramatically over the course of days or weeks.</p> \n<p>Along with the potential for cost savings, you get high performance: up to 400K IOPS and 20 GB/second of throughput for each OpenZFS file system, with a time-to-first-byte of tens of milliseconds for all data, regardless of storage class. You can also configure an SSD-based read cache (64 GiB to 512 TiB) to reduce the time-to-first-byte by 10x to 100x for cached data.</p> \n<p><span><strong>Creating a File System</strong></span><br /> I can create a file system using the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>, CLI, API, or a <a href=\"https://aws.amazon.com/cloudformation/\">AWS CloudFormation</a>. From the Console I click <strong>Create file system</strong> to get started:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/14/fsx_filesystems_1.png\" width=\"893\" height=\"257\" /></p> \n<p>I choose <strong>Amazon FSx for OpenZFS</strong> and click <strong>Next</strong>:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/14/fsx_pick_zfs_1.png\" width=\"894\" height=\"629\" /></p> \n<p>Then I enter a name (<strong>jeff_fsx_openzfs_1</strong>) for my file system and select the <strong>Intelligent-Tiering</strong> storage class. I choose the desired <strong>Throughput capacity</strong>, and I select one of the three <strong>sizing mode</strong> options for the read cache, click <strong>Next</strong>, and confirm my choices in order to create my file system:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/14/fsx_create_zfs_1.png\" width=\"894\" height=\"909\" /></p> \n<p>It is ready within minutes, and I can NFS mount it to my EC2 instance:</p> \n<div> \n <pre><code>$ sudo mkfs /fsx_zfs\n$ sudo mount -t nfs -o noatime,nfsvers=4.2,sync,nconnect=16,rsize=1048576,wsize=1048576 \\\n  fs-00fc74f020d1e6f4e.fsx.us-east-2.aws.internal:/fsx/ /fsx_zfs/</code></pre> \n</div> \n<p>After I run a representative workload for a while I can look at the metrics and review the performance of my file system:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/14/fsx_metrics_1.png\" width=\"894\" height=\"517\" /></p> \n<p>It appears that I have plenty of throughput, but my read cache may be larger than needed. I created it in Automatically Provisioned mode, which allocated 3200 GiB of cache. I can change that (and save some money) with a couple of clicks:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/14/fsx_edit_cache_1.png\" width=\"496\" height=\"408\" /></p> \n<p>I can also change the throughput capacity as needed:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/14/fsx_edit_tpc_1.png\" width=\"506\" height=\"340\" /></p> \n<p><strong><span>Amazon FSx NAS</span> Features and Attributes</strong><br /> Let’s take a quick look at some of the features which make FSx for OpenZFS and the FSx Intelligent-Tiering storage class a great for for your NAS-level storage needs:</p> \n<p><strong>Built-in Backups</strong> – Amazon FSx automatically makes a daily backup of each file system during a specified backup window and retains them for a specified retention period. The backups are file-system consistent, highly durable, and incremental. You can also create backups on your own and retain them for as long as needed.</p> \n<p><strong>Point-In-Time Snapshots</strong> -You can create a read-only image of an OpenZFS volume at any time. The snapshots are stored within the file system and consume storage; they can be used to restore a volume, restore individual files and folders, or to create a new volume as either a clone or a full-copy.</p> \n<p><strong>Replication</strong> – You can replicate a point-in-time view of an OpenZFS volume to another volume across file systems, AWS Regions, and AWS accounts. FSx uses <a href=\"https://openzfs.github.io/openzfs-docs/man/master/8/zfs-send.8.html\">ZFS send/receive</a> technology behind the scenes to perform this replication and automatically establishes and maintains network connectivity between file systems to handle interruptions and resume data transfer as needed.</p> \n<p><strong>Data Compression</strong> – You can enable ZSTD or LZ4 compression on your OpenZFS volumes to reduce storage cost and speed up data transfer.</p> \n<p><strong>User and Volume Quotas</strong> – You can limit the amount of storage consumed by an individual volume or user.</p> \n<p><span><strong>Things to Know</strong></span><br /> Here are a couple of things to keep in mind before we wrap up:</p> \n<p><strong>Regions</strong> – This new storage class is available in the US East (Ohio, N. Virginia), US West (Oregon), Asia Pacific (Mumbai, Singapore, Sydney, Tokyo), Canada (Central), and Europe (Frankfurt, Ireland) AWS Regions.</p> \n<p><strong>Pricing</strong> – Pricing is based on the amount of primary storage consumed (GB/Month) and read cache provisioned (GB/Month). See the <a href=\"https://aws.amazon.com/fsx/openzfs/pricing/\">Amazon FSx for OpenZFS Pricing</a> page for more information.</p> \n<p></p>\n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>\n<p></p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"86f9ffb687b2b8aab2b1aa82dab88231d66b0f5e1c0a7e07ca0c96192834e881","category":"Tech"}