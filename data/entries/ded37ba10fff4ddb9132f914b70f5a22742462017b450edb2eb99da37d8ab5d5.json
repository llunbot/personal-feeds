{"title":"PKI certificate issuance flexibility with Vault CIEPS","link":"https://www.hashicorp.com/blog/pki-certificate-issuance-flexibility-with-vault-cieps","date":1702486800000,"content":"<p>Many organizations rely on X.509 public key infrastructure (PKI) certificates to protect their services and workloads. This standard supports a wide range of configurable fields and extensions, making it highly flexible and allowing for a high degree of customization. Many of these fields are relevant for a large number of use cases and are natively supported by HashiCorp Vault. However, due to the sheer number of fields defined in the <a href=\"https://datatracker.ietf.org/doc/html/rfc5280\">X.509 standard</a>, there were cases where a field was not implemented in Vault and could not be validated by Vault.</p>\n\n<p>To address these use cases, we have introduced support for <a href=\"https://developer.hashicorp.com/vault/docs/secrets/pki/cieps\">Certificate Issuance External Policy Services (CIEPS)</a> in <a href=\"https://www.hashicorp.com/blog/vault-1-15-brings-ui-updates-pki-enhancements-new-betas-and-more\">Vault Enterprise 1.15</a>.</p>\n\n<h2>Issuing a PKI certificate</h2>\n\n<p>Issuing a PKI certificate with Vault is simple. Once a certificate authority (CA) has been established and configured with a role, authenticated clients can submit certificate issuance or signing requests against that role. The role defines the allowed values in the certificate and compares the request against those values. If the values match, a certificate is issued or signed. If they do not match, the request is rejected.</p>\n\n<p>This workflow is suitable for all requests that include fields and extensions <a href=\"https://developer.hashicorp.com/vault/api-docs/secret/pki#create-update-role\">natively supported</a> by Vault. In scenarios where customers require certificates to be issued with custom fields, Vault offers the option to use the sign-verbatim method, described in the next section.</p>\n<img src=\"https://www.datocms-assets.com/2885/1702485178-vault-alone-pki-1.png\" alt=\"Standard\" /><h2>Challenges with sign-verbatim requests</h2>\n\n<p>Issuing or signing a certificate with the sign-verbatim method allows the request to use arbitrary fields and extensions that are not supported with the role-based process outlined above. However, because Vault does not validate those custom fields, the use of sign-verbatim requires a different validation approach.</p>\n\n<p><a href=\"https://developer.hashicorp.com/vault/tutorials/policies/sentinel\">HashiCorp Sentinel</a> is a policy as code framework that allows the definition of fine-grained, logic-based policies. It can be used to provide additional validation for requests made to endpoints and entities in Vault. When defined for a particular endpoint, the Sentinel policy evaluates all requests to that endpoint and determines whether to allow or reject them based on the result of the policy check.</p>\n\n<p>With Sentinel, specific fields can be denied or required. When fields are defined as required in the Sentinel policy, the client has to know and specify all required fields in the request. Missing fields would lead to the request being denied, and resolving the issue requires clients to have knowledge of very specific PKI fields, which may not be easy to find. In addition, Sentinel operates on a deny/accept basis and lacks the ability to modify requests. </p>\n\n<p>Another possible approach when issuing or signing certificates verbatim would be to set up a validation service in front of Vault. With this approach, the client communicates with and authenticates to the validation service instead of directly to Vault. The validation service then validates incoming requests and forwards valid requests to the sign-verbatim endpoint. However, in order to do this, the validation service needs to authenticate to Vault, which introduces an additional authentication and authorization step. </p>\n\n<p>Clients who need to use this validation service and Vault for other use cases, such as role-based certificate request validation, would need to manage authentication information for both services. </p>\n\n<p>Similar to the Sentinel approach, a validation service running in front of Vault cannot modify certificate signing requests (CSR). Even if the request <em>could</em> be modified, it would happen outside of Vault which leaves the question of how those modifications could be audited. </p>\n\n<p>In addition, in order to remain compatible with Vault, the validation service would need to support the ACME protocol and any protocols that may be added to Vault in the future.</p>\n<img src=\"https://www.datocms-assets.com/2885/1702485173-sign-verbatim-2.png\" alt=\"The\" /><p>Both approaches, sign-verbatim with Sentinel or with a validation service, are good for allowing and rejecting requests. However, they do not provide the ability to modify requests and lack auditability. As a result, the sign-verbatim solution is not user-friendly and is not popular among organizations that use Vault.</p>\n\n<h2>Vault’s Certificate Issuance External Policy Service</h2>\n\n<p>To address these challenges, we designed and implemented a new Vault Enterprise feature called CIEPS in HashiCorp Vault 1.15. CIEPS is part of the <a href=\"https://developer.hashicorp.com/vault/docs/secrets/pki\">PKI secrets engine</a> and offers a new mechanism that allows customers to use and validate any field specified in the x.509 standard. This enables a high degree of customizability to address less-common use cases.</p>\n\n<p>With CIEPS, customers can build a custom policy service that runs outside of Vault. In the service, custom issuance policies can be specified. A Vault operator can then configure the PKI secrets engine to refer to this custom policy service. This lets Vault handle communication with the service. When Vault receives a request that requires validation by the external policy service, it forwards the request to the custom policy service for validation and approval. </p>\n\n<p>The external policy service processes the request and, based on the defined policies, determines if the request should be approved or denied. When the request is approved, Vault updates select fields if necessary and then issues the certificate. If the request is denied, the policy service can specify a custom error message in its response to Vault. Vault includes the error message in its response to the original request, allowing a better user experience with customized error messages instead of generic, uninformative ones.</p>\n\n<p>Once everything has been set up, clients can authenticate to and request certificates from Vault. The interaction between Vault and the external policy service is not visible to the client. For the client, Vault's behavior remains unchanged and the certificate request workflow remains the same. The only difference is the API endpoint to which the request is sent in Vault. No additional authentication or authorization step is necessary. This lets the client interact only with Vault as the central platform, instead of having to target an additional service. </p>\n\n<p>The external policy service can also modify the original requests if necessary. Since it is directly integrated with Vault, all requests and responses are part of Vault’s audit logs, ensuring complete auditability of the issuance process.</p>\n<img src=\"https://www.datocms-assets.com/2885/1702485166-vault-cieps-3.png\" alt=\"Validating\" /><p>The benefits of using an external policy service with Vault include:</p>\n\n<ul>\n<li><strong>Auditability:</strong> As Vault is handling the communication and requests to the service, all requests and responses between Vault and the external policy service are tracked in Vault’s audit logs. </li>\n<li><strong>User experience:</strong> Clients interact only with Vault, the request workflow stays the same, and error messages are customizable. </li>\n<li><strong>Certificate modification:</strong> The original request can be customized according to the defined policies.</li>\n<li><strong>Flexibility:</strong> The external policy service uses a customer-defined external service for validation and is therefore more flexible than the role-based system. </li>\n</ul>\n\n<h2>CIEPS in Vault PKI: Adding flexibility</h2>\n\n<p>With CIEPS, organizations now have granular control and the ability to create flexible certificate structures that meet their PKI requirements, while having HashiCorp Vault validate and issue them.</p>\n\n<p>CIEPS allows for the use and validation of any field or extension specified in the x.509 standard, addressing use cases that are not supported natively and therefore were previously not possible in Vault. Additionally, the workflow for end users remains the same, ensuring a consistent user experience.</p>\n\n<p>Interested in learning more about the Certificate Issuance External Policy Service? Check out our <a href=\"https://developer.hashicorp.com/vault/tutorials/enterprise/pki-cieps\">hands-on tutorial</a>, which includes an example service to get you started. To learn more about how <a href=\"https://portal.cloud.hashicorp.com/sign-in\">HCP Vault</a> and Vault Enterprise can help with your PKI requirements, <a href=\"https://www.hashicorp.com/contact-sales?interest=vault\">contact HashiCorp sales</a>.</p>\n\n<h2>HashiCorp Vault PKI resources</h2>\n\n<ul>\n<li><strong><a href=\"https://www.hashicorp.com/vault-pki\">PKI design considerations</a></strong>: Read this technical guide on how to build modern PKI with HashiCorp Vault.</li>\n<li><strong><a href=\"https://www.hashicorp.com/blog/what-is-public-key-infrastructure-pki\">What is public key infrastructure (PKI)</a></strong>: See how PKI governs the provisioning of digital certificates to protect sensitive data, establish digital identities, and secure communications.</li>\n<li><strong><a href=\"https://www.hashicorp.com/blog/what-is-acme-pki\">What is ACME PKI?</a></strong> Learn about the ACME protocol for PKI, the common problems it solves, and why it should be part of your certificate management roadmap.</li>\n<li><strong><a href=\"https://www.hashicorp.com/blog/pki-hosting-cloud-based-pki-vs-self-managed\">PKI hosting: Cloud-based PKI vs. self managed</a></strong>: Discover the benefits and differences between hosting PKI workloads in the cloud versus on-premises.</li>\n<li><strong><a href=\"https://www.hashicorp.com/blog/certificate-management-with-vault\">X.509 certificate management with Vault</a></strong>: A look at practical public key certificate management in HashiCorp Vault using dynamic secrets rotation.</li>\n</ul>\n","author":"Sara Asano","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"ded37ba10fff4ddb9132f914b70f5a22742462017b450edb2eb99da37d8ab5d5","category":"Tech"}