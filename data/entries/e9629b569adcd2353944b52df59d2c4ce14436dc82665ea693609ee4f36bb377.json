{"title":"Terraform cloud now supports dynamic provider credentials for Kuberenetes","link":"https://www.hashicorp.com/blog/terraform-cloud-now-supports-dynamic-provider-credentials-for-kuberenetes","date":1699376400000,"content":"<p>In <a href=\"https://www.hashicorp.com/blog/dynamic-provider-credentials-now-ga-for-terraform-cloud\">March 2023</a>, we announced the general availability of <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/workspaces/dynamic-provider-credentials\">dynamic provider credentials</a> in Terraform Cloud. This native support lets users authenticate to providers using short-lived, just-in-time credentials in their Terraform Cloud workflows with the Amazon Web Services (AWS), Microsoft Azure, Google Cloud, and HashiCorp Vault providers. The enhancement helps users reduce the risk of exposure from storing long-lived static credentials and avoid the burden of manual secret rotation. Today we are excited to announce the general availability of dynamic provider credentials support for Kubernetes via Amazon Elastic Kubernetes Service (EKS) and Google Kubernetes Engine (GKE).</p>\n\n<h2>Dynamic provider credentials for Kubernetes</h2>\n\n<p>Previously, users managing Kubernetes resources with Terraform often authenticated to clusters using long-lived, non-renewable static credentials. This approach frequently resulted in authentication failures upon expiration. Now Terraform offers Kubernetes users the ability to utilize the workload identity of Terraform Cloud integrated with the native OIDC support of EKS and GKE.</p>\n\n<p>Dynamic provider credentials in Terraform Cloud eliminate the risks associated with storing long-lived credentials, removing the operational burdens of manually rotating them.</p>\n\n<h2>How it works</h2>\n\n<p>Dynamic provider credentials are based on the industry-standard OpenID Connect (OIDC) workload identity authentication flow. With todayâ€™s enhancement, Terraform Cloud now supports just-in-time authentication for the official <a href=\"https://registry.terraform.io/providers/hashicorp/kubernetes/latest\">Kubernetes</a> and <a href=\"https://registry.terraform.io/providers/hashicorp/helm/latest\">Helm</a> providers. </p>\n\n<p>Once the OIDC trust relationship has been established, Kubernetes cluster roles are mapped to Terraform workloads by the platform team, rather than providing long-lived, static credentials to be shared across the organization. When a Terraform workload is executed, Terraform Cloud will automatically handle the necessary handshake with the target cluster and inject short-lived credentials directly into the Terraform execution environment.</p>\n<img src=\"https://www.datocms-assets.com/2885/1699301970-dynamic-creds-k8s.png\" alt=\"Using\" /><h2>Key benefits</h2>\n\n<p>Dynamic provider credentials now let users authenticate Kubernetes for EKS and GKE clusters on AWS and Google Cloud. That brings two main benefits:</p>\n\n<ul>\n<li><strong>Increase Agility:</strong> Previously platform teams using the Kubernetes and Helm providers with EKS or GKE had to manage long-lived credentials to connect Terraform Cloud, requiring custom solutions and processes. Now teams can take advantage of native, dynamic creation of auth tokens and benefit from the reduction of operational complexity when managing provider credentials. Platform teams can enable self-service for end users without compromising security or compliance.</li>\n<li><strong>Reduce risk</strong>: Platform teams storing long-lived credentials are exposed to security risks. The use of short lived dynamic credentials reduces the risk of accidental credential exposure and re-use. Dynamic provider credentials allow cloud platforms to scope privileges down to the individual workspace level. This control gives users additional customization and enables the least privilege principle.</li>\n</ul>\n\n<h2>Getting started with dynamic provider credentials</h2>\n\n<p>Dynamic provider credentials help organizations mitigate the security risks of storing long-lived credentials and avoid the operational burdens of manually rotating them. This helps simplify Terraform Cloud setup and ensures secure authentication across cloud environments.</p>\n\n<p>To learn more about dynamic provider credentials for Kubernetes, please refer to <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/workspaces/dynamic-provider-credentials/kubernetes-configuration\">Dynamic provider credentials documentation</a>. If you are completely new to Terraform, <a href=\"http://hashi.co/tf-cloud-bc\">sign up for Terraform Cloud</a> and get started using the Free offering today.</p>\n","author":"Aurora Chun","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"e9629b569adcd2353944b52df59d2c4ce14436dc82665ea693609ee4f36bb377","category":"Tech"}