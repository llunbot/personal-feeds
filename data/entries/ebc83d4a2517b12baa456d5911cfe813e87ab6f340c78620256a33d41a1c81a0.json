{"title":"Announcing new APIs for Amazon Location Service Routes, Places, and Maps","link":"https://aws.amazon.com/blogs/aws/announcing-new-apis-for-amazon-location-service-routes-places-and-maps/","date":1731090909000,"content":"<p>Today, <a href=\"http://aws.amazon.com/location\">Amazon Location Service</a> released 17 new and enhanced APIs that expand and improve capabilities for the <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/route-concepts.html\">Routes</a>, <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/places-concepts.html\">Places</a>, and <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/map-concepts.html\">Maps</a> functionalities, creating a more cohesive and streamlined experience for developers. By introducing enhanced features and offering simplified migration, these updates make Amazon Location Service more accessible and useful for a wide range of applications.</p> \n<p>You can now access advanced route optimization, toll cost calculations, GPS traces snapping, and a variety of map styles with static and dynamic rendering options, and perform proximity-based search and predictive suggestions, with rich, detailed information on points of interest.</p> \n<p>At Amazon, the vast majority of our roadmaps are driven by customer feedback. Many customers building applications with Amazon Location Service have shared that they need purpose-built APIs and more granular details, such as contact information and business hours, when working with location-based data. Although the current API set has provided valuable tools for many customers, developers have expressed a desire for additional capabilities, such as detailed route planning, proximity-based searches, additional places details, and static map images. These new APIs address these requests and provide a more comprehensive, out-of-the-box location solution.</p> \n<p><span><strong>New and enhanced capabilities</strong></span><br /> Today’s launch introduces 10 updated APIs and seven entirely new APIs, responding directly to your feedback. Each service—Routes, Places, and Maps—receives specific enhancements designed to support a broader range of use cases.</p> \n<p><strong>Routes</strong><br /> The Amazon Location Routes API now supports advanced route planning and customization options, allowing users to:</p> \n<ul> \n <li><a href=\"https://docs.aws.amazon.com/location/latest/APIReference/API_CalculateIsolines.html\"><code>CalculateIsolines</code></a> to identify service areas within specific travel time, or distance</li> \n <li><a href=\"https://docs.aws.amazon.com/location/latest/APIReference/API_OptimizeWaypoints.html\"><code>OptimizeWaypoints</code></a> to determine the most efficient sequence of waypoints, helping to minimize either travel time or distance</li> \n <li>Calculate Toll Costs to provide precise cost estimates for routes involving toll roads</li> \n <li><a href=\"https://docs.aws.amazon.com/location/latest/APIReference/API_SnapToRoads.html\"><code>SnapToRoads</code></a>, to enable precise matching of GPS traces by snapping points to the road network</li> \n</ul> \n<p>With these capabilities, you can design more accurate and dynamic route experiences for your users. For example, a logistics company could optimize driver routes in real-time, factoring in live traffic and minimizing travel costs for deliveries.</p> \n<p><strong>Maps</strong><br /> The updated Amazon Location Maps API includes more purpose-built map styles crafted by skilled cartographers. These map styles offer professional designs that accelerate time to market and eliminate the need for custom map creation. Additionally, the Static Map Image feature allows developers to integrate static maps within applications, reducing the need for continuous data streaming and improving performance in use cases where interactivity isn’t necessary.</p> \n<p>Key features of the Maps API include:</p> \n<ul> \n <li><a href=\"https://docs.aws.amazon.com/location/latest/APIReference/API_GetTile.html\"><code>GetTile</code></a>, to download a tile from a tileset, with a specified X, Y, and Z axis values</li> \n <li><a href=\"https://docs.aws.amazon.com/location/latest/APIReference/API_GetStyleDescriptor.html\"><code>GetStyleDescriptor</code></a>, to return information about the style</li> \n <li><a href=\"https://docs.aws.amazon.com/location/latest/APIReference/API_GetStaticMap.html\"><code>GetStaticMap</code></a>, which enables the rendering of non-interactive maps for reporting or visualization purposes</li> \n</ul> \n<p><strong>Places</strong><br /> The Amazon Location Places API enhancements allow more detailed search capabilities, addressing requests for increased granularity in location data. The new capabilities include:</p> \n<ul> \n <li><a href=\"https://docs.aws.amazon.com/location/latest/APIReference/API_SearchNearby.html\"><code>SearchNearby</code></a> and <a href=\"https://docs.aws.amazon.com/location/latest/APIReference/API_Autocomplete.html\"><code>Autocomplete</code></a>, which support proximity-based queries and enable predictive text features for better user experiences</li> \n <li>Enhanced business details with categories such as Business Hours, Contact Information, and additional attributes for points of interest</li> \n</ul> \n<p>These features are especially useful for applications where users need detailed information about nearby locations, such as food delivery services or retail applications. Imagine that a customer opens a food delivery application, searches for nearby restaurants using <code>SearchNearby</code>, and retrieves restaurant details such as business hours and contact information to confirm availability. Once multiple delivery orders are assigned to a driver, the application uses <code>OptimizeWaypoints</code> to suggest the most efficient route for pickups and deliveries. As the driver follows the route, <code>SnaptoRoads</code> provides precise visualization of their location, enhancing the customer’s real-time tracking experience.</p> \n<p><span><strong>Enhanced Location Service in action</strong></span><br /> Calling the API is straightforward. You can use the <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface (AWS CLI)</a>, one of our <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a>, or the plain REST API. However, displaying the information on a map in a web or mobile app requires some additional setup. Although the process is well documented, it’s too detailed to cover fully here. In this demo, I’ll focus on using the API.</p> \n<p>Amazon Location Service allows API calls to be authenticated in two ways: through AWS API authentication (<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\">AWS Sigv4 authentication</a>) or through API keys. API keys can be more convenient for developers of mobile applications where the end user is not authenticated or when integrating with <a href=\"https://aws.amazon.com/cognito/\">Amazon Cognito</a> is not feasible. This is the recommended authentication method for front-end applications.</p> \n<p>To demonstrate the versatility of the APIs and how easily you can integrate inside your applications, I use a combination of the AWS CLI, cURL, and a graphical REST API client for each step of the demo.</p> \n<p><strong>Step 1: Create an API key</strong></p> \n<p>First, I create an API key for my application using the AWS CLI. You can also manage API keys in the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>.</p> \n<pre><code>REGION=eu-central-1\nKEYNAME=geo-key-seb\n\naws location create-key --region ${REGION} --key-name ${KEYNAME} --restrictions \\\nAllowActions=\"geo-routes:*\",\"geo-places:*\",\"geo-maps:*\",\\\nAllowResources=\"arn:aws:geo-routes:${REGION}::provider/default\",\\\n\"arn:aws:geo-places:${REGION}::provider/default\",\\\n\"arn:aws:geo-maps:${REGION}::provider/default\" \\\n--no-expiry \n\n{\n    \"Key\": \"v1.public.ey...cy\",\n    \"KeyArn\": \"arn:aws:geo:eu-central-1:02345678901:api-key/geo-key-seb\",\n    \"KeyName\": \"geo-key-seb\",\n    \"CreateTime\": \"2024-09-29T09:35:53.115000+00:00\"\n}</code></pre> \n<p>This command generates the API key, which I can now use to call Amazon Location APIs.</p> \n<p><strong>Step 2: Get geographic coordinates</strong></p> \n<p>Next, I use <code>cURL</code> to retrieve the geographic coordinates (a <a href=\"https://en.wikipedia.org/wiki/Longitude\">longitude</a> and <a href=\"https://en.wikipedia.org/wiki/Latitude\">latitude</a>) for the city center of Lille, France, by calling <code>GeoCode</code> and passing an address in the <code>QueryText</code> parameter.</p> \n<pre><code>$ curl --silent -X \"POST\" \"https://places.geo.eu-central-1.amazonaws.com/v2/geocode?key=v1.public.ey...cy\" \\\n       -d $'{ \"QueryText\": \"Grand Place, Lille, France\" }' \n \n{\"ResultItems\":[{\"PlaceId\":\"AQ...5U\",\"PlaceType\":\"Street\",\"Title\":\"Grand'Place, 59800 Lille, France\",\n                 \"Address\":{\"Label\":\"Grand'Place, 59800 Lille, France\",\n                 \"Country\":{\"Code2\":\"FR\",\"Code3\":\"FRA\",\"Name\":\"France\"},\n                 \"Region\":{\"Code\":\"HDF\",\"Name\":\"Hauts-de-France\"},\"SubRegion\":{\"Name\":\"Nord\"},\n                 \"Locality\":\"Lille\",\"District\":\"Centre\",\"PostalCode\":\"59800\",\n                 \"Street\":\"Grand'Place\",\"StreetComponents\":[{\"BaseName\":\"Grand'Place\",\"Language\":\"fr\"}]},\n                 \"Position\":[3.06361,50.63706],\n                 \"MapView\":[3.0628,50.6367,3.06413,50.63729],\n                 \"MatchScores\":{\"Overall\":1,\"Components\":{\"Address\":{\"Country\":1,\"Locality\":1,\"Intersection\":[1]}}}}]}</code></pre> \n<p>This returns several data points, including the GPS coordinates for the city center: [3.06361, 50.63706].</p> \n<p><strong>Step 3: Search for nearby places</strong></p> \n<p>Using the coordinates retrieved, I use a REST API client tool to call the <code>SearchNearby</code> API to find places of interest around Lille’s city center.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/19/2024-10-19_13-36-04.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/19/2024-10-19_13-36-04.png\" alt=\"Amazon Location Service - API call for places of interest\" width=\"3456\" height=\"2042\" /></a></p> \n<p>On the right side of the screen, I can read the API response: a list of nearby places, such as restaurants, banks, and parking areas. I can further refine the search by specifying categories or restricting the search area.</p> \n<p>The <code>SearchNearby</code> API accepts an optional <code>Filter</code> parameter that helps you restrict the search within a bounding box or to include or exclude business chains, categories, countries, or food types.</p> \n<pre><code>\"Filter\": {\n   \"BoundingBox\": [ number ],\n   \"ExcludeBusinessChains\": [ \"string\" ],\n   \"ExcludeCategories\": [ \"string\" ],\n   \"ExcludeFoodTypes\": [ \"string\" ],\n   \"IncludeBusinessChains\": [ \"string\" ],\n   \"IncludeCategories\": [ \"string\" ],\n   \"IncludeCountries\": [ \"string\" ],\n   \"IncludeFoodTypes\": [ \"string\" ]\n},</code></pre> \n<p>In my search for nearby points of interest, one of the results returned was a McDonald’s, a well-known international reference <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f354.png\" alt=\"🍔\" />.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/19/2024-10-19_13-46-16.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/19/2024-10-19_13-46-16.png\" alt=\"Amazon Location Service - SearchNearby result\" width=\"800\" height=\"360\" /></a></p> \n<p><strong>Step 4: Get driving directions</strong></p> \n<p>Finally, I use the AWS CLI to calculate driving directions between two city centers: <a href=\"https://en.wikipedia.org/wiki/Brussels\">Brussels</a>, Belgium, and <a href=\"https://en.wikipedia.org/wiki/Lille\">Lille</a>, France.</p> \n<pre><code>aws location calculate-routes    \\\n    --origin 4.35278 50.84687      \\\n    --destination 3.06361 50.63706 \\\n    --key \"v1.public.ey...cy\"</code></pre> \n<p>The response includes a <a href=\"https://en.wikipedia.org/wiki/Polygonal_chain\">polyline</a> for rendering the path on a map and a step-by-step list of driving directions.</p> \n<pre><code>...\n          \"TravelMode\": \"Car\",\n          \"Type\": \"Vehicle\",\n          \"VehicleLegDetails\": {\n            \"TravelSteps\": [\n              {\n                \"Duration\": 15,\n                \"Distance\": 75,\n                \"ExitNumber\": [],\n                \"GeometryOffset\": 0,\n                \"Type\": \"Depart\"\n              },\n              {\n                \"Duration\": 10,\n                \"Distance\": 8,\n                \"ExitNumber\": [],\n                \"GeometryOffset\": 2,\n                \"Type\": \"Turn\",\n                \"TurnStepDetails\": {\n                  \"Intersection\": [],\n                  \"SteeringDirection\": \"Right\",\n                  \"TurnIntensity\": \"Typical\"\n                }\n              },\n...</code></pre> \n<p><strong>Step 5: Displaying the driving directions on a map</strong></p> \n<p>To visualize the route on a map, I use the <a href=\"https://maplibre.org/\">MapLibre</a> library, which is a rendering engine for displaying maps in web and mobile applications. Following the <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/dev-location-libraries.html\">Amazon Location Service Developer Guide</a>, I built a basic app to display the route.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/09/Screenshot-2024-11-09-at-12.59.14 AM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/09/Screenshot-2024-11-09-at-12.59.14 AM.png\" alt=\"Amazon Location Service - Map with route\" width=\"3148\" height=\"1358\" /></a></p> \n<p>In addition to <a href=\"https://maplibre.org/\">MapLibre</a>, you can use <a href=\"https://docs.amplify.aws/react/build-a-backend/add-aws-services/geo/\">AWS Amplify</a> to integrate and display Amazon Location data in your applications.</p> \n<p><span><strong>Getting started</strong></span><br /> With these new and updated APIs, Amazon Location Service offers a more comprehensive suite of mapping and location data for your business needs. These will help to accelerate your development lifecyle by increasing developers’ agility and scalability.</p> \n<p>To get started, explore the updated <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/getting-started.html\">Amazon Location Service Developer Guide</a> and begin integrating these features today. You can also visit the <a href=\"https://aws.amazon.com/location/\">Amazon Location Service page</a> to learn more or try out the APIs with your favorite <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a> to see how they can enhance your applications.</p> \n<a href=\"https://twitter.com/sebsto\">-- seb</a>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"ebc83d4a2517b12baa456d5911cfe813e87ab6f340c78620256a33d41a1c81a0","category":"Tech"}