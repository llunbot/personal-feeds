{"title":"มาดูกันว่า Testing strategies ใน Android app มีการเปลี่ยนอะไรบ้าง ?","link":"https://www.somkiat.cc/android-new-testing-strategies/","date":1732434196000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/11/android-testing-01-150x150.jpg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/11/android-testing-01-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2024/11/android-testing-01-75x75.jpg 75w\" /></p>\n<p>จากที่ทาง Android Developer ทำการเปลี่ยนแปลงเอกสารเกี่ยวกับ <a href=\"https://developer.android.com/training/testing/fundamentals/strategies\" target=\"_blank\">Testing strategies</a><br />เป็นคำแนะนำแนวทางในการทดสอบ android app<br />เพื่อสร้าง app ที่มีคุณภาพ ทั้งความเสถียรและน่าเชื่อถือให้มากที่สุด<br />โดยพยายามให้เจอปัญหาตั้งแต่การ develop process หรือ detect early นั่นเอง<br />เพื่อลดปัญหบน production รวมทั้งง่ายต่อการ debug หรือ profiling<br />มาดูกันว่าแนวทางเป็นอย่างไรบ้าง ?</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>แสดงการทดสอบเป็น 5  layer ดัง</strong>รูป</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/11/android-testing-01.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/11/android-testing-01.jpg\" width=\"582\" height=\"318\" /></a></figure>\n\n\n\n<p><strong>Layer 1 Unit tests</strong></p>\n\n\n\n<p>เป็นการทดสอบส่วนการทำงานเล็ก ๆ ของ code<br />โดยไม่มีการทำงานกับ dependency ต่าง ๆ  ของ android framework<br />และไม่จำเป็นต้องใช้งาน emulator หรือ real device</p>\n\n\n\n<p><strong>Layer 2 Component tests</strong></p>\n\n\n\n<p>เป็นการตรวจสอบการทำงานของ function ต่าง ๆ<br />เป็นการตรวจสอบการทำงานของ component หรือ module ต่าง ๆ<br />ว่าแต่ละส่วนทำงานได้ตามที่คาดหวังหรือไม่<br />ก่อนที่จะนะแต่ละส่วนมาประกอบ หรือ ทำงานร่วมกัน<br />ยกตัวอย่างเช่น  <a href=\"https://developer.android.com/training/testing/ui-tests/screenshot\" target=\"_blank\">Screenshot testing</a></p>\n\n\n\n<p><strong>Layer 3 Feature tests</strong></p>\n\n\n\n<p>เป็นการตรวจสอบการทำงานเมื่อนำเอา<br />function, component หรือ module ต่าง ๆ  มาทำงานร่วมกัน<br />เป็นการทดสอบที่มีขนาดใหญ่ และ ซับซ้อนมากยิ่งขึ้น<br />แต่ถ้า layer 1  และ 2 ยังไม่ทำ หรือ ไม่ผ่าน ก็อาจจะทำให้ layer 3 มีปัญหามากยิ่งขึ้น<br />เช่น flaky test เป็นต้น</p>\n\n\n\n<p><strong>ยกตัวอย่างเช่น <a href=\"https://developer.android.com/training/testing/ui-tests/behavior\" target=\"_blank\">UI Behavior testing</a></strong><br />ทำการตรวจสอบ state การทำงานต่าง ๆ  บน UI<br />ซึ่งใน Android  ได้เตรียม library ไว้ให้แล้ว ใช้งานตามที่ต้องการ เช่น</p>\n\n\n\n<ul>\n<li>Espresso</li>\n\n\n\n<li>Jetpack compose</li>\n\n\n\n<li>UI Automator</li>\n\n\n\n<li>Robolectric</li>\n</ul>\n\n\n\n<p><strong>Layer 4 Application tests</strong></p>\n\n\n\n<p>เป็นการทดสอบ application ที่ต้องทำการ build เป็น APK file ก่อน (dev/debug build)<br />จากนั้นทำการติดตั้งลงเครื่อง<br />เพื่อทำการตรวจสอบการทำงาน<br />มีการทำงานร่วมกับ external system มากมาย<br />ซึ่งจำเป็นจะต้องจัดการหรือควบคุมให้ดี<br />มิเช่นนั้นการทดสอบจะไม่มีคุณภาพ หรือ ขาดความน่าเชื่อถืออย่างมาก</p>\n\n\n\n<p>ในการทดสอบจะทำงานร่วมกับการเปลี่ยนแปลงของ device ต่าง ๆ  ด้วย<br /><a href=\"https://developer.android.com/training/testing/different-screens/tools\" target=\"_blank\">การเปลี่ยนหน้าจอ</a> การหมุนหน้าจอ หรือ การเปลี่ยนภาษา หรือ การเปลี่ยน device เป็นต้น<br />สามารถใช้งาน UI behavior testing มาใช้งานได้ปกติ </p>\n\n\n\n<p><strong>Layer 5 Release candidate tests</strong></p>\n\n\n\n<p>ทำการตรวจสอบการทำงานของไฟล์ APK ที่จะ publish ออกไป<br />ซึ่งการทดสอบคล้ายกับ application tests <br />แต่ทำการ minify และ optimize แล้วสำหรับ production mode<br />มีการทดสอบแบบ end-to-end ที่ใหญ่และซับซ้อนขึ้นกว่า<br />รวมทั้ง environment ที่ทำงานด้วย ก็ใกล้เคียงกับ production อย่างมาก<br />เพื่อหาปัญหาต่าง ๆ  ในการทำงาน<br />ตลอดจนเรื่องของ <a href=\"https://developer.android.com/training/testing/instrumented-tests/performance\" target=\"_blank\">performance testing</a><br />ที่อาจจะส่งผลกระทบต่อ device และ ผู้ใช้งานอีกด้วย</p>\n\n\n\n<p>มีคำแนะนำสำหรับ การทดสอบที่มีขนาดใหญ่ขึ้น<br /><a href=\"https://developer.android.com/training/testing/instrumented-tests/stability\" target=\"_blank\">จำเป็นต้องมีความเสถียรอย่างสูง</a> ยกตัวอย่างเช่น</p>\n\n\n\n<ul>\n<li>Device configuration</li>\n\n\n\n<li>Prevent synchronization issues</li>\n\n\n\n<li>Retry mechanisms</li>\n</ul>\n\n\n\n<p>ลองศึกษา และ การแนะนำต่าง ๆ  หล่านี้ไปใช้งานกันดู<br />ขอให้สนุกกับการ coding และ testing</p>\n\n\n\n<p><br /></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"39144afb8972f374ac03382d25e135d17e37af6e018041d2a868ab81c003934c","category":"Thai"}