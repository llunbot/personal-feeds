{"title":"น่าสนใจสำหรับ KIP-932: Queues for Kafka","link":"https://www.somkiat.cc/kip-932-queues-for-kafka/","date":1687843294000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2023/06/queue-kafka-150x150.jpeg\" alt loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2023/06/queue-kafka-150x150.jpeg 150w, https://www.somkiat.cc/wp-content/uploads/2023/06/queue-kafka-75x75.jpeg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/06/queue-kafka.jpeg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/06/queue-kafka-1024x576.jpeg\" alt width=\"744\" height=\"418\" /></a></figure>\n\n\n\n<p>น่าสนใจดีกับ <strong><a href=\"https://cwiki.apache.org/confluence/display/KAFKA/KIP-932%3A+Queues+for+Kafka\" target=\"_blank\">KIP-932: Queues for Kafka</a></strong><br />KIP (Kafka Improvement Proposal) นี้ทำการใช้งาน queue ใน Kafka นั่นเอง<br />โดยปกติถ้าต้องจัดการ message ที่เข้า Topic ให้ตามรูปแบบของ Queue คือ</p>\n\n\n\n<ul>\n<li>FIFO (First In First Out)</li>\n\n\n\n<li>แต่ละ message ที่เข้ามาต้องทำงานเพียงครั้งเดียว</li>\n</ul>\n\n\n\n<p>ที่สำคัญก็ยังต้อง scale ได้ง่าย</p>\n\n\n\n<span></span>\n\n\n\n<p>ใน Kafka นั้นมักจะทำดังนี้ ยกตัวอย่างเช่น</p>\n\n\n\n<ul>\n<li>ให้ topic มี partition เดียวพอ เพราะว่าถ้ามีหลาย ๆ  partition จะไม่การันตีการทำงานตามลำดับข้าม partition ได้</li>\n\n\n\n<li>แต่ละ consumer ต้องกำหนด consumer group เข้ามา</li>\n</ul>\n\n\n\n<p><strong><em>ถ้าจะ scale ต้องทำอย่างไร ?</em></strong><br /><br />จำเป็นต้องมีหลาย ๆ partition ก็ต้องทำการเพิ่ม message key <br />เพื่อทำการ route message ที่มี message key เดียวกัน<br />ไปยัง partition เดียวกัน นั่นคือเข้าทำงานที่ consumer หรือ consumer group เดียวกัน<br />เพื่อการันตีว่า จะต้องทำงานเรียงลำดับกัน แซงคิวกันไม่ได้<br />ซึ่ง Kafka จะทำงานแบบนี้ เรียกว่า <strong>partition-based ordering</strong></p>\n\n\n\n<p>ผลที่ตามมาคือ มีบาง partition จะมี message เข้ามาเยอะเกินไป<br />จะเรียกว่า over-partition</p>\n\n\n\n<p><strong><em>ดังนั้นจึงคิดว่า น่าจะมีรูปแบบอื่นที่เหมาะสม จึงเกิดแนวคิดของ Queue for Kafka เสนอออกมา </em></strong></p>\n\n\n\n<p>ตอนนี้อยู่ในขั้นตอนการพูดคุยในประเด็นต่าง ๆ เท่านั้น</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/06/Screenshot-2566-06-27-at-12.12.18.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/06/Screenshot-2566-06-27-at-12.12.18-1024x227.png\" alt width=\"460\" height=\"102\" /></a></figure>\n\n\n\n<p>แนวคิดหลัก ๆ คือ การเพิ่มสิ่งที่เรียกว่า <strong>Share group</strong> เข้ามา<br />ให้มีทางเลือกมากขึ้นสำหรับฝั่งของ consumer ในการใช้งานรูปแบบต่าง ๆ<br />ฝั่ง producer สามารถส่ง message เข้ามายัง topic โดยไม่ต้องสนใจว่าจะเข้าไปยัง partition ไหน<br />เพราะว่าฝั่ง consumer ที่อยู่ใน share group เดียวกัน<br />จะมองเห็น message ในมุมมองของ Queue แบบปกติเลย<br />แสดงดังรูป</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/06/kafka-share-group.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/06/kafka-share-group-1024x692.png\" alt width=\"706\" height=\"476\" /></a></figure>\n\n\n\n<p>แต่ดูเหมือนจะเป็นคอขวดไหม ตรงนี้ก็น่าคิด !!<br />กับอีกอย่าง ไปใช้งานอย่างอื่นที่เก่งเรื่อง queue ดีกว่าไหม เช่น RabbitMQ เป็นต้น</p>\n\n\n\n<p>ลองศึกษากันดูครับ รู้ไว้ไม่เสียหาย<br />เป็นอีกหนึ่งแนวคิดที่น่าสนใจ</p>\n\n\n\n<p><strong>Reference Websites</strong></p>\n\n\n\n<ul>\n<li><a href=\"https://medium.com/@andrew_schofield/queues-for-kafka-29afa8aeed86\" target=\"_blank\">Queues for Kafka</a></li>\n\n\n\n<li><a href=\"https://twitter.com/stereosky/status/1658404535696609280\" target=\"_blank\">From Twitter</a></li>\n</ul>\n\n\n\n<p><br /></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"e835fa4b5b628d2667381accd1e6964bcdb4842409ef4c13018a25c63bbdc5c8","category":"Thai"}