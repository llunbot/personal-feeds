{"title":"False positives: A big problem for secret scanners","link":"https://www.hashicorp.com/blog/false-positives-a-big-problem-for-secret-scanners","date":1727884800000,"content":"<p>False positives are a significant but often unnoticed cybersecurity challenge. When a security alert signals a potential threat that turns out to be benign, security and engineering teams scramble to investigate a non-issue. While this may appear to be a minor distraction, repeated false positives can exhaust resources, overwhelm security teams, and greatly increase the risk of missed threats. They can also affect the delivery of other organizational priorities and increase the potential for actual threats to go unnoticed.</p>\n\n<h2>False positives in secret scanning</h2>\n\n<p>False positives occur when a <a href=\"https://www.hashicorp.com/blog/how-secret-scanning-works\">secret scanning</a> solution flags legitimate content as suspicious. The primary causes of false positives are: </p>\n\n<ul>\n<li>Overly sensitive tools</li>\n<li>Solutions without appropriate contextual data</li>\n<li>Secret scanners that lack appropriate functionality</li>\n</ul>\n\n<h3>Sensitivity</h3>\n\n<p>Secret scanning solutions configured to be overly sensitive flag any deviation from the norm. Whether these configurations are inadvertent or native functionality, too-strict thresholds mean normal activity triggers alerts that distract security analysts. Secret scanning solutions should offer the ability to configure custom rules so users can adjust the sensitivity of the solution based on their organization’s needs.</p>\n\n<h3>Contextual data</h3>\n\n<p>Scanning solutions that have incomplete contextual data or references may not be able to correctly interpret findings. Such tools typically rely on a binary threat detection matrix, either declaring a finding as a threat or not. Additionally, these tools can’t assign severity ratings, so all findings get the same priority. This means that teams must investigate and adjudicate all findings, legitimate or otherwise. </p>\n\n<p>Contextual analysis considers a broader set of criteria in which an event may occur. For example, a secret scanning solution that leverages contextual analysis compares a potentially leaked or unmanaged secret to the secrets management system used by the organization.</p>\n\n<h2>Costs of false positives</h2>\n\n<p>False positives attributed to secret scanning solutions increase the risk of breach because they can distract security teams from actual threats, but they can also impact costs as well. These costs include: </p>\n\n<ul>\n<li><strong>Missed threats:</strong> In the aftermath of the high-profile Target data breach of 2013, <a href=\"https://www.reuters.com/article/us-target-breach-senate-idUKBREA2O1VA20140325\">investigators discovered</a> that the retail company’s security solution actually sent out multiple automated alerts warning of a potential intrusion, but those alerts were ignored. The result? One of the biggest data breaches in history. The Target data breach compromised personal and payment card data of about 40 million customers. Many of those customers fell victim to identity theft. As for Target, the data breach cost the company more than <a href=\"https://www.reuters.com/article/us-target-cyber-settlement-idUSKBN18J2GH\">$200 million</a>, including costs for forensic investigations, security enhancements, legal settlements, and customer credit monitoring, among others. </li>\n<li><strong>Wasted time and resources:</strong> Each false positive requires an investigation by the security team. Security analysts spend valuable time digging into alerts that pose no actual threat, diverting them from more critical issues. </li>\n<li><strong>Increased labor costs:</strong> As the number of false positives increases, so does the workload. Organizations may need to hire additional security analysts to keep up, inflating personnel costs. During a recent survey we conducted, 67 percent of respondents indicated that it takes their organization more than 5 hours to identify a false positive. According to Glassdoor, the <a href=\"https://www.glassdoor.com/Salaries/security-software-engineer-salary-SRCH_KO0,26.htm\">average salary for a security engineer</a> in the United States is $165,000. That means that those organizations are incurring at least $413 in increased labor costs for each false positive. For an organization that experiences just 1,000 false positives a year results in more than $400,000 in increases or wasted labor costs.</li>\n<li><strong>Security tool maintenance:</strong> Constant tweaking of security tools to reduce false positives can become time-consuming and expensive. Fine-tuning detection rules and thresholds takes significant effort, especially as organizations scale their infrastructure. </li>\n<li><strong>Alert fatigue:</strong> Over time, security teams faced with constant false positives may start ignoring alerts altogether, increasing the likelihood that a real threat will slip through the cracks. This takes us back to the example costs of “missed threats” mentioned earlier.</li>\n<li><strong>Burnout and turnover:</strong> The repetitive nature of investigating false positives can lead to job dissatisfaction and burnout, pushing skilled analysts out of organizations and leaving companies with talent gaps. </li>\n<li><strong>Decreased trust in security systems:</strong> If security tools consistently generate inaccurate alerts, organizations may lose faith in their cybersecurity systems, making them hesitant to rely on automated responses or trust system-generated insights. </li>\n</ul>\n\n<h2>Reduce false positives with HCP Vault Radar</h2>\n\n<p>HashiCorp understands the impact of false positives. That’s why we built HCP Vault Radar with an intense focus on reducing false positives when scanning repositories, <a href=\"https://www.hashicorp.com/blog/how-to-stop-secret-exposure-in-your-collaboration-platforms\">collaboration tools</a>, or data storage. This includes automatically assigning severity to findings that prioritize the most important items.</p>\n\n<p><strong>Version history:</strong> When HCP Vault Radar discovers a finding in the latest version of a file, it assigns a higher priority because it is likely that this finding has not been previously evaluated and is therefore more likely to be a secret.</p>\n\n<p><strong>High entropy:</strong> HCP Vault Radar evaluates the entropy (randomness) of content using entropy algorithms. These algorithms are highly effective at identifying random or complex strings that indicate the content may be an exposed secret. Vault Radar also evaluates string literals in code for entropy, which helps identify potentially suspicious strings in any format.</p>\n\n<p><strong>Activeness checks:</strong> Active credentials represent the most significant threat. When HCP Vault Radar finds a credential, it will call out to the associated application to check if the secret is still active. Active credentials are marked as critical risks within the prioritization portal. Currently, Vault Radar can test for:</p>\n\n<ul>\n<li>Google Cloud API keys</li>\n<li>Amazon Web Services (AWS) access keys</li>\n<li>Personal access tokens for GitHub</li>\n<li>JSON web tokens (JWT)</li>\n</ul>\n\n<p><strong>Vault correlation:</strong> To further support prioritization, HCP Vault Radar can correlate if a leaked secret is stored in a Vault secrets manager. Most credentials in Vault are used in critical production environments, so HCP Vault Radar gives exposed secrets a higher severity score when they are also found in Vault’s key-value stores. This provides the contextual data that secret scanners have been sorely lacking.</p>\n\n<p><strong>Ignore rules:</strong> HCP Vault Radar ‘ignore’ rules allow you to ignore certain events based on a set of rules unique to your organization. There are several types of ignore rules including:</p>\n\n<ul>\n<li><strong>Path:</strong> Path-based ignore rules allow you to ignore entire paths, such as directories used for documentation, or specific files within a resource.</li>\n<li><strong>Resource:</strong> Resource ignore rules allow you to create ignore rules that are scoped to a specific resource. You could configure ignore rules on honeypot repositories or documentation repositories that may generate a high level of unimportant alerts</li>\n<li><strong>Secret type:</strong> Secret type ignore rules allow you to ignore specific types of secrets. These rules can be configured by data source, meaning you could set a rule to ignore API tokens for a GitHub data source, but Confluence API tokens would still trigger an event. Types of secrets include key value pairs, API keys, passwords, certificates, tokens, credentials, and database credentials.</li>\n<li><strong>Secret:</strong> Secret ignore rules allow you to ignore specific secret values that may be used in a data source, such as an example password used in documentation or as an example within the application.</li>\n</ul>\n<h2>Remediate unmanaged secrets</h2>\n\n<p>In addition to secret scanning, HCP Vault Radar supports a robust set of remediation workflows via ticketing and alerting solutions, including:</p>\n\n<ul>\n<li><a href=\"https://developer.hashicorp.com/hcp/docs/vault-radar/get-started/set-up-alerting/slack/setup\">Slack</a> (i<a href=\"https://www.youtube.com/watch?v=alMOmiUljcQ\">ntegration demo</a>)</li>\n<li><a href=\"https://developer.hashicorp.com/hcp/docs/vault-radar/get-started/set-up-alerting/pagerduty/setup\">PagerDuty</a></li>\n<li><a href=\"https://developer.hashicorp.com/hcp/docs/vault-radar/get-started/set-up-alerting/splunk\">Splunk</a></li>\n<li><a href=\"https://developer.hashicorp.com/hcp/docs/vault-radar/get-started/set-up-ticketing/jira\">JIRA</a></li>\n<li><a href=\"https://developer.hashicorp.com/hcp/docs/vault-radar/get-started/set-up-ticketing/servicenow/setup\">ServiceNow</a></li>\n</ul>\n\n<p>These integrations leverage common tools in DevOps, platform engineering, and security teams’ workflows supporting incident response processes. HCP Vault Radar transmits all of the information necessary to remediate its findings, including:</p>\n\n<ul>\n<li>Author</li>\n<li>Location</li>\n<li>Activeness</li>\n<li>If the secret is in the current version of a document or history</li>\n<li>Whether the secret is publicly accessible</li>\n</ul>\n\n<p>The secret is never exposed in the HCP console. Instead, the user is provided a link to the location where the secret can be found, investigated, and remediated.</p>\n\n<h2>Next steps</h2>\n\n<p>HCP Vault Radar is an exciting new addition to <a href=\"https://www.hashicorp.com/products/vault\">HashiCorp Vault</a>’s secret lifecycle management capabilities that helps enterprises reduce the risk associated with credential exposure. Discovery of unmanaged secrets and subsequent remediation workflows further differentiate Vault’s secrets lifecycle management offering by helping organizations take a proactive approach to remediation <em>before</em> a data breach occurs.</p>\n\n<h2>Additional resources</h2>\n\n<ul>\n<li><a href=\"https://developer.hashicorp.com/hcp/docs/vault-radar\">What is HCP Vault Radar?</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=XC7KA8hxQL4\">HCP Vault Radar demo</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/how-secret-scanning-works\">What is secret scanning</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/solutions-to-secret-sprawl\">Solutions to secret sprawl</a></li>\n<li><a href=\"https://www.hashicorp.com/blog/secret-remediation-best-practices\">Secret remediation best practices</a></li>\n<li><a href=\"https://developer.hashicorp.com/hcp/tutorials/get-started-hcp-vault-radar\">HCP Vault Radar tutorials</a></li>\n</ul>\n","author":"Rich Dubose","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"11de92d1d92bdaacfaa4adc9015bd8381eb0398dc30d255e99ea3617b0dd9847","category":"Tech"}