{"title":"When Words Cannot Describe: Designing For AI Beyond Conversational Interfaces","link":"https://smashingmagazine.com/2024/02/designing-ai-beyond-conversational-interfaces/","date":1706878800000,"content":"<p>Few technological innovations can completely change the way we interact with computers. Lucky for us, it seems we’ve won front-row seats to the unfolding of the next paradigm shift. </p>\n<p>These shifts tend to unlock a new abstraction layer to hide the working details of a subsystem. Generalizing details allows our complex systems to appear simpler &amp; more intuitive. This streamlines coding programs for computers as well as designing the interfaces to interact with them.</p>\n<p>The <strong>Command Line Interface</strong>, for instance, created an abstraction layer to enable interaction through a stored program. This hid the subsystem details once exposed in earlier computers that were only programmable by inputting 1s &amp; 0s through switches.</p>\n<p><strong>Graphical User Interfaces (GUI)</strong> further abstracted this notion by allowing us to manipulate computers through visual metaphors. These abstractions made computers accessible to a mainstream of non-technical users.</p>\n<p>Despite these advances, we still haven’t found a <em>perfectly</em> intuitive interface — the troves of support articles across the web make that evident. Yet recent advances in AI have convinced many technologists that the next evolutionary cycle of computing is upon us.</p>\n<a href=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/1-smashing-abstraction-intro.gif\"><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/1-smashing-abstraction-intro.gif\" /></a>Layers of interface abstraction, bottom to top: Command Line Interfaces, Graphical User Interfaces, &amp; AI-powered Conversational Interfaces. (Source: <a href=\"https://www.maximillian.nyc/\">Maximillian Piras</a>) (<a href=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/1-smashing-abstraction-intro.gif\">Large preview</a>)\n\nThe Next Layer Of Interface Abstraction\n<p>A branch of machine learning called <strong>generative AI</strong> drives the bulk of recent innovation. It leverages pattern recognition in datasets to establish probabilistic distributions that enable novel constructions of text, media, &amp; code. <a href=\"https://www.gatesnotes.com/The-Age-of-AI-Has-Begun\">Bill Gates believes</a> it’s “the most important advance in technology since the graphical user interface” because it can make controlling computers even easier. A newfound ability to interpret unstructured data, such as natural language, unlocks new inputs &amp; outputs to enable <a href=\"https://twitter.com/AviSchiffmann/status/1708439854005321954\">novel</a> <a href=\"https://www.youtube.com/watch?v=9lNIwOOMVHk\">form</a> <a href=\"https://www.youtube.com/watch?v=Yla0f5JZg78\">factors</a>.</p>\n<p>Now our universe of information can be instantly invoked through an interface as intuitive as talking to another human. These are the computers we’ve dreamed of in science fiction, akin to systems like Data from Star Trek. Perhaps computers up to this point were only prototypes &amp; we’re now getting to the actual product launch. Imagine <strong>if building the internet was laying down the tracks, AIs could be the trains to transport all of our information at breakneck speed</strong> &amp; we’re about to see what happens when they barrel into town.</p>\n<blockquote>“Soon the pre-AI period will seem as distant as the days when using a computer meant typing at a C:&gt; prompt rather than tapping on a screen.”<br /><br />— Bill Gates in “<a href=\"https://www.gatesnotes.com/The-Age-of-AI-Has-Begun\">The Age of AI Has Begun</a>”</blockquote>\n\n<p>If everything is about to change, so must the mental models of software designers. As <a href=\"https://www.lukew.com/ff/entry.asp?933\">Luke Wroblewski</a> once popularized mobile-first design, the next zeitgeist is likely AI-first. Only through understanding AI’s constraints &amp; capabilities can we craft delight. Its influence on the discourse of interface evolution has already begun.</p>\n<p>Large Language Models (LLMs), for instance, are a type of AI utilized in many new applications &amp; their text-based nature leads many to believe a conversational interface, such as a chatbot, is a fitting form for the future. The notion that AI is something you talk to <a href=\"https://www.wired.com/2013/03/conversational-user-interface/\">has been permeating across the industry for years</a>. Robb Wilson, the co-owner of UX Magazine, calls conversation “the infinitely scalable interface” in his book <em>The Age of Invisible Machines</em> (2022). <a href=\"https://www.designerfund.com/blog/how-figma-midjourney-and-databricks-harness-ai-in-design/\">Noah Levin, Figma’s VP of Product Design, contends</a> that “it’s a very intuitive thing to learn how to talk to something.” Even a herald of GUIs such as <a href=\"https://www.gatesnotes.com/The-Age-of-AI-Has-Begun\">Bill Gates posits</a> that “our main way of controlling a computer will no longer be pointing and clicking.” </p>\n<a href=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/2-smashing-abstraction-mscopilot.gif\"><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/2-smashing-abstraction-mscopilot-800px.gif\" /></a>Microsoft Copilot is a new conversational AI feature being integrated across their office suite. (Source: <a href=\"https://www.microsoft.com/en-us/microsoft-365/blog/2023/03/16/introducing-microsoft-365-copilot-a-whole-new-way-to-work/\">Microsoft</a>) (<a href=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/2-smashing-abstraction-mscopilot.gif\">Large preview</a>)\n\n<p>The hope is that conversational computers will flatten learning curves. <a href=\"https://www.rabbit.tech/keynote\">Jesse Lyu, the founder of Rabbit, asserts</a> that a natural language approach will be “so intuitive that you don’t even need to learn how to use it.”</p>\n<p>After all, it’s not as if Data from Stark Trek came with an instruction manual or onboarding tutorial. From this perspective, the <a href=\"https://www.shopify.com/partners/blog/conversational-interfaces\">evolutionary tale</a> of conversational interfaces superseding GUIs seems logical &amp; echoes the earlier shift away from command lines. But others have <a href=\"https://wattenberger.com/thoughts/boo-chatbots\">opposing opinions</a>, some going as far as <a href=\"https://maggieappleton.com/lm-sketchbook\">Maggie Appleton</a> to call conversational interfaces like chatbots “the lazy solution.”</p>\n<p>This might seem like a schism at first, but it’s more so a symptom of a simplistic framing of interface evolution. Command lines are far from extinct; technical users still prefer them for their greater flexibility &amp; efficiency. For use cases like software development or automation scripting, the added abstraction layer in graphical no-code tools can act as a barrier rather than a bridge.</p>\n<p>GUIs were revolutionary but not a panacea. Yet there is ample research to suggest conversational interfaces won’t be one, either. For certain interactions, they can decrease usability, increase cost, &amp; introduce security risk relative to GUIs.</p>\n<p><strong>So, what is the right interface for artificially intelligent applications?</strong> This article aims to inform that design decision by contrasting the capabilities &amp; constraints of conversation as an interface.</p>\n<h3>Connecting The Pixels</h3>\n<p>We’ll begin with some historical context, as the key to knowing the future often starts with looking at the past. Conversational interfaces feel new, but we’ve been able to chat with computers for decades.</p>\n<p>Joseph Weizenbaum invented the first chatbot, <a href=\"https://en.wikipedia.org/wiki/ELIZA\">ELIZA</a>, during an MIT experiment in 1966. This laid the foundation for the following generations of language models to come, from voice assistants like Alexa to those annoying phone tree menus. Yet the majority of chatbots were seldom put to use beyond <a href=\"https://www.theverge.com/2021/12/23/22851451/amazon-alexa-by-the-way-use-case-functionality-plateaued\">basic tasks like setting timers</a>.</p>\n<p>It seemed most consumers weren’t that excited to converse with computers after all. But something changed last year. Somehow we went from <a href=\"https://www.cnet.com/tech/computing/why-were-all-obsessed-with-the-mind-blowing-chatgpt-ai-chatbot/\">CNET reporting</a> that “72% of people found chatbots to be a waste of time” to ChatGPT gaining <a href=\"https://techcrunch.com/2023/11/06/openais-chatgpt-now-has-100-million-weekly-active-users/\">100 million weekly active users</a>.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/3-abstraction-eliza.png\" /></p>\n<p>What took chatbots from arid to astonishing? Most assign credit to <a href=\"https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf\">OpenAI’s 2018 invention</a> (PDF) of the <strong>Generative Pre-trained Transformer (GPT)</strong>. These are a new type of LLM with significant improvements in natural language understanding. Yet, at the core of a GPT is the earlier <a href=\"https://arxiv.org/pdf/1706.03762.pdf\">innovation of the transformer architecture introduced in 2017</a> (PDF). This architecture enabled the parallel processing required to capture long-term context around natural language inputs. Diving deeper, this architecture is only possible thanks to the <a href=\"https://arxiv.org/pdf/1409.0473.pdf\">attention mechanism introduced in 2014</a> (PDF). This enabled the selective weighing of an input’s different parts.</p>\n<p>Through this assemblage of complementary innovations, conversational interfaces now seem to be capable of competing with GUIs on a wider range of tasks. It took a surprisingly similar path to unlock GUIs as a viable alternative to command lines. Of course, it required hardware like a mouse to capture user signals beyond keystrokes &amp; screens of adequate resolution. However, researchers found the missing software ingredient years later with the invention of bitmaps.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/4-abstraction-sketchpad.png\" /></p>\n<p>Bitmaps allowed for complex pixel patterns that earlier vector displays struggled with. Ivan Sutherland’s Sketchpad, for instance, was the inaugural GUI but couldn’t support concepts like overlapping windows. IEEE Spectrum’s <a href=\"https://spectrum.ieee.org/graphical-user-interface\">Of Mice and Menus</a> (1989) details the progress that led to the bitmap’s invention by Alan Kay’s group at Xerox Parc. This new technology enabled the revolutionary <a href=\"https://en.wikipedia.org/wiki/WIMP_(computing\">WIMP (windows, icons menus, and pointers)</a>) paradigm that helped onboard an entire generation to personal computers through intuitive visual metaphors.</p>\n<p>Computing no longer required a preconceived set of steps at the outset. It may seem trivial in hindsight, but the presenters were already alluding to an artificially intelligent system during <a href=\"https://www.youtube.com/watch?v=6orsmFndx_o\">Sketchpad’s MIT demo</a> in 1963. This was an <strong>inflection point transforming an elaborate calculating machine into an exploratory tool</strong>. Designers could now craft interfaces for experiences where a need to discover eclipsed the need for flexibility &amp; efficiency offered by command lines.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/5-abstraction-susankare.png\" /></p>\n<h3>Parallel Paradigms</h3>\n<p>Novel adjustments to existing technology made each new interface viable for mainstream usage — the cherry on top of a sundae, if you will. In both cases, the foundational systems were already available, but a different data processing decision made the output meaningful enough to attract a mainstream audience beyond technologists.</p>\n<p>With bitmaps, GUIs can organize pixels into a grid sequence to create complex skeuomorphic structures. With GPTs, conversational interfaces can organize unstructured datasets to create responses with human-like (or greater) intelligence.</p>\n<p>The prototypical interfaces of both paradigms were invented in the 1960s, then saw a massive delta in their development timelines — a case study unto itself. Now we find ourselves at another <strong>inflection point: in addition to calculating machines &amp; exploratory tools, computers can act as life-like entities</strong>.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/6-abstraction-movie-her.png\" /></p>\n<p>But which of our needs call for conversational interfaces over graphical ones? We see a theoretical solution to our need for companionship in the movie <em>Her</em>, where the protagonist falls in love with his digital assistant. But what is the benefit to those of us who are content with our organic relationships? We can look forward to validating the assumption that <strong>conversation is a more intuitive interface</strong>. It seems plausible because a few core components of the WIMP paradigm have well-documented usability issues.</p>\n<p><a href=\"https://www.nngroup.com/articles/icon-usability/\">Nielsen Norman Group</a> reports that cultural differences make universal recognition of icons rare — menus trend towards an unusable mess with the inevitable addition of complexity over time. Conversational interfaces <em>appear</em> more usable because you can just tell the system when you’re confused! But as we’ll see in the next sections, they have their fair share of usability issues as well.</p>\n<p>By replacing menus with input fields, we must wonder if we’re trading one set of usability problems for another.</p>\nThe Cost of Conversation\n<p>Why are conversational interfaces so popular in science fiction movies? In a <a href=\"https://rhizome.org/editorial/2014/feb/03/ill-send-os-world-her-product-spec/\">Rhizome essay</a>, Martine Syms theorizes that they make “for more cinematic interaction and a leaner production.” This same cost/benefit applies to app development as well. Text completion delivered via written or spoken word is the core capability of an LLM. This makes conversation the simplest package for this capability from a design &amp; engineering perspective.</p>\n<p>Linus Lee, a prominent AI Research Engineer, <a href=\"https://thesephist.com/posts/latent/\">characterizes</a> it as “exposing the algorithm’s raw interface.” Since the interaction pattern &amp; components are already largely defined, there isn’t much more to invent — everything can get thrown into a chat window.</p>\n<blockquote>“If you’re an engineer or designer tasked with harnessing the power of these models into a software interface, the easiest and most natural way to “wrap” this capability into a UI would be a conversational interface”<br /><br />— Linus Lee in <a href=\"https://thesephist.com/posts/latent/\">Imagining Better Interfaces to Language Models</a></blockquote>\n\n<p>This is further validated by <a href=\"https://www.theatlantic.com/technology/archive/2023/11/sam-altman-open-ai-chatgpt-chaos/676050/?gift=bQgJMMVzeo8RHHcE1_KM0WVuODpKll0A708pOI0Ple4&amp;utm_source=copy-link&amp;utm_medium=social&amp;utm_campaign=share\">The Atlantic’s reporting on ChatGPT’s launch</a> as a “low-key research preview.” OpenAI’s hesitance to frame it as a product suggests a lack of confidence in the user experience. The internal expectation was so low that employees’ highest guess on first-week adoption was 100,000 users (90% shy of the actual number).</p>\n<p>Conversational interfaces are cheap to build, so they’re a logical starting point, but you get what you pay for. If the interface doesn’t fit the use case, downstream UX debt can outweigh any upfront savings.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/7-abstraction-llmwrapper.png\" /></p>\n<h3>Forgotten Usability Principles</h3>\n<p><a href=\"https://www.bloomberg.com/news/articles/1998-05-25/steve-jobs-theres-sanity-returning\">Steve Jobs once said</a>, “People don’t know what they want until you show it to them.” Applying this thinking to interfaces echoes a usability evaluation called <em>discoverability</em>. <a href=\"https://www.nngroup.com/articles/navigation-ia-tests/\">Nielsen Norman Group</a> defines it as a user’s ability to “encounter new content or functionality that they were not aware of.”</p>\n<p>A well-designed interface should help users discover what features exist. The interfaces of many popular generative AI applications today revolve around an input field in which a user can type in anything to prompt the system. The problem is that it’s often unclear what a user <em>should</em> type in to get ideal output. Ironically, a theoretical <a href=\"https://www.forbes.com/sites/forbesagencycouncil/2023/07/20/generative-ai-and-solving-the-blank-page-problem/\">solution to writer’s block</a> may have a blank page problem itself.</p>\n<blockquote>“I think AI has a problem with these missing user interfaces, where, for the most part, they just give you a blank box to type in, and then it’s up to you to figure out what it might be able to do.”<br /><br />— Casey Newton on <a href=\"https://www.nytimes.com/2023/10/27/podcasts/hardfork-meta-lawsuit-mkbhd-dalle.html\">Hard Fork Podcast</a></blockquote>\n\n<p>Conversational interfaces excel at mimicking human-to-human interaction but can fall short elsewhere. A popular image generator named Midjourney, for instance, only supported text input at first but is now <a href=\"https://www.zdnet.com/article/later-discord-midjourney-ai-tool-is-moving-to-dedicated-website/\">moving towards a GUI</a> for “greater ease of use.”</p>\n<p>This is a good reminder that as we venture into this new frontier, we cannot forget classic human-centered principles like those in Don Norman’s seminal book <em>The Design of Everyday Things</em> (1988). Graphical components still seem better aligned with his advice of providing explicit affordances &amp; signifiers to increase discoverability.</p>\n<p>There is also Jakob Nielsen’s list of <a href=\"https://www.nngroup.com/articles/ten-usability-heuristics/\">10 usability heuristics</a>; many of today’s conversational interfaces seem to ignore every one of them. Consider the <strong>first usability heuristic</strong> explaining how visibility of system status educates users about the consequences of their actions. It uses a metaphorical map’s “You Are Here” pin to explain how proper orientation informs our next steps.</p>\n<p><strong>Navigation is more relevant to conversational interfaces like chatbots than it might seem</strong>, even though all interactions take place in the same chat window. The backend of products like ChatGPT will navigate across a neural network to craft each response by focusing attention on a different part of their training datasets.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/8-abstraction-roleplay.png\" /></p>\n<p>Putting a pin on the proverbial map of their parametric knowledge isn’t trivial. LLMs are so opaque that even <a href=\"https://openaipublic.blob.core.windows.net/neuron-explainer/paper/index.html\">OpenAI admits</a> they “do not understand how they work.” Yet, it is possible to tailor inputs in a way that loosely guides a model to craft a response from different areas of its knowledge.</p>\n<p>One popular technique for guiding attention is <strong>role-playing</strong>. You can ask an LLM to assume a role, such as by inputting “imagine you’re a historian,” to effectively switch its mode. <a href=\"https://promptengineering.org/role-playing-in-large-language-models-like-chatgpt/\">The Prompt Engineering Institute explains</a> that when “training on a large corpus of text data from diverse domains, the model forms a complex understanding of various roles and the language associated with them.” Assuming a role invokes associated aspects in an AI’s training data, such as tone, skills, &amp; rationality.</p>\n<p>For instance, a historian role responds with factual details whereas a storyteller role responds with narrative descriptions. Roles can also improve task efficiency through tooling, such as by assigning a data scientist role to generate responses with Python code.</p>\n<p>Roles also reinforce social norms, as <a href=\"https://www.youtube.com/watch?v=ieWT6X2Yh_g\">Jason Yuan remarks</a> on how “your banking AI agent probably shouldn’t be able to have a deep philosophical chat with you.” Yet conversational interfaces will bury this type of system status in their message history, forcing us to keep it in our <a href=\"https://www.nngroup.com/articles/working-memory-external-memory/\">working memory</a>.</p>\n<a href=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/9-abstraction-rolebot.gif\"><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/9-abstraction-rolebot.gif\" /></a>A theoretical AI chatbot that uses a segmented controller to let users specify a role in one click — each button automatically adjusts the LLM’s system prompt. (Source: <a href=\"https://www.maximillian.nyc/\">Maximillian Piras</a>) (<a href=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/9-abstraction-rolebot.gif\">Large preview</a>)\n\n<p>The lack of persistent signifiers for context, like roleplay, can lead to usability issues. For clarity, we must constantly ask the AI’s status, similar to typing <code>ls</code> &amp; <code>cd</code> commands into a terminal. Experts can manage it, but the added cognitive load is likely to weigh on novices. The problem goes beyond human memory, systems suffer from a similar cognitive overload. Due to data limits in their context windows, a user must eventually reinstate any roleplay below the system level. If this type of information persisted in the interface, it would be clear to users &amp; could be automatically reiterated to the AI in each prompt.</p>\n<p><a href=\"http://Character.ai\">Character.ai</a> achieves this by using historical figures as familiar focal points. Cultural cues lead us to ask different types of questions to “Al Pacino” than we would “Socrates.” A “character” becomes a heuristic to set user expectations &amp; automatically adjust system settings. It’s like posting up a restaurant menu; visitors no longer need to ask what there is to eat &amp; they can just order instead.</p>\n<blockquote>“Humans have limited short-term memories. Interfaces that promote recognition reduce the amount of cognitive effort required from users.”<br /><br />— Jakob Nielsen in “<a href=\"https://www.nngroup.com/articles/ten-usability-heuristics/\">10 Usability Heuristics for User Interface Design</a>”</blockquote>\n\n<p>Another forgotten usability lesson is that some tasks are easier to do than to explain, especially through the <a href=\"https://www.nngroup.com/articles/direct-manipulation/\">direct manipulation</a> style of interaction popularized in GUIs.</p>\n<p>Photoshop’s new generative AI features reinforce this notion by integrating with their graphical interface. While <a href=\"https://www.adobe.com/products/photoshop/generative-fill.html\">Generative Fill</a> includes an input field, it also relies on skeuomorphic controls like their classic lasso tool. Describing which part of an image to manipulate is much more cumbersome than clicking it.</p>\n<p><strong>Interactions should remain outside of an input field when words are less efficient.</strong> Sliders seem like a better fit for sizing, as saying “make it bigger” leaves too much room for subjectivity. Settings like colors &amp; aspect ratios are easier to select than describe. Standardized controls can also let systems better organize prompts behind the scenes. If a model accepts specific values for a parameter, for instance, the interface can provide a natural mapping for how it should be input.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/10-abstraction-promptgui.png\" /></p>\n<p>Most of these usability principles are over three decades old now, which may lead some to wonder if they’re still relevant. <a href=\"https://www.nngroup.com/articles/ten-usability-heuristics/\">Jakob Nielsen recently remarked on the longevity of their relevance</a>, suggesting that “when something has remained true for 26 years, it will likely apply to future generations of user interfaces as well.” However, honoring these usability principles doesn’t require adhering to classic components. Apps like Krea are already exploring <a href=\"https://twitter.com/MaximillianNYC/status/1733627162517794899/video/1\">new GUI</a> to manipulate generative AI.</p>\nPrompt Engineering Is Engineering\n<p>The biggest usability problem with today’s conversational interfaces is that they offload technical work to non-technical users. In addition to low discoverability, another similarity they share with command lines is that <strong>ideal output is only attainable through learned commands</strong>. We refer to the practice of tailoring inputs to best communicate with generative AI systems as “prompt engineering”. The name itself suggests it’s an expert activity, along with the fact that becoming proficient in it can lead to a <a href=\"https://www.wsj.com/tech/ai/talking-to-chatbots-is-now-a-200k-job-so-i-applied-258bd5f0\">$200k salary</a>.</p>\n<p>Programming with natural language is a fascinating advancement but seems misplaced as a requirement in consumer applications. Just because anyone can now speak the same language as a computer doesn’t mean they know what to say or the best way to say it — we need to guide them. While all new technologies have learning curves, this one feels steep enough to hinder further adoption &amp; long-term retention.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/11-abstraction-magicstudio.jpeg\" /></p>\n<p>Prompt engineering as a prerequisite for high-quality output seems to have taken on the mystique of a dark art. Many marketing materials for AI features reinforce this through terms like “magic.” If we assume there is a positive feedback loop at play, this opaqueness must be an inspiring consumer intrigue.</p>\n<p>But positioning products in the realm of spellbooks &amp; shamans also suggests an indecipherable experience — is this a good long-term strategy? If we assume Steve Krug’s influential lessons from <a href=\"https://sensible.com/dont-make-me-think/\"><em>Don’t Make Me Think</em></a> (2000) still apply, then most people won’t bother to study proper prompting &amp; instead will <em>muddle through</em>.</p>\n<p>But the problem with trial &amp; error in generative AI is that there aren’t any error states; you’ll always get a response. For instance, if you ask an LLM to do the math, it will provide you with confident answers that may be <a href=\"https://garymarcus.substack.com/p/math-is-hard-if-you-are-an-llm-and\">completely wrong</a>. So it becomes harder to learn from errors when we are unaware if a response is a hallucination. As OpenAI’s <a href=\"https://twitter.com/karpathy/status/1733299213503787018\">Andrej Karpathy suggests</a>, hallucinations are not necessarily a bug because LLMs are “dream machines,” so it <strong>all depends on how interfaces set user expectations</strong>.</p>\n<blockquote>“But as with people, finding the most meaningful answer from AI involves asking the right questions. AI is neither psychic nor telepathic.”<br /><br />— Stephen J. Bigelow in <a href=\"https://www.techtarget.com/whatis/feature/Skills-needed-to-become-a-prompt-engineer\">5 Skills Needed to Become a Prompt Engineer</a></blockquote>\n\n<p>Using magical language risks leading novices to the magical thinking that AI is omniscient. It may not be obvious that its <em>knowledge</em> is limited to the training data.</p>\n<ul>\n<li>When reaching the limits of this dataset, will users know to complement it with <a href=\"https://blogs.nvidia.com/blog/what-is-retrieval-augmented-generation/\">Retrieval Augmented Generation</a>?</li>\n<li>Will users know to explore different prompting techniques, such as <a href=\"https://www.promptingguide.ai/techniques/fewshot\">Few-Shot</a> or <a href=\"https://www.promptingguide.ai/techniques/cot\">Chain of Thought</a>, to adjust an AI’s reasoning?</li>\n</ul>\n<p>Once the magic dust fades away, software designers will realize that these decisions <strong>are</strong> the user experience!</p>\n<p>Crafting delight comes from selecting the right prompting techniques, knowledge sourcing, &amp; model selection for the job to be done. We should be exploring how to offload this work from our users. </p>\n<ul>\n<li>Empty states could explain the limits of an AI’s knowledge &amp; allow users to fill gaps as needed.</li>\n<li>Onboarding flows could learn user goals to recommend relevant models tuned with the right reasoning.</li>\n<li>An equivalent to fuzzy search could markup user inputs to educate them on useful adjustments.</li>\n</ul>\n<p>We’ve begun to see a hint of this with OpenAI’s image generator <a href=\"https://community.openai.com/t/api-image-generation-in-dall-e-3-changes-my-original-prompt-without-my-permission/476355\">rewriting</a> a user’s input behind the scenes to optimize for better image output.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/12-abstraction-promptengineering.png\" /></p>\n<h3>Lamborghini Pizza Delivery</h3>\n<p>Aside from the cognitive cost of usability issues, there is a <strong>monetary cost</strong> to consider as well. Every interaction with a conversational interface invokes an AI to reason through a response. This requires a lot more computing power than clicking a button within a GUI. At the current cost of computing, this expense can be prohibitive. There are some tasks where the value from added intelligence may not be worth the price.</p>\n<p>For example, the <a href=\"https://www.wsj.com/tech/ai/ais-costly-buildup-could-make-early-products-a-hard-sell-bdd29b9f\">Wall Street Journal</a> suggests using an LLM for tasks like email summarization is “like getting a Lamborghini to deliver a pizza.” Higher costs are, in part, due to the inability of AI systems to leverage economies of scale in the way standard software does. Each interaction requires intense calculation, so costs scale linearly with usage. Without a zero-marginal cost of reproduction, the common software subscription model becomes less tenable.</p>\n<p>Will consumers pay higher prices for conversational interfaces or prefer AI capabilities wrapped in cost-effective GUI? Ironically, this predicament is reminiscent of the early struggles GUIs faced. The processor logic &amp; memory speed needed to power the underlying bitmaps only became tenable when the price of RAM chips dropped years later. Let’s hope history repeats itself.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/13-abstraction-ramchips.jpeg\" /></p>\n<p>Another cost to consider is the <strong>security risk</strong>: what if your Lamborghini gets stolen during the pizza delivery? If you let people ask AI anything, some of those questions will be manipulative. <a href=\"https://developer.nvidia.com/blog/securing-llm-systems-against-prompt-injection/\">Prompt injections</a> are attempts to infiltrate systems through natural language. The right sequence of words can turn an input field into an attack vector, allowing malicious actors to access private <a href=\"https://stackdiary.com/chatgpts-training-data-can-be-exposed-via-a-divergence-attack/\">information &amp; integrations</a>.</p>\n<p>So be cautious when positioning AI as a <a href=\"https://www.lindy.ai/blog/announcing-a-new-way-to-create-ai-employees\">member of the team</a> since employees are already regarded as the weakest link in cyber security defense. The wrong business logic could accidentally optimize the number of phishing emails your organization falls victim to. </p>\n<p>Good design can mitigate these costs by identifying where AI is most meaningful to users. Emphasize human-like conversational interactions at these moments but use more cost-effective elements elsewhere. Protect against prompt injections by partitioning sensitive data so it’s only accessible by secure systems. We know LLMs aren’t great at math anyway, so free them up for creative collaboration instead of managing boring billing details.</p>\n<h3>Generations Are Predictions</h3>\n<p>In <a href=\"https://www.smashingmagazine.com/2023/08/friction-feature-machine-learning-algorithms/\">my previous Smashing article</a>, I explained the concept of algorithm-friendly interfaces. They view every interaction as an opportunity to improve understanding through bidirectional feedback. They provide system feedback to users while reporting performance feedback to the system. Their success is a function of maximizing data collection touchpoints to optimize predictions. Accuracy gains in predictive output tend to result in better user retention. So good data compounds in value by reinforcing itself through network effects.</p>\n<p>While my previous focus was on content recommendation algorithms, could we apply this to generative AI? While the output is very different, they’re both predictive models. We can customize these predictions with specific data like the characteristics, preferences, &amp; behavior of an individual user.</p>\n<p>So, just as Spotify learns your musical taste to recommend new songs, we could theoretically personalize generative AI. Midjourney could recommend image generation parameters based on past usage or preferences. ChatGPT could invoke the right roles at the right time (hopefully with system status visibility).</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/14-abstraction-signals.jpeg\" /></p>\n<p>This territory is still somewhat uncharted, so it’s unclear how algorithm-friendly conversational interfaces are. The same discoverability issues affecting their usability may also affect their ability to analyze engagement signals. An inability to separate signal from noise will weaken personalization efforts. Consider a simple interaction like tapping a “like” button; it sends a very clean signal to the backend.</p>\n<p>What is the conversational equivalent of this? Inputting the word “like” doesn’t seem like as reliable a signal because it may be mentioned in a simile or mindless affectation. Based on the insights from my previous article, the value of successful personalization suggests that any regression will be acutely felt in your company’s pocketbook.</p>\n<p>Perhaps a solution is using another LLM as a reasoning engine to format unstructured inputs automatically into clear engagement signals. But until their data collection efficiency is clear, <strong>designers should ask if the benefits of a conversational interface outweigh the risk of worse personalization.</strong></p>\nTowards The Next Layer Of Abstraction\n<p>As this new paradigm shift in computing evolves, I hope this is a helpful primer for thinking about the next interface abstractions. Conversational interfaces will surely be a mainstay in the next era of AI-first design. Adding voice capabilities will allow computers to augment our abilities without arching our spines through unhealthy amounts of screen time. Yet conversation alone won’t suffice, as we also must design for needs that words cannot describe.</p>\n<p>So, if no interface is a panacea, let’s avoid simplistic evolutionary tales &amp; instead aspire towards the principles of great experiences. We want an interface that is <strong>integrated, contextual, &amp; multimodal</strong>. It knows sometimes we can only describe our intent with gestures or diagrams. It respects when we’re too busy for a conversation but need to ask a quick question. When we do want to chat, it can <em>see</em> what we see, so we aren’t burdened with writing lengthy descriptions. When words fail us, it still gets the gist.</p>\n<h3>Avoiding Tunnel Visions Of The Future</h3>\n<p>This moment reminds me of a cautionary tale from the days of mobile-first design. A couple of years after the iPhone’s debut, touchscreens became a popular motif in collective visions of the future. But Bret Victor, the revered Human-Interface Inventor (<a href=\"http://worrydream.com/#!/Apple\">his title at Apple</a>), saw touchscreens more as a <em>tunnel vision</em> of the future. </p>\n<p>In his <a href=\"http://worrydream.com/ABriefRantOnTheFutureOfInteractionDesign/\">brief rant</a> on peripheral possibilities, he remarks how they ironically ignore touch altogether. Most of the interactions mainly engage our sense of sight instead of the rich capabilities our hands have for haptic feedback. How can we ensure that AI-first design amplifies all our capabilities?</p>\n<blockquote>“A tool addresses human needs by amplifying human capabilities.”<br /><br />— Bret Victor in “<a href=\"http://worrydream.com/ABriefRantOnTheFutureOfInteractionDesign/\">A Brief Rant on the Future of Interaction Design”</a></blockquote>\n\n<p>I wish I could leave you with a clever-sounding formula for when to use conversational interfaces. Perhaps some observable law stating that the mathematical relationship expressed by D∝1/G elucidates that ‘D’, representing describability, exhibits an inverse correlation with ‘G’, denoting graphical utility — therefore, as the complexity it takes to describe something increases, a conversational interface’s usability diminishes. While this observation may be true, it’s not very useful.</p>\n<p>Honestly, my uncertainty at this moment humbles me too much to prognosticate on new design principles. What I can do instead is take a lesson from the recently departed Charlie Munger &amp; <a href=\"https://fs.blog/inversion/\">invert the problem</a>.</p>\n<p><img src=\"https://files.smashing.media/articles/designing-ai-beyond-conversational-interfaces/16-abstraction-inversion.jpg\" /></p>\n<h3>Designing Backwards</h3>\n<p>If we try to design the next abstraction layer looking forward, we seem to end up with something like a chatbot. We now know why this is an incomplete solution on its own. <strong>What if we look at the problem backward to identify the undesirable outcomes that we want to avoid?</strong> Avoiding stupidity is easier than seeking brilliance, after all.</p>\n<p>An obvious mistake to steer clear of is forcing users to engage in conversations without considering time constraints. When the time is right to chat, it should be in a manner that doesn’t replace existing usability problems with equally frustrating new ones. For basic tasks of equivalent importance to delivering pizza, we should find practical solutions not of equivalent extravagance to driving a Lamborghini. Furthermore, we ought not to impose prompt engineering expertise as a requirement for non-expert users. Lastly, as systems become more human-like, they should not inherit our gullibility, lest our efforts inadvertently optimize for exponentially easier access to our private data.</p>\n<p>A more <strong>intelligent</strong> interface won’t make those stupid mistakes.</p>\n<p><em>Thanks to <a href=\"https://www.michael-sands.com/\">Michael Sands</a>, <a href=\"https://www.evanmiller.org/\">Evan Miller</a>, &amp; <a href=\"https://www.youtube.com/@TheRiceRocketeer\">Colin Cowley</a> for providing feedback on early drafts of this article.</em></p>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"93ce50599d08dc8d5ffc688c2347c0ec457f2446c93bdc3b57176fc3714be6e1","category":"Tech"}