{"title":"How To Launch Big Complex Projects","link":"https://smashingmagazine.com/2025/05/how-launch-big-complex-projects/","date":1746439200000,"content":"<p>Think about your past projects. Did they finish <strong>on time and on budget</strong>? Did they end up getting delivered without cutting corners? Did they get disrupted along the way with a changed scope, conflicted interests, unexpected delays, and surprising blockers?</p>\n<p>Chances are high that your recent project was <strong>over schedule and over budget</strong> — just like a vast majority of other complex UX projects. Especially if it entailed at least some sort of <strong>complexity</strong>, be it a large group of stakeholders, a specialized domain, internal software, or expert users. It might have been delayed, moved, canceled, “refined,” or postponed. As it turns out, in many teams, <strong>shipping on time is an exception</strong> rather than the rule.</p>\n<p>In fact, things almost never go according to plan — and on complex projects, they don’t even come close. So, how can we prevent it from happening? Well, let’s find out.</p>\n<p><img src=\"https://files.smashing.media/articles/how-launch-big-complex-projects/1-how-big-things-get-done.png\" /></p>\n99.5% Of Big Projects Overrun Budgets And Schedules\n<p>As people, we are inherently over-optimistic and over-confident. It’s hard to study and process everything that can go wrong, so we tend to focus on the bright side. However, unchecked optimism leads to unrealistic forecasts, poorly defined goals, better options ignored, problems not spotted, and no contingencies to counteract the inevitable surprises.</p>\n<p><img src=\"https://files.smashing.media/articles/how-launch-big-complex-projects/2-normal-fat-tails-distribution.png\" /></p>\n<p><a href=\"https://www.globalleadersinstitute.org/blog-post/hofstadters-law-as-a-strategic-tool-for-cultural-institutions/\">Hofstadter’s Law</a> states that the time needed to complete a project will always expand to fill the available time &amp;- even if you take into account Hofstadter’s Law. Put differently, it <em>always</em> takes longer than you expect, however cautious you might be.</p>\n<p>As a result, only 0.5% of big projects make the budget and the schedule — e.g., big relaunches, legacy re-dos, big initiatives. We might try to mitigate risk by adding 15–20% buffer — but it rarely helps. Many of these projects don’t follow “normal” (Bell curve) distribution, but are rather “fat-tailed”.</p>\n<p>And there, overruns of 60–500% are typical and turn big projects into <strong>big disasters</strong>.</p>\nReference-Class Forecasting (RCF)\n<p>We often assume that if we just thoroughly <strong>collect all the costs</strong> needed and estimate complexity or efforts, we should get a decent estimate of where we will eventually land. Nothing could be further from the truth.</p>\n<p>Complex projects have <strong>plenty of unknown unknowns</strong>. No matter how many risks, dependencies, and upstream challenges we identify, there are many more we can’t even imagine. The best way to be more accurate is to define a realistic <em>anchor</em> — for time, costs, and benefits — from similar projects done in the past.</p>\n<p><img src=\"https://files.smashing.media/articles/how-launch-big-complex-projects/3-it-projects-fat-tailed-distribution.png\" /></p>\n<p>Reference-class forecasting follows a <strong>very simple process</strong>:</p>\n<ul>\n<li>First, we find the reference projects that have the most similarities to our project.</li>\n<li>If the distribution follows the Bell curve, use the mean value + <strong>10–15% contingency</strong>.</li>\n<li>If the distribution is fat-tailed, invest in profound <strong>risk management</strong> to prevent big challenges down the line.</li>\n<li>Tweak the mean value only if you have very good reasons to do so.</li>\n<li><strong>Set up a database</strong> to track past projects in your company (for cost, time, benefits).</li>\n</ul>\nMapping Out Users’ Success Moments\n<p>Over the last few years, I’ve been using the technique called “Event Storming,” suggested by <a href=\"https://www.linkedin.com/in/matteo-cavucci/\">Matteo Cavucci</a> many years back. The idea is to <strong>capture users’ experience moments through the lens of business needs</strong>. With it, we focus on the desired business outcome and then use research insights to project events that users will be going through to achieve that outcome.</p>\n<p><img src=\"https://files.smashing.media/articles/how-launch-big-complex-projects/4-event-storming.png\" /></p>\n<p>The image above shows the process in action — with <strong>different lanes representing different points of interest</strong>, and prioritized user events themed into groups, along with risks, bottlenecks, stakeholders, and users to be involved — as well as UX metrics. From there, we can identify common themes that emerge and create a shared understanding of risks, constraints, and people to be involved.</p>\n<p>Throughout that journey, we identify key milestones and break users’ events into two main buckets:</p>\n<ol>\n<li>User’s <strong>success moments</strong> (which we want to dial up ↑);</li>\n<li>User’s <strong>pain points</strong> or <strong>frustrations</strong> (which we want to dial down ↓).</li>\n</ol>\n<p>We then break out into groups of 3–4 people to separately prioritize these events and estimate their impact and effort on <a href=\"https://cutlefish.substack.com/p/tbm-220-effort-vs-value-curves\">Effort vs. Value curves</a> by <a href=\"https://www.linkedin.com/in/johnpcutler?miniProfileUrn=urn%3Ali%3Afs_miniProfile%3AACoAAABkgVcByXwZ4Zke2hKjaekv4qJxDWQeqsY&amp;lipi=urn%3Ali%3Apage%3Ad_flagship3_pulse_read%3BLaY9r%2FVvSwSjIb5%2B1j9PVw%3D%3D\">John Cutler</a>.</p>\n<p><img src=\"https://files.smashing.media/articles/how-launch-big-complex-projects/5-effort-vs-value-curves.png\" /></p>\n<p>The next step is <strong>identifying key stakeholders</strong> to engage with, risks to consider (e.g., legacy systems, 3rd-party dependency, etc.), resources, and tooling. We reserve special time to identify key blockers and constraints that endanger a successful outcome or slow us down. If possible, we also set up UX metrics to track how successful we actually are in improving the current state of UX.</p>\n<p>It might seem like a bit too much planning for just a UX project, but it has been helping quite significantly to reduce failures and delays and also maximize business impact.</p>\n<p>When speaking to businesses, I usually speak about better <strong>discovery and scoping as the best way to mitigate risk</strong>. We can, of course, throw ideas into the market and run endless experiments. But not for critical projects that get a lot of visibility, e.g., replacing legacy systems or launching a new product. They require thorough planning to prevent big disasters, urgent rollbacks, and... black swans.</p>\nBlack Swan Management\n<p>Every other project encounters what's called a <strong>Black Swan</strong> — a low probability, high-consequence event that is more likely to occur when projects stretch over longer periods of time. It could be anything from restructuring teams to a change of priorities, which then leads to cancellations and rescheduling.</p>\n<p>Little problems have an incredible capacity to <strong>compound large, disastrous problems</strong> — ruining big projects and sinking big ambitions at a phenomenal scale. The more little problems we can design around early, the more chances we have to get the project out the door successfully.</p>\n<p><img src=\"https://files.smashing.media/articles/how-launch-big-complex-projects/6-sketch-how-big-things-get-done.png\" /></p>\n<p>So we make projects smaller and shorter. We mitigate risks by involving stakeholders early. We provide <strong>less surface</strong> for Black Swans to emerge. One good way to get there is to always start every project with a simple question: <em>“Why are we actually doing this project?”</em> The answers often reveal not just motivations and ambitions, but also the challenges and dependencies hidden between the lines of the brief.</p>\n<p>And as we plan, we could follow a <strong>“right-to-left thinking”</strong>. We don’t start with where we are, but rather where we want to be. And as we plan and design, we move from the future state towards the current state, studying what’s missing or what’s blocking us from getting there. The trick is: we always keep our end goal in mind, and our decisions and milestones are always shaped by that goal.</p>\nManage Deficit Of Experience\n<p>Complex projects start with a deep deficit of experience. To increase the chances of success, we need to minimize the chance of mistakes even happening. That means trying to make the process <strong>as repetitive as possible</strong> — with smaller “work modules” repeated by teams over and over again.</p>\n<p><img src=\"https://files.smashing.media/articles/how-launch-big-complex-projects/7-projects-deficit-experience.jpeg\" /></p>\n<p>🚫 <strong>Beware of unchecked optimism</strong> → unrealistic forecasts.<br />🚫 <strong>Beware of “cutting-edge”</strong> → untested technology spirals risk.<br />🚫 <strong>Beware of “unique”</strong> → high chance of exploding costs.<br />🚫 <strong>Beware of “brand new”</strong> → rely on tested and reliable.<br />🚫 <strong>Beware of “the biggest”</strong> → build small things, then compose.</p>\n<p>It also means relying on reliable: from well-tested tools to <strong>stable teams</strong> that have worked well together in the past. Complex projects <strong>aren’t a good place</strong> to innovate processes, mix-n-match teams, and try out more affordable vendors.</p>\n<p>Typically, these are <strong>extreme costs in disguise</strong>, skyrocketing delivery delays, and unexpected expenses.</p>\nThink Slow, Act Fast\n<p>In the spirit of looming deadlines, many projects rush into delivery mode before the scope of the project is well-defined. It might work for fast experiments and minor changes, but that’s a red flag for larger projects. The best strategy is to spend more time in <strong>planning</strong> before designing a single pixel on the screen.</p>\n<p>But planning isn’t an exercise in abstract imaginative work. Good planning should include experiments, tests, simulations, and refinements. It must include the steps of <strong>how we reduce risks</strong> and how we mitigate risks when something unexpected (but frequent in other similar projects) happens.</p>\n<p><img src=\"https://files.smashing.media/articles/how-launch-big-complex-projects/8-history-successful-projects.png\" /></p>\nGood Design Is Good Risk Management\n<p>When speaking about design and research to senior management, position it as a <strong>powerful risk management tool</strong>. Good design that involves concept testing, experimentation, user feedback, iterations, and refinement of the plan is cheap and safe.</p>\n<p>Eventually it might need more time than expected, but it’s much — <em>MUCH!</em> — cheaper than delivery. Delivery is <strong>extremely cost-intensive</strong>, and if it relies on wrong assumptions and poor planning, then that’s when the project becomes vulnerable and difficult to move or re-route.</p>\nWrapping Up\n<p>The insights above come from a wonderful book on <a href=\"https://sites.prh.com/how-big-things-get-done-book\"><em>How Big Things Get Done</em></a> by Prof. Bent Flyvbjerg and Dan Gardner. It goes in all the fine details of how big projects fail and when they succeed. It’s not a book about design, but a fantastic book for designers who want to <strong>plan and estimate better</strong>.</p>\n<p>Not every team will work on a large, complex project, but sometimes these projects <strong>become inevitable</strong> — when dealing with legacy, projects with high visibility, layers of politics, or an entirely new domain where the company moves.</p>\n<p>Good projects that succeed have one thing in common: they dedicate a majority of time to <strong>planning and managing risks</strong> and unknown unknowns. They avoid big-bang revelations, but instead test continuously and repeatedly. That’s your <strong>best chance to succeed</strong> — work around these unknowns, as you won’t be able to prevent them from emerging entirely anyway.</p>\nNew: How To Measure UX And Design Impact\n\n<p>Meet <a href=\"https://measure-ux.com/\">Measure UX &amp; Design Impact</a> (8h), a <strong>practical guide for designers and UX leads</strong> to shape, measure and explain your incredible UX impact on business. Recorded and updated by Vitaly Friedman. Use the friendly code 🎟 <strong><code>IMPACT</code></strong> to <strong>save 20% off</strong> today. <a href=\"https://measure-ux.com\">Jump to the details</a>.</p>\n\n\n    <a href=\"https://measure-ux.com/\">\n    <img src=\"https://files.smashing.media/articles/ux-metrics-video-course-release/measure-ux-and-design-impact-course.png\" />\n    </a>\n\n\n<div><div><ul><li><a href=\"#\">\nVideo + UX Training</a></li><li><a href=\"#\">Video only</a></li></ul><div><h3>Video + UX Training</h3>$ 495.00 $ 799.00\n<a href=\"https://smart-interface-design-patterns.thinkific.com/enroll/3081832?price_id=3951439\">\nGet Video + UX Training<div></div></a><p>25 video lessons (8h) + <a href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-impact-design/\">Live UX Training</a>.<br />100 days money-back-guarantee.</p></div><div><h3>Video only</h3><div>$ 250.00$ 395.00</div>\n<a href=\"https://smart-interface-design-patterns.thinkific.com/enroll/3081832?price_id=3950630\">\nGet the video course<div></div></a><p>25 video lessons (8h). Updated yearly.<br />Also available as a <a href=\"https://smart-interface-design-patterns.thinkific.com/enroll/3082557?price_id=3951421\">UX Bundle with 2 video courses.</a></p></div></div></div>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"68ebf7d9019f7c4addde8528f2937fb7400b1505b94930328891a0ac2a91e473","category":"Tech"}