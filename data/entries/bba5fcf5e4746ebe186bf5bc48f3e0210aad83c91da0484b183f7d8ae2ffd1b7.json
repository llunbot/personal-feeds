{"title":"Just-in-time approval workflow with Boundary and Azure","link":"https://www.hashicorp.com/blog/just-in-time-approval-workflow-with-boundary-and-azure","date":1721664000000,"content":"<p>HashiCorp Boundary is a modern privileged access management (PAM) platform that tightens infrastructure security while also simplifying access to infrastructure resources for end users. Unlike traditional VPNs or bastion hosts that give end users access to an entire network, Boundary enforces least privilege access by allowing access only to discrete target resources. Boundary also manages credentials (e.g. usernames and passwords, SSH keys and certificates) and can inject them directly into sessions on behalf of the end user. This shields end users from handling credentials, simplifies their connection workflow, and eliminates credential exposure. </p>\n\n<p>This blog post explains the reasons to incorporate just-in-time approval workflows in <a href=\"https://developer.hashicorp.com/hcp/docs/boundary\">HCP Boundary</a> with Microsoft Privileged Identity Manager (PIM). It also discusses some of the underlying concepts and components to show how it works. Detailed configuration steps are provided so you can try it in your own environment. Finally, the post walks through the end-to-end experience by requesting access to a target resource as an end user and getting approval for the request from the designated approver. </p>\n\n<h2>Why you need just-in-time approval workflows</h2>\n\n<p>Boundary’s foundational capability is to allow or deny end-user access to infrastructure resources based on each user’s pre-approved role. However, some organizations prefer to restrict certain privileged roles until a request and approval has been issued. Others want to limit the approved roles to a temporary time period, requiring users to resubmit a request after that window expires. </p>\n\n<p>For example, a site reliability engineer might need elevated permissions to troubleshoot an issue on highly sensitive systems. Or an external contractor could require temporary access to an application. Integrating with third-party products that have workflow approval capabilities, including Microsoft PIM, Okta Access Request, or ServiceNow, lets organizations continue using existing standard practices and workflows for approvals. This automated process means administrators don’t have to manually make configuration changes each time elevated permissions are requested or expired, which is especially important at scale.</p>\n\n<h2>How just-in-time approval works with Boundary</h2>\n\n<p>To show how the just-in-time approval workflow works, let’s look at how the different components in our example interact.</p>\n\n<p>Microsoft Entra ID (formerly known as Azure Active Directory) includes a directory of users and information about each user. Users can be placed into logical groups that define common roles, teams, or projects. For example, users on a common team of developers can be placed into a group.</p>\n\n<p>Boundary’s <a href=\"https://developer.hashicorp.com/boundary/docs/concepts/domain-model/managed-groups\">managed groups</a> feature syncs with Entra ID users and Entra ID groups. Based on user information shared by Entra ID, referred to as <em>claims</em>, Boundary user accounts can be automatically created and placed in a Boundary-managed group when users log onto Boundary using Entra ID. The Boundary managed groups mirror the user’s corresponding Entra ID group and Boundary users are given access to infrastructure resources based on their managed group. For example, if the user is a server administrator within Entra ID, you can ensure they can access servers (via SSH, RDP, etc.) based on their Boundary managed group. </p>\n\n<p>Microsoft PIM is the core platform that facilitates the automated workflow between the requester (end user) and the approver (authorized approvers like a manager or resource owner). End users make requests to become a member of a specific Entra ID group. Requests and approvals are made through the PIM interface in the Microsoft Azure portal: </p>\n\n<p>1. Users request access to be part of an Entra ID group (example group name: <em>Production</em>) from the PIM portal page.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721253038-screenshot-2024-07-17-at-5-48-03-pm.png\" alt=\"PIM\" /><p>2. The approver approves the request from the PIM portal page.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721253066-screenshot-2024-07-17-at-5-48-20-pm.png\" alt=\"Entra\" /><p>Boundary automatically places the user in a Boundary managed group that corresponds to the <em>Production</em> Entra ID group. As a result, the end user inherits access permissions associated with the managed group when they log onto Boundary:</p>\n\n<p>1. The user logs onto Boundary and is authenticated via Entra ID.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721253343-screenshot-2024-07-17-at-5-54-38-pm.png\" alt=\"boundary\" /><p>2. An ID token with the user’s Entra group ID embedded in the claim information is sent to Boundary. </p>\n<img src=\"https://www.datocms-assets.com/2885/1721253376-screenshot-2024-07-17-at-5-54-14-pm.png\" alt=\"ID\" /><p>3. Based on the claim information, Boundary places the user into the corresponding Boundary managed group, thereby giving the user permission to access resources that have been granted to the managed group.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721253394-screenshot-2024-07-17-at-5-55-02-pm.png\" alt=\"Access\" /><h2>Configuration steps</h2>\n\n<p>Now let’s learn how to set up this workflow between HCP Boundary and Microsoft PIM.</p>\n\n<h3>Prerequisites</h3>\n\n<p>This post assumes you have basic knowledge of managing HCP Boundary. You will also need the following setup in your environment:</p>\n\n<p><strong>HCP Boundary:</strong></p>\n\n<ul>\n<li>HCP Boundary cluster. If you do not have a Boundary cluster, this tutorial explains <a href=\"https://developer.hashicorp.com/boundary/tutorials/hcp-getting-started/hcp-getting-started-create\">how to deploy an HCP Boundary cluster</a>.</li>\n<li>A Boundary target (Linux host, Windows host, etc.) configured within an existing project scope. If you don’t have such a target, follow this <a href=\"https://developer.hashicorp.com/boundary/tutorials/get-started-hcp/hcp-getting-started-connect\">tutorial to create a new project scope and target</a>.</li>\n<li>Administrative permissions to manage and configure your HCP Boundary cluster.</li>\n</ul>\n\n<p><strong>Azure:</strong></p>\n\n<ul>\n<li><a href=\"https://www.microsoft.com/en-us/security/business/microsoft-entra-pricing\">Microsoft license</a> to use PIM. This is typically available with the Microsoft Entra ID P2 or Microsoft Entra ID Governance license.</li>\n<li>Azure administrative permission in Entra ID to create and manage groups.</li>\n<li>Azure administrative permission in Entra ID to register new applications.</li>\n<li>An Azure user to act as the requester and a different user to act as an approver. </li>\n</ul>\n\n<p><strong>Note</strong>: The requester and approver must be two different Azure users.</p>\n\n<h3>Configure Boundary OIDC integration with Azure</h3>\n\n<p>The first step in configuration is to connect to Entra ID.</p>\n\n<h4>Register Boundary as an application in Entra ID</h4>\n\n<p>Note: This section is based on a <a href=\"https://developer.hashicorp.com/boundary/tutorials/identity-management/oidc-azure#create-an-application\">Boundary tutorial</a>.</p>\n\n<p>1. Log onto your Azure subscription.</p>\n\n<p>2. Navigate to the Entra ID service and select <em>App Registrations</em> using the sidebar on the left side of the page.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721318069-screenshot-2024-07-18-at-11-44-24-am.png\" alt=\"Getting\" /><p>3. From the Applications view, click the + New registration button.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721318100-screenshot-2024-07-18-at-11-42-16-am.png\" alt=\"App\" /><p>4. On the <em>Register an application</em> page, name your application and select its tenancy model.</p>\n\n<ul>\n<li><p>For this proof-of-concept tutorial, select <em>Single-tenant</em>. In our example, the application is named <em>Boundary OIDC Test</em>.</p></li>\n<li><p>Under <em>Redirect URI</em> select the <em>Web</em> field.</p></li>\n<li><p>Construct a callback URI and paste it under the <em>Redirect URI</em> field. The callback URI is created by appending <code>/v1/auth-methods/oidc:authenticate:callback</code> after your HCP Boundary Cluster URL. </p></li>\n</ul>\n\n<p>For example:</p>\n\n<p><code>https://e58fe114-7624-431c-994d-b6670e90b03J.boundary.hashicorp.cloud/v1/auth-methods/oidc:authenticate:callback</code></p>\n\n<ul>\n<li>Paste the callback URI in the <em>Web</em> field and click <em>Register</em>.</li>\n</ul>\n<img src=\"https://www.datocms-assets.com/2885/1721318276-screenshot-2024-07-18-at-11-43-05-am.png\" alt=\"Register\" /><p>5. Once registered, you will be taken to the Overview page of your new app registration. Select <em>Certificates &amp; Secrets</em> on the left. Click <em>+ New client secret</em> and fill out the secret details. Our example describes the secret as <em>Boundary OIDC test secret</em> and leaves the expiry set to the recommended 180 days (6 months). In your environment, you can shorten or elongate this.</p>\n\n<p>Click <em>Add</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721318511-screenshot-2024-07-18-at-11-45-33-am.png\" alt=\"Boundary\" /><p>6. Copy the client secret value and store it for use later. Ensure you grab the <em>Value</em>, not the Secret ID.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721319457-screenshot-2024-07-18-at-11-46-31-am.png\" alt=\"oidc\" /><p>7. Next, on your <em>Boundary OIDC Test</em> app, navigate to the <em>Authentication</em> tab on the left. </p>\n\n<p>Scroll down to the <em>Front-channel logout URL</em>. This setting covers how session logouts are handled. Construct the logout URL by appending <code>:3000</code> to the end of your HCP Boundary Cluster URl. </p>\n\n<p>For example: <code>https://e58fe114-7624-431c-994d-b6670e90b03J.boundary.hashicorp.cloud:3000</code></p>\n<img src=\"https://www.datocms-assets.com/2885/1721319495-screenshot-2024-07-18-at-11-47-10-am.png\" alt=\"front-channel\" /><p>Click <em>Save</em>.</p>\n\n<p>8. Then, on your <em>Boundary OIDC Test _app, navigate to the _Token configuration</em> tab on the left-hand side. Click <em>+ Add groups claim</em>. Select <em>Security groups, Directory roles</em>, and <em>Groups assigned to the application</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721320447-screenshot-2024-07-18-at-12-33-41-pm.png\" alt=\"Edit\" /><p>9. Click <em>Add</em>.</p>\n\n<p>10. Navigate back to the <em>Boundary OIDC Test</em> app's <em>Overview</em> page using the menu on the left. From this view, copy the <em>Directory (Tenant) ID</em> and the <em>Application (client) ID</em> onto a notepad.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721320605-screenshot-2024-07-18-at-12-36-27-pm.png\" alt=\"Boundary\" /><p>11. You will also need to construct the application <em>Issuer</em> URL.</p>\n\n<p>On the application <em>Overview</em> page, click on <em>Endpoints</em>. Copy the <em>OpenID Connect metadata document</em> value, up to and including the /v2.0. </p>\n\n<p>For example:</p>\n\n<p><code>https://login.microsoftonline.com/123eae0c-29d7-4851-5e1fb68bfb3-5f8e3/v2.0</code></p>\n\n<p>Copy and paste this entire URL onto a notepad. This URL will be referred to as the <em>Issuer</em> and will be used to configure the Boundary OIDC auth method in the next section.</p>\n\n<p>A couple things to note:</p>\n\n<ul>\n<li>Another method to generate the Issuer URL is to plug in your <code>Tenant_ID</code> into the following format: <code>https://login.microsoftonline.com/Tenant_ID/v2.0</code></li>\n<li>You may need to refer to <a href=\"https://learn.microsoft.com/en-us/entra/identity-platform/v2-protocols\">Entra OIDC documentation</a> for the latest OIDC endpoint schemas.</li>\n</ul>\n<img src=\"https://www.datocms-assets.com/2885/1721320647-screenshot-2024-07-18-at-12-36-55-pm.png\" alt=\"Endpoints\" /><p>12. Before moving on to the next section, make sure you have the three important values from the previous steps. They are needed for configuring OIDC with Boundary in the next section.</p>\n\n<ol>\n<li><strong>Issuer:</strong> <code>https://login.microsoftonline.com/Tenant_ID/v2.0</code>\n\n<ol>\n<li>Example: <code>https://login.microsoftonline.com/123eae0c-29d7-4851-5e1fb68bfb3-5f8e3/v2.0</code></li>\n</ol></li>\n<li><strong>Client ID:</strong> <em>Application (client) ID</em></li>\n<li><strong>Client secret:</strong> <em>Client secret value</em></li>\n</ol>\n\n<h3>Connect the HCP Boundary cluster to Azure using OIDC</h3>\n\n<p>1. On your browser, log onto your Boundary cluster Admin UI as an administrator.</p>\n\n<p>2. While in the global scope, click <em>Auth Methods</em> on the left side tab. Click <em>New</em>, and select <em>OIDC</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721321654-screenshot-2024-07-18-at-12-37-35-pm.png\" alt=\"Selecting\" /><p>3. Fill out the form details using the settings gathered from the previous section.</p>\n\n<p>These include:</p>\n\n<ul>\n<li>Name (Example: Azure)</li>\n<li>Issuer (Example: <code>https://login.microsoftonline.com/123eae0c-29d7-4851-5e1fb68bfb3-5f8e3/v2.0</code>)</li>\n<li>Client ID (Example: <code>a4d21a76-e08c-4d8d-8c47-e1c423ee4d11</code>)</li>\n<li>Client Secret (Example: <code>X9u~u58--~rWLR4Q9i1-PtdZOi_s04~91-</code>)</li>\n<li>Signing Algorithm\n\n<ul>\n<li>Set to <em>RS256</em></li>\n<li>Click <em>Add</em></li>\n</ul></li>\n<li>API URL prefix. The API URL prefix is set to the HCP Boundary cluster URL </li>\n</ul>\n\n<p><strong>Note:</strong> Make sure there is no trailing / at the end of the URL.</p>\n\n<p>(Example: <code>https://e58fe114-7624-431c-994d-b6670e90b03J.boundary.hashicorp.cloud</code>)</p>\n<img src=\"https://www.datocms-assets.com/2885/1721322226-screenshot-2024-07-18-at-12-58-04-pm.png\" alt=\"New\" /><img src=\"https://www.datocms-assets.com/2885/1721322246-screenshot-2024-07-18-at-12-58-22-pm.png\" alt=\"Client\" /><img src=\"https://www.datocms-assets.com/2885/1721322265-screenshot-2024-07-18-at-12-58-29-pm.png\" alt=\"API\" /><p>Once the form is completed, click <em>Save</em>.</p>\n\n<p>Troubleshooting: If you are unable to save the auth method, check that the <em>Issuer</em> is prefixed by <code>https://</code> and does not have a trailing <code>/</code> at the end of the URL.</p>\n\n<p>4. Once created, in the upper right corner, set the state of your auth method to <em>Public</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721335617-screenshot-2024-07-18-at-1-01-08-pm.png\" alt=\"Change\" /><p>5. Click <em>Manage</em> in the upper right corner and select <em>Make Primary</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337512-screenshot-2024-07-18-at-5-00-16-pm.png\" alt=\"make\" /><h3>Verify Boundary login with Azure</h3>\n\n<p>1. Make sure you are logged onto your Azure subscription in your browser.</p>\n\n<p>2. Using the Boundary Admin UI (via browser) or <a href=\"https://developer.hashicorp.com/boundary/install#desktop-client\">Boundary Desktop client</a>, select your <em>Azure</em> auth method and click <em>Sign In</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337519-screenshot-2024-07-18-at-5-00-31-pm.png\" alt=\"azure\" /><p>3. That opens a new tab in your browser and validates authentication with your Azure account.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337524-screenshot-2024-07-18-at-5-02-36-pm.png\" alt=\"successful\" /><p>4. Upon successful login, you will notice three things: </p>\n\n<ul>\n<li>A new account was auto-created in your Azure auth method. This Boundary user account corresponds to your Azure user account. The name of the account defaults to the <strong>account ID</strong>.</li>\n</ul>\n<img src=\"https://www.datocms-assets.com/2885/1721337530-screenshot-2024-07-18-at-5-02-48-pm.png\" alt=\"Accounts\" /><ul>\n<li>A new user was created and associated with the new account.</li>\n</ul>\n<img src=\"https://www.datocms-assets.com/2885/1721337535-screenshot-2024-07-18-at-5-03-00-pm.png\" alt=\"User\" /><ul>\n<li>If you log onto Boundary using the CLI and run <code>boundary accounts read -id &lt;ACCOUNT_ID&gt;</code>, you may find existing Entra ID group IDs already associated with this account. In the next section, we will create a new Entra ID group for this user account.</li>\n</ul>\n<img src=\"https://www.datocms-assets.com/2885/1721337540-screenshot-2024-07-18-at-5-03-15-pm.png\" alt=\"groups\" /><h3>Configure groups on Azure</h3>\n\n<p>This section shows how to create an Azure group in Entra ID. This group maps to a Boundary managed group with permissions to access a test target. Any Boundary user in the managed group inherits the same permissions given to the managed group.</p>\n\n<p>1. Log into Azure, navigate to Entra ID.</p>\n\n<p>2. Click <em>Groups</em> on the left side tab and click <em>New group</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721339014-screenshot-2024-07-18-at-5-41-14-pm.png\" alt=\"new\" /><p>3. Set group type to <em>Microsoft 365</em> and name the group <em>Boundary-Production</em>. The Membership type is <em>Assigned</em>. </p>\n\n<ul>\n<li>Set yourself as the owner</li>\n<li>Set the user who will be the approver as an additional owner.</li>\n<li>Do not add any members to the group.</li>\n</ul>\n<img src=\"https://www.datocms-assets.com/2885/1721338994-screenshot-2024-07-18-at-5-41-23-pm.png\" alt=\"new\" /><img src=\"https://www.datocms-assets.com/2885/1721337550-screenshot-2024-07-18-at-5-04-51-pm.png\" alt=\"owners\" /><p>4. Once created, go into the <em>Boundary-Production</em> group. Scroll down the left side tabs and select <em>Privileged Identity Management</em>. Click <em>Enable PIM for this group</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337556-screenshot-2024-07-18-at-5-05-09-pm.png\" alt=\"Boundary-production\" /><p>5. Then click <em>Add assignments</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721338906-screenshot-2024-07-18-at-5-40-54-pm.png\" alt=\"new\" /><p>6. Select <em>Member</em> role, and choose a user to be a member. This user will act as the requester. Click <em>Next</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337561-screenshot-2024-07-18-at-5-05-42-pm.png\" alt=\"Add\" /><p>7. Select <em>Eligible</em>, and set duration as desired. The default of one year is fine. Click <em>Assign</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337566-screenshot-2024-07-18-at-5-05-57-pm.png\" alt=\"eligble\" /><p>8. Form the <em>Privileged Identity Management</em> side tab, and click <em>Settings</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337570-screenshot-2024-07-18-at-5-06-41-pm.png\" alt=\"PIM\" /><p>9. Click <em>Member</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337575-screenshot-2024-07-18-at-5-07-11-pm.png\" alt=\"settings\" /><p>10. Click <em>Edit</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337580-screenshot-2024-07-18-at-5-07-26-pm.png\" alt=\"role\" /><p>11. Set approval parameters, including:</p>\n\n<ul>\n<li>3-hour activation maximum duration (This determines how long the user gets access if approved)</li>\n<li><em>Require justification on activation</em></li>\n<li><em>Require approval to activate</em>\n\n<ul>\n<li>Select an Azure user as the approver. This user must be different from the requester.</li>\n</ul></li>\n</ul>\n<img src=\"https://www.datocms-assets.com/2885/1721337586-screenshot-2024-07-18-at-5-08-15-pm.png\" alt=\"select\" /><p>12. Click <em>Next: Assignment</em>. </p>\n\n<p>13. Leave default values. Click <em>Next: Notification</em>.</p>\n\n<p>14. Add notification email if desired. Click <em>Update</em>.</p>\n\n<p>15. In your <em>Boundary-Production</em> group, navigate to the overview tab and make a note of the group Object ID. That will be used in the next section to configure Boundary managed groups.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337591-screenshot-2024-07-18-at-5-09-13-pm.png\" alt=\"boundary\" /><p>16. Go to the Entra ID main page and click <em>Groups</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337596-screenshot-2024-07-18-at-5-09-27-pm.png\" alt=\"groups\" /><p>17. Click the <em>General</em> side tab and set the <em>Self Service Group Management</em> option to Yes.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337601-screenshot-2024-07-18-at-5-10-10-pm.png\" alt=\"Self\" /><h3>Configure managed groups on Boundary</h3>\n\n<p>This section maps an Entra ID group to a Boundary managed group. This automatically places users in an Entra ID group in a corresponding Boundary managed group.</p>\n\n<p>1. From your browser, log onto the Boundary Admin UI as an administrator. </p>\n\n<p>2. While in the global scope, navigate to the <em>Auth method</em> on the left side and click on the <em>Azure</em> auth method you created earlier.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337606-screenshot-2024-07-18-at-5-10-22-pm.png\" alt=\"Auth\" /><p>3. Select the <em>Managed Groups</em> sub-tab. Click <em>Manage</em> in the upper right corner and select <em>Create Managed Group</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337623-screenshot-2024-07-18-at-5-11-25-pm.png\" alt=\"Create\" /><p>4. Provide a name: <em>Production - Boundary on Azure</em>. In the <em>Filter</em> field, provide the group Object ID corresponding to the <em>Boundary-Production</em> Azure group in the previous section. Use the following format:</p>\n\n<pre><code>\"AZURE_OBJECT_ID\" in \"/token/groups\"\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>\"c89c2175-f8e7-4cb2-9bd8-f9bf924c2c8a\" in \"/token/groups\"\n</code></pre>\n\n<p>5. Click <em>Save.</em></p>\n<img src=\"https://www.datocms-assets.com/2885/1721337628-screenshot-2024-07-18-at-5-11-42-pm.png\" alt=\"New\" /><p>6. Next, authorize this managed group with the permissions to access a test target. You can use an existing target or <a href=\"https://developer.hashicorp.com/boundary/tutorials/get-started-hcp/hcp-getting-started-connect\">create a new test target</a>. </p>\n\n<p><strong>Note:</strong> Make sure this test target is currently not accessible by your user account. In other words, when you log onto the Boundary Desktop client using the Azure auth method, you should not be able to see or access your test target. We want to create a role where only members of the managed group can access the target. So you may want to update or remove any roles in your Boundary project that allow your user account to access your test target. </p>\n\n<p>Navigate to the Boundary <em>Org</em> and <em>Project</em> where your test target resides. Click on <em>Roles</em> on the left sidebar. Then click <em>New Roles</em> on the right side of the screen.</p>\n\n<p>The example image below shows Azure org and East US scope.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337633-screenshot-2024-07-18-at-5-11-55-pm.png\" alt=\"New\" /><p>7. Provide the name <em>Azure Production Access</em> for the role. Click <em>Save</em>.</p>\n\n<p>8. Once created, click on the <em>Principles</em> sub tab and click <em>Add Principles</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337638-screenshot-2024-07-18-at-5-12-17-pm.png\" alt=\"Principals\" /><p>9. Select the <em>Production - Boundary on Azure</em> managed group and click <em>Add Principles</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337643-screenshot-2024-07-18-at-5-12-27-pm.png\" alt=\"production\" /><p>10. You will now add a new grant, which will give permission to any user in this role to access your test target. In the role you just created, click on the <em>Grants</em> sub tab. Add the grant shown below. Make sure you replace <code>&lt;TARGET_ID&gt;</code> with the target ID of your test target. </p>\n\n<pre><code>ids=&lt;TARGET_ID&gt;;actions=authorize-session,read\n</code></pre>\n\n<p><strong>Note</strong>: You can retrieve the test target’s ID by navigating to the <em>Target</em> sidebar on the left. The <em>Targets</em> sidebar will show a list of targets and their corresponding target IDs. </p>\n\n<p>Click <em>Add</em> and then <em>Save</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337647-screenshot-2024-07-18-at-5-13-26-pm.png\" alt=\"Add\" /><h2>Test end-to-end workflow</h2>\n\n<p>The next step is to confirm that you do not yet have access to the test target when you log on using the Azure auth method. Once confirmed, you can test the end-to-end approval process.</p>\n\n<p>1. Using the <a href=\"https://developer.hashicorp.com/boundary/install#desktop-client\">Boundary Desktop client</a>, log out if you are already logged in. Then select your <em>Azure</em> auth method, and click <em>Sign-in</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337652-screenshot-2024-07-18-at-5-13-35-pm.png\" alt=\"boundary\" /><p>2. Confirm that your test target is not shown in the target list.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337657-screenshot-2024-07-18-at-5-13-45-pm.png\" alt=\"Targets\" /><p>3. To see and connect to your test target, request approval using PIM. </p>\n\n<p>Log onto your Azure subscription and go to the <em>Microsoft Entra ID Privileged Identity Management</em> menu.</p>\n\n<p>4. Click <em>My roles.</em></p>\n<img src=\"https://www.datocms-assets.com/2885/1721337662-screenshot-2024-07-18-at-5-14-08-pm.png\" alt=\"PIM\" /><p>5. Click Groups. You should see the <em>Boundary-Production</em> group that you are eligible to request access for. </p>\n<img src=\"https://www.datocms-assets.com/2885/1721337667-screenshot-2024-07-18-at-5-14-29-pm.png\" alt=\"My\" /><p>6. Provide the desired duration, reason, and click <em>Activate</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337672-screenshot-2024-07-18-at-5-14-47-pm.png\" alt=\"Activate\" /><p>Your request is now pending for approval by the designated approver.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337677-screenshot-2024-07-18-at-5-14-57-pm.png\" alt=\"request\" /><p>Ask your designated approver to log onto the same Azure subscription, navigate to the same <em>Microsoft Entra ID Privileged Identity Management</em> menu, and click <em>Approve requests</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337682-screenshot-2024-07-18-at-5-15-08-pm.png\" alt=\"Approve\" /><p>Then go to the Groups side tab and click Approve on the outstanding request.</p>\n\n<p><strong>Note</strong>: Requesters cannot approve their own requests even if they are designated as an approver. </p>\n\n<p>Confirm that you are placed in the correct managed group and that you can see the test target. Using the <a href=\"https://developer.hashicorp.com/boundary/install#desktop-client\">Boundary Desktop client</a>, log out. Then select your <em>Azure</em> auth method, and click <em>Sign-in</em>.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337652-screenshot-2024-07-18-at-5-13-35-pm.png\" alt=\"boundary\" /><p>7. Confirm that you can see your test target in the <em>Targets</em> list.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337687-screenshot-2024-07-18-at-5-17-16-pm.png\" alt=\"Targets\" /><p>Optional confirmation: You can also check other settings to confirm that you are now placed in the correct managed groups after the approval. Log onto the Boundary Admin UI (via browser) as an administrator. Navigate to <em>Auth Methods</em> on the left side tab and click on your <em>Azure</em> auth method. </p>\n<img src=\"https://www.datocms-assets.com/2885/1721337693-screenshot-2024-07-18-at-5-17-39-pm.png\" alt=\"Azure\" /><p>8. Click the <em>Managed Groups</em> subtab, and click the <em>Production - Boundary on Azure</em> managed group you created earlier.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337701-screenshot-2024-07-18-at-5-17-50-pm.png\" alt=\"managed\" /><p>9. Click the <em>Members</em> subtab. You should see yourself as a member of this managed group. Any other Azure user in the same Entra ID group as yourself will also appear in this Boundary managed group. Once your PIM approval expires, the next time you log onto Boundary, you will be removed from the managed group.</p>\n<img src=\"https://www.datocms-assets.com/2885/1721337710-screenshot-2024-07-18-at-5-18-03-pm.png\" alt=\"Managed\" /><h2>What’s next?</h2>\n\n<p>This blog post discussed how to automate just-in-time access to infrastructure resources based on approval workflows by integrating Boundary with Microsoft Privileged Identity Management or other platforms that offer approval workflow capabilities. This is just one of the many integration points that extend Boundary features and capabilities with other common products and tools. For example, Boundary seamlessly integrates with HashiCorp Vault to generate short-lived dynamic credentials for resources like SSH certificates for Linux hosts. This dramatically reduces the chances of a breach if credentials are stolen or leaked. </p>\n\n<p>Boundary also features credential injection, which automatically injects credentials into an SSH target on behalf of the remote user, providing a passwordless experience. Boundary can also dynamically discover hosts in your <a href=\"https://developer.hashicorp.com/boundary/tutorials/access-management/aws-host-catalogs\">Amazon Web Services (AWS)</a> and <a href=\"https://developer.hashicorp.com/boundary/tutorials/access-management/azure-host-catalogs\">Microsoft Azure</a> environments. This means admins don’t have to manually add individual hosts into Boundary’s host catalog, dramatically reducing administrative burden, especially in cloud environments where IP addresses are ephemeral.</p>\n\n<p>To learn more, you can explore Boundary’s capabilities in our <a href=\"https://developer.hashicorp.com/boundary/tutorials\">Boundary tutorials</a>:</p>\n\n<ul>\n<li><a href=\"https://developer.hashicorp.com/boundary/tutorials/hcp-administration/hcp-ssh-cred-injection\">Inject SSH credentials with HCP Boundary</a></li>\n<li><a href=\"https://developer.hashicorp.com/boundary/tutorials/credential-management/hcp-certificate-injection\">SSH certificate injection with HCP Boundary</a></li>\n<li><a href=\"https://developer.hashicorp.com/boundary/tutorials/credential-management/hcp-vault-cred-brokering-quickstart\">Credential brokering to Postgres database</a></li>\n<li><a href=\"https://developer.hashicorp.com/boundary/tutorials/host-management/aws-host-catalogs\">Dynamic host catalogs on AWS</a></li>\n<li><a href=\"https://developer.hashicorp.com/boundary/tutorials/host-management/azure-host-catalogs\">Dynamic host catalogs on Azure</a></li>\n</ul>\n","author":"Van Phan","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"bba5fcf5e4746ebe186bf5bc48f3e0210aad83c91da0484b183f7d8ae2ffd1b7","category":"Tech"}