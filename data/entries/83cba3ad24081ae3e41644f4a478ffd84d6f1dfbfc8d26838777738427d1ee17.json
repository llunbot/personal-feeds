{"title":"How To Host A WordPress Site On Amazon Lightsail","link":"https://smashingmagazine.com/2023/02/host-wordpress-site-amazon-lightsail/","date":1675328400000,"content":"<p>This article is a sponsored by <a href=\"https://aws.amazon.com/\">AWS Amazon</a></p>\n<p>A good chunk of all websites out there runs on Amazon Web Services (AWS). At the most basic, a website will usually use <a href=\"https://aws.amazon.com/ec2/\">Amazon EC2</a> and <a href=\"https://aws.amazon.com/s3/\">Amazon S3</a> solutions (for computing power and data storage, respectively), and most likely also <a href=\"https://aws.amazon.com/cloudfront/\">Amazon CloudFront</a> (as the content delivery network [CDN] to distribute the assets).</p>\n<p>This stack works very well and is super powerful, but it is not dead easy to set up, as each of these services needs to be configured to interact with one another. And once that‚Äôs done, we need to configure the operating system and install the CMS, and anything else needed to run our software.</p>\n<p>If all we need is to launch a website quickly and easily (for instance, to show the website under development to our client or to test a WordPress plugin), spending time to set up all these separate AWS services could be a bit too much.</p>\n<p>This is why AWS created <a href=\"https://aws.amazon.com/lightsail/?trk=7cac8a80-652f-40a3-9cf6-634bd78a89a2&amp;sc_channel=el\">Amazon Lightsail</a>, a service that aggregates the other services (EC2, S3, CloudFront, and a few others) via a simplified user interface to launch webservers with everything installed and configured (for both hardware and core software) and ready to be used.</p>\n<p>With Lightsail, we can have our website up and running in a matter of minutes.</p>\n<p>Unlike most AWS services, Lightsail has a flat pricing structure, with a fixed price per month. (In contrast, EC2 is charged per number of seconds of use; EBS ‚Äî which provides the volumes to store data in EC2 ‚Äî by the size and type of disk along with any additional provisioned IOPS; S3, by the size of the stored objects and duration of storage; and CloudFront, by the amount of data transferred.) This makes it way easier to estimate our AWS bill at the end of the month.</p>\n<p><strong>Note</strong>: <em>You can <a href=\"https://aws.amazon.com/lightsail/pricing/?trk=7cac8a80-652f-40a3-9cf6-634bd78a89a2&amp;sc_channel=el\">try out Lightsail for free</a> for the first three months.</em></p>\n<p>In this article, let‚Äôs explore how to launch a <strong>WordPress site</strong> in Lightsail in a quick and easy way.</p>\nCreating A Lightsail Instance With WordPress Pre-Installed\n<p>To access Lightsail, we head over to <a href=\"https://lightsail.aws.amazon.com/?trk=7cac8a80-652f-40a3-9cf6-634bd78a89a2&amp;sc_channel=el\">lightsail.aws.amazon.com</a> (we need to be logged in to AWS).</p>\n<p>Initially, our dashboard will be empty:</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/1-lightsail-dashboard.png\" /></p>\n<p>Let‚Äôs click on ‚ÄúCreate instance‚Äù to host a WordPress site.</p>\n<p>We must select the location of the server, the platform to use (Linux/Unit or Windows), and what software to install (OS + Apps) via the provided blueprints. Please notice that the WordPress blueprint installs the latest version and that there are separate blueprints for WordPress as a single site and as a multisite.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/2-lightsail-dashboard-creating-instance.png\" /></p>\n<p>Choose a location that is as close as possible to your users to reduce the latency when accessing the site.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/3-lightsail-dashboard-choosing-instance-location.png\" /></p>\n<p>Lightsail has different prices based on how powerful the server is: <strong>The more traffic the website has, the more resources the server must have</strong>.</p>\n<p>We can get a basic server that is good for testing for $3.50/month USD; for production, we‚Äôd rather start with a server at $5 or 10/month, monitor its traffic, and analyze (over time) if to upgrade it.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/4-lightsail-dashboard-Instance-price.png\" /></p>\n<p>We finally assign a name to the instance and click on ‚ÄúCreate instance.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/5-lightsail-dashboard-assigning-name-instance.png\" /></p>\n<p>The instance will be created in the background. After less than 1 minute, it will be ready, and its status on the dashboard will change from ‚ÄúPending‚Äù to ‚ÄúRunning.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/6-lightsail-dashboard-instance-created.png\" /></p>\n<p>Please notice the ‚ÄúTerminal‚Äù icon right next to the instance‚Äôs name. In the sections below, we will be using it to connect to the instance via SSH and execute commands on the server.</p>\nAttaching A Static IP\n<p>When the instance is created, the IP assigned to it is ‚Äúelastic,‚Äù which can change (for instance, when rebooting the server). So we must create a static IP and attach it to the instance so that it never changes.</p>\n<p>For that, head over to the Networking tab and, under ‚ÄúPublic IP,‚Äù click on ‚ÄúAttach static IP.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/7-wordpress-demo-elastic-IP.png\" /></p>\n<p>We must provide a name to identify the static IP.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/8-creating-static-IP.png\" /></p>\n<p>Click on ‚ÄúCreate and attach,‚Äù upon which the server will now have a static IP associated with it.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/9-static-IP-attached-instance.png\" /></p>\n<p>We can now access our WordPress site in the browser under <code>http://{PUBLIC_IP}</code>.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/10-accessing-wordpress-site.png\" /></p>\n<p>Hello, WordPress site! üëã</p>\nAccessing The WP Admin\n<p>The WordPress admin‚Äôs username is <code>user</code>, and we need to retrieve the password from the server by connecting to it via SSH.</p>\n<p>For that, we click on the ‚ÄúTerminal‚Äù icon next to the instance name (as seen earlier), upon which a new window opens up in the browser, with a CLI running on the instance.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/11-connecting-instance-via-SSH.png\" /></p>\n<p>Execute the following command to print the password on the screen.</p>\n<pre><code>cat bitnami_application_password\n</code></pre>\n\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/12-printing-admin-password.png\" /></p>\n<p>Then highlight the password, and click on the orange clipboard icon (on the bottom right corner) to copy the password from the popping window.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/13-copying-password-clipboard.png\" /></p>\n<p>Head over to the WordPress admin screen under <code>http://{PUBLIC_IP}/wp-login.php</code>, and input the username and password.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/14-logging-into-wp-admin.png\" /></p>\n<p>Voil√†, we are in.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/15-wordpress-sitelogged-into-wp-admin.png\" /></p>\nUsing A Custom Domain\n<p>Accessing the website straight from the public IP is not ideal, so let‚Äôs create a custom domain.</p>\n<p>In your DNS service, create an <code>A</code> record mapping your domain or subdomain to the instance‚Äôs public IP (if you don‚Äôt have a domain, you can also <a href=\"https://lightsail.aws.amazon.com/ls/webapp/create/route-53-domain?trk=7cac8a80-652f-40a3-9cf6-634bd78a89a2&amp;sc_channel=el\">register a new one via Lightsail</a>). I use AWS Route 53, but any DNS service will work.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/16-create-DNS-record-Route-53.png\" /></p>\n<p>We can now access the website via the chosen domain.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/17-access-site-under-custom-domain.png\" /></p>\nInstalling SSL\n<p>So far, we have been accessing the website under <code>http</code>. If we try <code>https</code>, we are told it is not secure.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/18-site-under-https-unsafe.png\" /></p>\n<p>So it‚Äôs time to install an SSL certificate provided via <strong>Let‚Äôs Encrypt</strong>. For this, we need to log in to the terminal again and enter the following command:</p>\n<pre><code>sudo /opt/bitnami/bncert-tool\n</code></pre>\n\n<p>The program will request to input the list of domains for which to create the certificate (so you can add <code>yourdomain.com</code> and <code>www.yourdomain.com</code>).</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/19-wordpress-demo-installing-ssl.png\" /></p>\n<p>The program will then request some more info (including your email) and ask if to redirect HTTP traffic to HTTPS (it‚Äôs recommended to say yes). Once it‚Äôs all provided, the certificate will be created.</p>\n<p>Now, accessing the site under <code>https</code> works well:</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/20-website-under-https-OK.png\" /></p>\n<p>There‚Äôs one final step to do: Change the site URL in WordPress from <code>http</code> to <code>https</code> so that all links in the site point to the secure location, and we avoid the HTTP to HTTPS redirects.</p>\n<p>Heading to the General Settings screen in WordPress, we see that both the ‚ÄúWordPress Address (URL)‚Äù and ‚ÄúSite Address (URL)‚Äù inputs cannot be edited.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/21-wordpress-demo-general-settings.png\" /></p>\n<p>To modify this configuration, we need to edit the <code>wp-config.php</code> file via the terminal.</p>\n<p>Then connect to the terminal again, and execute this command:</p>\n<pre><code>sudo nano /opt/bitnami/wordpress/wp-config.php\n</code></pre>\n\n<p>The command opens the file in the <code>nano</code> text editor.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/22-editing-wpconfig-php-file-with-nano.png\" /></p>\n<p>Scroll down until finding this code:</p>\n<pre><code>define('WP_SITEURL', 'http://' . $_SERVER['HTTP_HOST'] . '/');\ndefine('WP_HOME', 'http://' . $_SERVER['HTTP_HOST'] . '/');\n</code></pre>\n\n<p>And replace it with this code:</p>\n<div>\n\n<pre><code>define('WP_SITEURL', 'https://' . $_SERVER['HTTP_HOST'] . '/');\ndefine('WP_HOME', 'https://' . $_SERVER['HTTP_HOST'] . '/');\nif (isset($_SERVER['HTTP_CLOUDFRONT_FORWARDED_PROTO']) &amp;&amp; $_SERVER['HTTP_CLOUDFRONT_FORWARDED_PROTO'] === 'https') {\n    $_SERVER['HTTPS'] = 'on';\n}\n</code></pre>\n</div>\n\n<p>Then press Ctrl + O (to save) and Ctrl + X (to exit). Reloading the General Settings screen in WordPress, we see the site URL now uses <code>https</code>.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/23-wordpress-demo-general-settings-update-https.png\" /></p>\nModifying The Admin Username\n<p>Lightsail sets the admin‚Äôs username as <code>user</code>. Because WordPress does not allow modification of the username once registered, if we‚Äôd like to modify it, we need to do it directly in the MySQL database.</p>\n<p>To do this, execute the following command in the terminal (in this case, updating the username to <code>leo</code>):</p>\n<div>\n\n<pre><code>mysql -u root -p$(cat /home/bitnami/bitnami_application_password) -e 'UPDATE wp_users set user_login = \"leo\" where ID = 1;' bitnami_wordpress\n</code></pre>\n</div>\n\n<p>Going to the admin user‚Äôs profile, we can see the username has been updated.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/24-updated-admin-username-wordpress-demo.png\" /></p>\nStoring The Images In An S3 Bucket\n<p>When uploading images (or any media asset) to WordPress, these are stored under the server‚Äôs folder <code>wp-content/uploads</code> and subsequently served from there.</p>\n<p>This is a concern because the server should be considered expendable so that if it crashes and needs to be regenerated, no data will be lost. We can create a <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/understanding-instance-snapshots-in-amazon-lightsail?trk=7cac8a80-652f-40a3-9cf6-634bd78a89a2&amp;sc_channel=el\">snapshot</a> from the server to backup our data, and that will contain the folder with the images, but only starting from the moment in which the snapshot was taken; any image uploaded afterward would be lost.</p>\n<p>Another issue could arise when hosting the site on multiple servers. If our traffic goes up, we can increase the computing power in Lightsail by launching additional servers (accessed behind a <a href=\"https://aws.amazon.com/lightsail/features/load-balancing/?trk=7cac8a80-652f-40a3-9cf6-634bd78a89a2&amp;sc_channel=el\">load balancer</a>, and all of them reading/writing to the same <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-databases?trk=7cac8a80-652f-40a3-9cf6-634bd78a89a2&amp;sc_channel=el\">managed database</a>).</p>\n<p>However, images hosted in one server are in that server alone; if a request for that image were handled by a different server, the image would be missing.</p>\n<p>The solution is to host the images in an S3 bucket and have the WordPress site serve the images directly from the bucket.</p>\n<p>Let‚Äôs do that. In Lightsail, head over to the Storage tab and click on ‚ÄúCreate bucket.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/25-amazon-lightsail-storage-dashboard.png\" /></p>\n<p>Lightsail offers the same flat pricing structure for S3 buckets as for EC2 instances: Depending on our storage and transfer needs, we can choose a plan that costs $1, 3, or 5 per month.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/26-amazon-lightsail-choosing-plan-when-creating-bucket.png\" /></p>\n<p>Make sure to choose the same AWS region as the location for the bucket as you had for the server (to reduce latency when uploading the images).</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/27-amazon-lightsail-choosing-location-when-creating-bucket.png\" /></p>\n<p>Finally, provide a unique name for the bucket, and click on ‚ÄúCreate bucket.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/28-bucket-created-amazon-lightsail.png\" /></p>\n<p>The bucket is now created, but we still need to configure it to update its permissions to make the uploaded assets public.</p>\n<p>Click on the bucket name and, under the Permissions tab, select ‚ÄúIndividual objects can be made public and read-only.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/29-amazon-lightsail-wordpress-bucket-access-permissions.png\" /></p>\n<p>Under Resource access, attach the server to the bucket (then we can avoid defining our AWS credentials on the WordPress site).</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/30-amazon-lightsail-attaching-instance-to-bucket.png\" /></p>\n<p>Our Lightsail configuration is done. Next, we need to configure the WordPress site to upload images to the bucket.</p>\n<p>This is achieved via <a href=\"https://wordpress.org/plugins/amazon-s3-and-cloudfront/\">WP Offload Media Lite</a>, a free WordPress plugin that automatically uploads to S3 any asset added to the WordPress Media Library.</p>\n<p>Head over to the plugins screen, search for ‚ÄúWP Offload Media Lite for Amazon S3,‚Äù and install and activate the plugin from the search results.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/31-wordpress-demo-installing-WP-offload-media-lite.png\" /></p>\n<p>Once activated, head over to <code>Settings &gt; WP Offload Media</code> to configure the plugin.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/32-wordpress-demo-site-settings-WP-offload-media-lite.png\" /></p>\n<p>In the Connection Method section, select ‚ÄúMy server is on Amazon Web Services, and I'd like to use IAM Roles,‚Äù and save your changes.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/33-connection-method-WP-offload-media-lite.png\" /></p>\n<p>Next, edit the <code>wp-config.php</code> file via the terminal (as explained earlier), and paste the following code anywhere near the top:</p>\n<pre><code>define( 'AS3CF_SETTINGS', serialize( array(\n    'provider' =&gt; 'aws',\n    'use-server-roles' =&gt; true,\n) ) );\n</code></pre>\n\n<p>Back to the plugin settings, there is a <code>Storage Provider &gt; Bucket tab</code>, where we must select the bucket we created to host our images.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/34-selecting-bucket-WP-offload-media-lite.png\" /></p>\n<p>On the next screen, we can optionally adjust the permissions to access the assets or click on ‚ÄúKeep Bucket Security As Is,‚Äù which will finalize the bucket configuration.</p>\n<p>Finally, let‚Äôs make the plugin always retrieve the assets using HTTPS. In the Delivery Settings tab, select ‚ÄúForce HTTPS‚Äù and then ‚ÄúSave Changes.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/35-media-force-https-on.png\" /></p>\n<p>The plugin settings are now complete. We test it out by going to <code>Media &gt; Add New</code>, uploading an image, and inspecting its file URL. If everything goes well, this should start with the bucket URL.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/36-wordpress-demo-settings-image-upload-bucket.png\" /></p>\nDistributing Images Via A CDN\n<p>We are almost done configuring the website. There is only one thing left to do: Add a CDN to access the images, so these will be served from a location nearby the user, reducing the latency and improving the overall performance of the site.</p>\n<p>For this, head over to the Networking tab and click on ‚ÄúCreate distribution.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/37-amazon-lightsail-networking-dashboard-wordpress.png\" /></p>\n<p>In the Create a distribution screen, choose the bucket as the origin of the distribution. </p>\n<p><strong>Note</strong>: <em>The image request will be processed by an edge location near the user, which will first retrieve the asset from the bucket, cache it, and serve it from this location from then on.</em></p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/38-amazon-lightsail-choosing-origin-CDN-distribution.png\" /></p>\n<p>The pricing structure is flat. Choose the 50 GB plan at $2.50/month, which is free for the first year.</p>\n<p>Then provide a unique name for the distribution, and click on ‚ÄúCreate distribution.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/39-amazon-lightsail-creating-CDN-distribution.png\" /></p>\n<p>The distribution is now created. On the top right, we can visualize the domain from which to access our assets, of shape <code>{subdomain}.cloudfront.net</code> (we can change this to a custom domain under the Custom domains tab).</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/40-amazon-lightsail-visualizing-CDN-distribution-doman.png\" /></p>\n<p>We must modify the settings for <strong>WP Offload Media Lite</strong> to indicate to serve images from the CDN.</p>\n<p>For that, head over to the Delivery Settings tab and edit the provider (currently set as Amazon S3).</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/41-amazon-lightsail-delivery-settings-WP-offload-media-lite.png\" /></p>\n<p>Choose ‚ÄúAmazon CloudFront‚Äù and click on ‚ÄúSave Delivery Provider.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/42-amazon-lightsail-updating-delivery-provider-WP-offload-media-lite.png\" /></p>\n<p>Now back to the Delivery Settings tab, there is a new section, ‚ÄúUse Custom Domain Name (CNAME).‚Äù Paste there the distribution domain, and click on ‚ÄúSave Changes.‚Äù</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/43-amazon-lightsail-updating-distribution-doman-wordpress-settings.png\" /></p>\n<p>To test it out, go once again to <code>Media &gt; Add New</code>, upload an image, and check that the file URL now starts with the distribution domain.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/44-wordpress-site-settings-validating-image-served-from-CDN.png\" /></p>\n<p>Success! Accessing our WordPress site will now have its assets served by the AWS CDN, greatly increasing the performance of the site.</p>\n<p><img src=\"https://files.smashing.media/articles/wordpress-site-hosted-by-amazon-lightsail/45-wordpress-blog-post-with-image.png\" /></p>\nWe‚Äôre Done Here, Now It‚Äôs Your Turn\n<p>Lightsail provides all the power we need to host our websites, as we are used to from AWS, but making it way easier than ever before. In this article, we saw how to launch a WordPress site quickly and easily (the whole process took me between 15 and 30 minutes).</p>\n<p>Lightsail conveniently offers a flat pricing structure that takes all surprises away from our bills. And you can try it without spending a penny: <a href=\"https://aws.amazon.com/lightsail/pricing/?trk=7cac8a80-652f-40a3-9cf6-634bd78a89a2&amp;sc_channel=el\">it‚Äôs free for the first three months</a>. So check it out!</p>","author":"","siteTitle":"Articles on Smashing Magazine ‚Äî For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"83cba3ad24081ae3e41644f4a478ffd84d6f1dfbfc8d26838777738427d1ee17","category":"Tech"}