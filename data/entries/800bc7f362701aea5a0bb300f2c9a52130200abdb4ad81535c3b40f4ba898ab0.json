{"title":"Terraform delivers launch-day support for Amazon S3 Express","link":"https://www.hashicorp.com/blog/terraform-delivers-launch-day-support-for-amazon-s3-express","date":1701201600000,"content":"<p>In partnership with Amazon Web Services (AWS), we are excited to announce launch-day support for <a href=\"https://aws.amazon.com/blogs/aws/new-amazon-s3-express-one-zone-high-performance-storage-class/\">Amazon S3 Express One Zone storage class</a> in the HashiCorp Terraform AWS provider. Launched at <a href=\"https://reinvent.awsevents.com/\">AWS re:Invent 2023</a>, Amazon S3 Express is a high-performance storage solution for users requiring ultra-low latency and large storage volumes for their applications. Applications can easily access S3 Express through the existing S3 API, allowing for quick and seamless integration with many other AWS services that are supported by the Terraform AWS provider. </p>\n\n<h2>High-performance storage</h2>\n\n<p>S3 Express is a new bucket type, built from the ground up to deliver single-digit millisecond</p>\n\n<p>response times for the most frequently accessed datasets. Organizations with compute-intensive big data workloads such as autonomous vehicle data, financial risk modeling, real-time online advertising, and machine-learning training and inference can easily provision the new bucket type using Terraform.</p>\n\n<p>Three key features support S3 Express’ performance goals:</p>\n\n<p><strong>A low-latency zonal storage class</strong>. S3 Express optimizes for speed by replicating and storing data within the same Availability Zone as your compute workloads.</p>\n\n<p><strong>A new bucket type with a hierarchical namespace</strong>. This new bucket type has a hierarchical namespace and stores object key names in a directory-like manner, as opposed to the flat key structure of traditional S3 buckets.</p>\n\n<p><strong>A new fast-authorization API</strong>. S3 Express introduces a new session-based authorization capability that reduces the latency associated with S3 request authorizations. This new capability can be used to create and periodically refresh your connection sessions to the new bucket type.</p>\n\n<h2>Configuring S3 Express in the Terraform AWS provider</h2>\n\n<p>To set up S3 Express in the Terraform AWS provider, use the new <code>aws_s3_directory_bucket</code> resource. You also need to use the existing resources to manage the new S3 Express buckets:</p>\n\n<ul>\n<li> <code>aws_s3_bucket_policy</code></li>\n<li> <code>aws_s3_object</code></li>\n</ul>\n\n<p>To try out this feature, you need:</p>\n\n<ul>\n<li>Terraform  0.12 or greater installed</li>\n<li>Version 5.28 of the <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs\">Terraform AWS provider</a></li>\n</ul>\n\n<p>To create an S3 Express bucket, apply the following configuration:</p>\n<pre><code>resource \"aws_s3_directory_bucket\" \"example\" {\n  # S3 directory bucket names must follow the format\n  # ----x-s3\n  # where  is the Availability Zone ID\n  # \thttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#az-ids\n  # You can use the aws_availability_zone data source to obtain the AZ ID.\n  bucket = \"example--usw2-az2--x-s3\"\n\n  location {\n    name = \"usw2-az2\"\n  }\n\n  # All objects should be deleted from the bucket when the bucket is destroyed\n  # so that the bucket can be destroyed without error.\n  force_destroy = true\n}\n</code></pre><p>Here is an example configuration of an S3 Express bucket policy and object:</p>\n<pre><code>data \"aws_partition\" \"current\" {}\ndata \"aws_caller_identity\" \"current\" {}\n\ndata \"aws_iam_policy_document\" \"example\" {\n  statement {\n    effect = \"Allow\"\n\n    actions = [\n      \"s3express:*\",\n    ]\n\n    resources = [\n      aws_s3_directory_bucket.example.arn,\n    ]\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:root\"]\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"example\" {\n  bucket = aws_s3_directory_bucket.example.bucket\n  policy = data.aws_iam_policy_document.example.json\n}\n\n# aws_s3_object is used with directory buckets just like general purpose buckets.\n# Note: tags are not supported for objects in directory buckets.\nresource \"aws_s3_object\" \"example\" {\n  bucket = aws_s3_directory_bucket.example.bucket\n  key    = \"example\"\n  source = \"path/to/file\"\n}\n</code></pre><h2>Key benefits of Terraform support for Amazon S3 Express</h2>\n\n<p>As the Terraform AWS provider download count tops 2 billion, AWS and HashiCorp continue to develop new integrations to help customers work faster, use more services and features, and enjoy developer-friendly ways to provision cloud infrastructure. Launch-day support of the Amazon S3 Express One Zone storage class in the Terraform AWS provider allows practitioners to immediately begin managing this new offering in their existing Terraform workflows. Here are two main benefits of Terraform’s launch-day support for S3 Express:</p>\n\n<ol>\n<li><strong>Increased productivity:</strong> Developers can leverage their existing Terraform knowledge and familiar syntax to manage Amazon S3 Express buckets using the Terraform AWS provider.</li>\n<li><strong>Cost efficiency:</strong> Platform teams can immediately take advantage of this new offering to accelerate AI/ML and other latency-sensitive compute workloads in AWS while providing a seamless user experience to downstream developers.</li>\n</ol>\n\n<h2>Learn more about AWS and HashiCorp</h2>\n\n<p>To learn more about Amazon S3 Express One Zone storage class support in Terraform, please refer to the <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_directory_bucket\">documentation</a>. To learn the basics of Terraform using the AWS provider, follow the hands-on tutorials for <a href=\"https://developer.hashicorp.com/terraform/tutorials/aws-get-started\">getting started with Terraform on AWS</a> on our developer education platform.</p>\n\n<p>Please share any bugs or enhancement requests with us via the <a href=\"http://github.com/terraform-providers/terraform-provider-aws\">Terraform AWS provider repository on GitHub</a>. We look forward to your feedback and want to thank you for being such a great community!</p>\n\n<p>If you are completely new to Terraform, <a href=\"http://hashi.co/tf-cloud-bc\">sign up for Terraform Cloud</a> and get started using the Free offering today.</p>\n","author":"Aurora Chun","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"800bc7f362701aea5a0bb300f2c9a52130200abdb4ad81535c3b40f4ba898ab0","category":"Tech"}