{"title":"สรุป library ที่แนะนำไปในเรื่อง Flutter 101","link":"https://www.somkiat.cc/note-flutter-library/","date":1707193896000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/02/flutter-101-150x150.png\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/02/flutter-101-150x150.png 150w, https://www.somkiat.cc/wp-content/uploads/2024/02/flutter-101-75x75.png 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/02/flutter-101.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/02/flutter-101-1024x563.png\" width=\"576\" height=\"316\" /></a></figure>\n\n\n\n<p>มีโอกาสไปแนะนำเรื่องของการพัฒนาระบบงานด้วย <a href=\"https://flutter.dev/\" target=\"_blank\">Flutter</a><br />ที่มหาวิทยาลัยราชภัฏพิบูลสงคราม จำนวน 3 วัน<br />เป็นการปูพื้นฐานสำหรับการพัฒนาระบบด้วย Flutter<br />ซึ่งเน้นไปที่ Mobile app<br />โดยมีเนื้อหาดังนี้</p>\n\n\n\n<span></span>\n\n\n\n<ul>\n<li>Architecture ของ Flutter ว่าเป็นอย่างไร คืออะไรบ้าง</li>\n\n\n\n<li>ภาษาโปรแกรมที่ต้องศึกษาให้ดีคือ <a href=\"https://dart.dev/\" target=\"_blank\">Dart</a></li>\n\n\n\n<li>การติดตั้งและเครื่องมือต่าง ๆ ที่จำเป็นต่อการพัฒนา ทั้ง editor, device เป็นต้น</li>\n\n\n\n<li>CLI tool ต่าง ๆ ที่ flutter และ dart เตรียมไว้ให้เช่น fomat code, lint, analyze code,  test, run, spect ui  เป็นต้น</li>\n\n\n\n<li>การลงมือสร้าง app เพื่อทำงานเรียนรู้ภาษาโปรแกรมและเครื่องมือ</li>\n\n\n\n<li>โครงสร้างของระบบที่ดี เช่น MVC, MVP, MVVM และ clean architecture ซึ่งแบ่งเป็นสองกลุ่มคือ layer based และ feature/domain based</li>\n</ul>\n\n\n\n<p>และอีกอย่างที่เยอะหน่อยคือ library ที่ใช้งาน<br />มีทั้ง standard และ 3-party<br /><strong>โดยจะสรุป library ที่เป็น 3-party ไว้นิดหน่อยดังนี้</strong></p>\n\n\n\n<ul>\n<li>Router ใช้งาน go_router</li>\n\n\n\n<li>State management ใช้งาน GetX ซึ่งก็มี router ให้ด้วย ก็ใช้แทน go_router ไปเลย รวมทั้งยังไม่เรื่องของ dependency management ให้ด้วย ใช้ง่าย ๆ สบาย ๆ</li>\n\n\n\n<li>สำหรับ State management ยังมีตัวอื่น ๆ ที่ใช้งานกัน เช่น riverpod, BLoC</li>\n\n\n\n<li>การจัดการข้อมูลเช่น shared_preference และ secure storage</li>\n\n\n\n<li>การจัดการข้อมูลงลง database นั้นแนะนำ 3 ตัวคือ sqflite, hive, supabase และ firebase realtime database ซึ่งใช้ง่ายดี</li>\n\n\n\n<li>อย่าลืมติดตั้งพวก firebase crashlytic และ analytic ด้วย ขาดไม่ได้เลย</li>\n\n\n\n<li>การเชื่อมต่อข้อมูลผ่าน HTTPs เช่นเรียกใช้งาน REST APIs แนะนำให้ใช้ dio หรือ retrofit หรือ chopper ส่วนในการทดสอบใช้งาน http_mock_adapter ไปก็สะดวกดี</li>\n\n\n\n<li>พวก form ต่าง ๆ ลองใช้งาน flutter_form_builder</li>\n\n\n\n<li>ถ้าต้องการ capture รูปของแต่ละ widget ไว้ดู ใช้งาน screenshot ได้</li>\n\n\n\n<li>เรื่องของ adaptive และ responsive นั้น ชอบใช้งาน flutter_screenutil, responsive_framework และ responsive_builder เป็นต้น</li>\n\n\n\n<li>ส่วน UI/widget ต่าง ๆ ลองดูแรงบันดาลใจจาก <a href=\"https://flutterawesome.com/\" target=\"_blank\">awesome flutter</a> ได้</li>\n\n\n\n<li>พวก animation ต่าง เช่น Lottie for Flutter และ Rive เป็นต้น</li>\n</ul>\n\n\n\n<p></p>\n\n\n\n<p><strong>Reference Websites</strong></p>\n\n\n\n<ul>\n<li><a href=\"https://fluttergems.dev/\" target=\"_blank\">Flutter gems</a></li>\n</ul>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"92e2147f725d6431062b9948d1564fab22017658c46ab7c2612549c164ff525b","category":"Thai"}