{"title":"สรุปการพูดคุยเรื่อง ปรับปรุงแนวทางการพัฒนา App ด้วย Flutter","link":"https://www.somkiat.cc/flutter-lead-to-improve/","date":1629779540000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/08/C-we-01-800x500-1-150x150.jpg\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/08/C-we-01-800x500-1.jpg\" /></figure>\n\n\n\n<p>เพิ่งคุยกับทีมพัฒนา Mobile App ด้วย Flutter มา<br />เรื่องของแนวทางการปรับปรุงการพัฒนา App นิดหน่อย<br />โดยปัญหาที่เริ่มเห็นกันมาก ๆ และส่งผลรุนแรงขึ้น<br />คือการดูแลรักษา App<br />ทั้งในเรื่องของการเพิ่ม แก้ไขความสามารถต่าง ๆ<br />รวมทั้งแก้ไข issue หรือ bug ที่เจอหรือรับแจ้งเข้ามา<br />แน่นอนว่า ต้องการ feedback ที่รวดเร็วพร้อมกับคุณภาพที่สูง<br />ดังนั้นจึงพูดคุยหาแนวทางกันหน่อย</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>ปัญหาแรกที่เจอคือ แก้ไขแล้วไม่รู้ว่าไปกระทบการทำงานส่วนไหน ?</strong></p>\n\n\n\n<p>เป็นปัญหา classic มาก ๆ<br />เพราะว่าในช่วงแรกจะเน้นไปที่การพัฒนาให้เสร็จ ให้เสร็จ และ ให้เสร็จ<br />แต่พอถึงจุดหนึ่งที่คนใช้งานเยอะ<br />จำนวน feature เยอะ<br />ปัญหาและข้อผิดพลาดก็ตามมา<br />การจะแก้ไขมันไม่ง่ายแลย</p>\n\n\n\n<p><strong>จึงเริ่มที่การวิเคราะห์ปัญหา และแนวทางแก้ไข</strong><br />สิ่งที่เห็นร่วมกันคือ <br />ในการแก้ไขข้อผิดพลาดต่าง ๆ ทีมควร reproduce ให้ได้ก่อน<br />จากนั้นทำการบันทึกไว้ในรูปแบบของ test case ที่สามารถ run ซ้ำ ๆ ได้<br />จากนั้นจึงแก้ไข code เพื่อให้ test case เหล่านั้นผ่าน<br />แต่ในการทำงานจริง ๆ มันไม่ง่ายเลย<br />เนื่องจากต้องทำการแก้ไขและปรับปรุงโครงสร้างของ App ให้เอื้อด้วยเช่นกัน<br />อีกทั้งการเพิ่มความสามารถใหม่ ๆ ต้องมี test case คลุมเสมอ<br />เพื่อทำให้มั่นใจยิ่งขึ้น</p>\n\n\n\n<p><strong>ดังนั้นเรื่องต่อมาคือ การปรับปรุงโครงสร้างของ App ให้ดูแลง่ายขึ้น</strong></p>\n\n\n\n<p>ซึ่งตรงนี้จะมีทั้งการแบ่งส่วนต่าง ๆ ตามหน้าที่การทำงานยกตัวอย่างเช่น</p>\n\n\n\n<ul><li>ส่วนของการแสดงผลที่แยกเป็นชิ้น ๆ ตามหน้าที่การทำงาน เพราะว่าปัจจุบันพวก god class/method เยอะมาก ๆ</li><li>อะไรที่ใช้ซ้ำ ๆ ก็แยกออกมา เช่นพวก string, coloe code และ style</li></ul>\n\n\n\n<p><strong>เมื่อไปดูโครงสร้างของ App ก็พบว่า มีปัญหาเรื่องของการจัดการ state อีก</strong></p>\n\n\n\n<p>ทำให้ทีมต้องมาช่วยกันดูว่า<br />App ที่กำลังพัฒนาและดูแลกันนั้น ควรจะจัดการ state รูปแบบไหนดี<br />และยอมรับกันแล้วว่า ที่เป็นอยู่ ยิ่งก่อให้เกิดปัญหา<br />ตรงนี้ยังฟันธงไม่ได้ว่าจะใช้วิธีการไหน<br />แต่ให้ทุกคนช่วยกันทำ POC มาในแต่ละตัวที่เลือกกันมา<br />จากนั้นมา demo และลอง implement กันอีกที<br />แล้วค่อยมาเลือกกันต่อไป !!</p>\n\n\n\n<p>จะเห็นได้ว่า เมื่อเรายอมรับว่ามีปัญหา<br />จากนั้นก็มาช่วยกันหาวิธีแก้ไขปัญหาอย่างตรงไปตรงมา<br />ก็จะยิ่งทำให้เราพัฒนาได้อย่างต่อเนื่อง</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"b4f48b17a54a90a3bbde7dc6ceac62537f21563c3675de93710367e65f38c3c4","category":"Thai"}