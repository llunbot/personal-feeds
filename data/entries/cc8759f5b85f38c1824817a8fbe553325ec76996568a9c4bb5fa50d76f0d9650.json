{"title":"Cross-Account Data Sharing for Amazon Redshift","link":"https://aws.amazon.com/blogs/aws/cross-account-data-sharing-for-amazon-redshift/","date":1628872696000,"content":"<p>To be successful in today’s fast-moving world, businesses need to analyze data quickly and take meaningful action. Many of our customers embrace this concept to become data-driven organizations.</p> \n<p>Data-driven organizations treat data as an asset and use it to improve their insights and make better decisions. They unleash the power of data by using secure systems to collect, store, and process data and share it with people in their organization. Some even offer their data and analytics as a service, to their customers, partners, and external parties to create new revenue streams.</p> \n<p>All stakeholders want to share and consume the same accurate data as a single source of truth. They want to be able to query live views of the data concurrently while experiencing no performance degradation and access the right information exactly when it’s needed.</p> \n<p><a href=\"https://aws.amazon.com/redshift/\">Amazon Redshift</a>, the first data warehouse built for the cloud, has become popular as the data warehouse component of many of our customers’ data architecture.</p> \n<p><span>Amazon Redshift</span> users <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/datashare-overview.html\">can share data with users in an AWS account</a>, but to share and collaborate on data with other AWS accounts, they needed to extract it from one system and load it into another.</p> \n<p>There is a lot of manual work involved in building and maintaining the different extract, transform, and load jobs required to make this work. As your data sharing scales and more stakeholders need data, the complexity increases. As a result, it can become hard to maintain the monitoring, compliance, and security best practices required to keep your data safe.</p> \n<p>This way of sharing does not provide complete and up-to-date views of the data, either, because the manual processes introduce delays and data inconsistencies that result in stale data, lower-quality business results, and slow responses to customers.</p> \n<p>That’s why we created cross-account data sharing for <span>Amazon Redshift</span>.</p> \n<p><span><strong>Introducing Cross-Account Data Sharing for <span>Amazon Redshift</span><br /> </strong></span>This new feature gives you a simple and secure way to share fresh, complete, and consistent data in your Amazon Redshift data warehouse with any number of stakeholders across AWS accounts. It makes it possible for you to share data across organizations and collaborate with external parties while meeting compliance and security requirements.</p> \n<p><span>Amazon Redshift</span> offers comprehensive security controls and auditing capabilities using IAM integration, system tables and <a href=\"https://aws.amazon.com/cloudtrail/\">AWS CloudTrail</a>. These allow customers to control and monitor data sharing permissions and usage across consumers and revoke access instantly when necessary.</p> \n<p>You can share data at many levels, including databases, schemas, tables, views, columns, and user-defined functions, to provide fine-grained access controls tailored to users and businesses who need access to <span>Amazon Redshift</span> data.</p> \n<p>Let’s take a look at how cross-account data sharing works.</p> \n<p><span><strong>Sharing Data Across Two Accounts<br /> </strong></span></p> \n<p>Cross-account data sharing is a two-step process. First, a producer cluster administrator creates a datashare, adds objects, and gives access to the consumer account. Second, the producer account administrator authorizes sharing data for the specified consumer. You can do this from the <a href=\"https://aws.amazon.com/redshift/\">Amazon Redshift</a> console.</p> \n<p>To get started, in the <span>Amazon Redshift</span> console, I create an <span>Amazon Redshift</span> cluster and then import some sample data. When the cluster is available, I navigate to the cluster details page, choose the <strong>Datashares</strong> tab, and then choose <strong>Create datashare</strong>.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/07/31/demo-1.jpg\" /></p> \n<p> </p> \n<p>On the <strong>Create datashare</strong> page, I enter a datashare name and then choose a database. Under Publicly accessible, I choose <strong>Enable</strong> because I want the datashare to be shared with publicly accessible clusters.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/07/31/demo-3-1.jpg\" /></p> \n<p>I then choose the objects from the database I want to include in the datashare. I have granular control of what I choose to share with others. For simplicity, I will share all the tables. In practice, though, you might choose one or more tables, views, or user-defined functions.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/07/31/demo-4.jpg\" /></p> \n<p>The last thing I need to do is add an AWS account to the datashare. I add my second AWS account ID and then choose <strong>Create datashare</strong>.<br /> <img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/07/31/demo-5.jpg\" /></p> \n<p>To authorize the data consumer I just created, in the <strong>Datashares</strong> section of the console, I choose <strong>Authorize</strong>. The <strong>Consumer status</strong> will change from <strong>Pending authorization</strong> to <strong>Authorized</strong>. Now that the datashare is set up, I’ll switch to my secondary account to show you how to consume the datashare in the consumer AWS account. It’s important to note that I need to use the same Region in the secondary account, as cross-account data sharing does not work across Regions.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/07/31/demo-auth0.jpg\" /></p> \n<p>Similar to the producer, there is a process for consuming data. First, you need to associate the data share with one or more clusters in the consumer account. You can also associate the data share to the entire consumer account so that the current and future clusters in the consumer account get access to the share.</p> \n<p>I sign in to my secondary account and go to the <strong>Datashares</strong> section of the console.  I choose the <strong>From other accounts</strong> tab and then select the news_blog_datashare that I shared from the producer AWS account. I then choose <strong>Associate</strong> to associate the datashare with a cluster in my account.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/07/31/demo-asso.jpg\" /></p> \n<p>On the details page of the cluster, I choose <strong>Create database from datashare</strong> and then enter a name for my new database.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/07/31/2021-07-31_12-30-54.jpg\" /></p> \n<p>In the query editor, I select my database and run queries against all the objects that have been made available as part of the datashare.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/07/31/run_query.jpg\" /></p> \n<p>When I choose <strong>Run</strong>, data is returned from the query. What’s important to remember is that this is a live view of the data. Any changes in the producer database will be reflected in my queries. No copying or manual transfers are required.</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/07/31/rows.jpg\" /></p> \n<p><span><strong>Things to Know</strong></span></p> \n<p>Here are a couple of interesting facts about cross-account data sharing:</p> \n<p><strong>Security</strong> – All of the permissions required for authorization and association are managed with <a href=\"https://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a>, so you can create IAM policies to control which operations each user can complete. For security considerations, see <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/control-access.html\">Controlling access for cross-account datashares</a>.</p> \n<p><strong>Encryption</strong> – Both the producer and consumer clusters must be encrypted and in the same AWS Region.</p> \n<p><strong>Regions</strong> – Cross-account data sharing is available for all Amazon Redshift <a href=\"https://aws.amazon.com/redshift/pricing/\">RA3 node types</a> in US East (N. Virginia), US East (Ohio), US West (N. California), US West (Oregon), Asia Pacific (Mumbai), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central), Europe (Frankfurt), Europe (Ireland), Europe (London), Europe (Paris), Europe (Stockholm), and South America (São Paulo).</p> \n<p><strong>Pricing</strong> – Cross-account data sharing is available across clusters that are in the same Region. There is no cost to share data. Customers just pay for the Redshift clusters that participate in sharing.</p> \n<p><a href=\"https://aws.amazon.com/redshift/features/data-sharing/\"><strong>Try Cross-Account Data Sharing for <span>Amazon Redshift</span> today.</strong></a></p> \n<p>This new feature is available right now so why not create a cluster and take cross-account data sharing for a spin? For information about how to get started, see <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/across-account.html\">Sharing data across AWS accounts</a>. Don’t forget to let me know how you get on.</p> \n<p>Happy sharing!</p> \n<a href=\"https://twitter.com/thebeebs\">— Martin</a>","author":"Martin Beeby","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"cc8759f5b85f38c1824817a8fbe553325ec76996568a9c4bb5fa50d76f0d9650","category":"Tech"}