{"title":"New version of ServiceNow Terraform Catalog enhances workflows","link":"https://www.hashicorp.com/blog/new-version-of-servicenow-terraform-catalog-enhances-workflows","date":1684166400000,"content":"<p>We’re excited to announce version 2.2 of the ServiceNow Service Catalog integration for HashiCorp Terraform, which helps platform teams and ServiceNow admins standardize and scale their organizations’ cloud adoption by offering self-service provisioning with approved configurations. </p>\n\n<p>Platform teams and admins can securely and efficiently create infrastructure from the ServiceNow Catalog interface based on Terraform code, which is sourced from the version control system attached to their Terraform Cloud organization. The roles and permissions defined in the app empower ServiceNow admins to grant the appropriate level of access to their users and secure data. Downstream users such as app developers and operations teams gain efficiency by using the ServiceNow Catalog request process they're already familiar with without needing to understand how the app is configured at the core. </p>\n\n<p>This post covers version 2.2’s new features, including:</p>\n\n<ul>\n<li>Execution mode selection for your Terraform workspaces</li>\n<li>Reduction in the number of API calls between your ServiceNow instance and Terraform Cloud</li>\n<li>Enhancements to ServiceNow ticket comments and Terraform configuration testing</li>\n</ul>\n\n<h2>Execution mode</h2>\n\n<p>Version 2.2 introduces a new feature to the Service Catalog app that allows you to set the <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/workspaces/settings#execution-mode\">execution mode</a> for your Terraform workspaces. There are several modes to choose from:</p>\n\n<ul>\n<li>The default value is \"Remote\", which executes in Terraform Cloud’s infrastructure using a consistent, reliable pool of disposable agents.</li>\n<li>Selecting Agent mode allows you to run Terraform operations on isolated, private, or on-premises infrastructure. This option requires you to create an agent pool in your organization beforehand, then provide that agent pool's ID when you order a new workspace through the Service Catalog. Note: <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/agents\">Terraform Cloud Agents</a> are available only in the Terraform Cloud Business Tier.</li>\n</ul>\n<img src=\"https://www.datocms-assets.com/2885/1684163726-service_catalog_execution_mode.png\" alt=\"Service\" /><h2>Performance improvements</h2>\n\n<p>In addition to the new execution mode, the latest version contains performance improvements. Among the most frequently requested updates was reducing API calls between ServiceNow and Terraform Cloud. To achieve this, we introduced additional conditions to the polling mechanism and limited it to shorter intervals. While the exact number may differ depending on the pipeline's size, an average Terraform run with the default on-demand polling setup now incurs only approximately 5 API calls per workspace, compared to the previous 30.</p>\n\n<h2>Other enhancements</h2>\n\n<p>Several enhancements have been made to the ServiceNow RITM ticket comments and configuration testing. With the latest update, you can now  monitor all the Terraform run stages and their corresponding timestamps within the ServiceNow ticket interface. Repetitive comments are no longer a concern with the application. Additionally, the previously introduced Test Config button now verifies the connectivity between Terraform Cloud and ServiceNow. This ensures that the Terraform credentials provided to your ServiceNow instance are accurate, allowing you to proceed to the Terraform Catalog orders with confidence.</p>\n<img src=\"https://www.datocms-assets.com/2885/1684163755-service_catalog_test_button.png\" alt=\"Service\" /><h2>Getting started with the ServiceNow Service Catalog plugin for Terraform</h2>\n\n<p>The Terraform app has been available in the ServiceNow Store for a while and has gained popularity among many users, particularly in organizations that require limited user access and tighter controls over infrastructure security.</p>\n\n<p>Cloud platform teams and ServiceNow admins can get started with the new functionality today using several resources:</p>\n\n<ul>\n<li>Install the plugin to your ServiceNow instance from the <a href=\"https://store.servicenow.com/sn_appstore_store.do#!/store/application/a3f7fe62dbe033009ba2f8fdbf96192a/2.2.0\">ServiceNow Store</a></li>\n<li>Set up the Service Catalog integration for Terraform using the documentation available on the <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/integrations/service-now\">HashiCorp Developer website</a><span> </span></li>\n<li>Begin working with Terraform Cloud by following our <a href=\"https://developer.hashicorp.com/terraform/tutorials/cloud-get-started\">Get Started tutorial</a> or <a href=\"https://www.hashicorp.com/contact-sales?utm_source=TFC4B\">contacting HashiCorp Sales</a></li>\n</ul>\n\n<p>By combining Terraform Cloud with the ServiceNow Catalog interface, we’re helping cloud platform teams and ServiceNow admins standardize and scale their organization’s cloud adoption with approved configurations that make it easy for developers to focus on building applications and generating revenue for their organizations.</p>\n","author":"POLINA JASTRZEBSKA","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"489a71108c10c58d9abc13fa25c6da4246df4d91b99166534bb40b64f9b60ac7","category":"Tech"}