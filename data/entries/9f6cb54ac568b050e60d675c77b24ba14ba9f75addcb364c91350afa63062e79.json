{"title":"How tooling consolidation can help Dev and Sec work together","link":"https://www.hashicorp.com/blog/how-tooling-consolidation-can-help-dev-and-sec-work-together","date":1733850000000,"content":"<p>Many organizations invest considerable resources in forging a strong security culture, one that prizes training, audits, incident response and software testing, and “<a href=\"https://www.darkreading.com/cybersecurity-operations/why-cyber-teams-should-invest-in-strong-communicators\">active listening</a>” in the belief that cross-team communications matter. Yet, these measures haven’t harmonized Dev and Sec teams. Ask around, and you’ll find the hallmarks of misalignment: inconsistent tooling, unfollowed security practices, security vulnerabilities,  patch failures, cloud misconfigurations, and identity theft.</p>\n\n<p>Despite rising <a href=\"https://www.iansresearch.com/resources/all-blogs/post/security-blog/2024/09/05/2024-security-budget-benchmark-report--key-findings\">investment</a> in security, the finger pointing between Dev and Sec teams around responsibility and accountability continues mostly unabated. In short, Sec teams want Devs to get serious about security, and they want software tools with guardrails that prevent Devs from ignoring security best practices. In turn, Devs resist these efforts, complaining that security procedures are cumbersome and impair their speed with the onus for compliance left solely in their laps — adding further stress to their cross-team interactions. </p>\n\n<p>While culture is important, <a href=\"https://www.youtube.com/watch?v=LCuAcc_ne6k\">software eats culture for breakfast</a>. What really moves the needle for improving speed, safety, and Dev/Sec relations is workflow standardization and well-crafted guardrails, with modern, battle-tested tools that nudge teams toward better software delivery practices. The best way forward for organizations struggling with the <a href=\"https://www.hashicorp.com/on-demand/move-fast-and-secure-things\">balancing act between Dev and Sec</a> is to start with tooling consolidation with the help of a <a href=\"https://www.hashicorp.com/resources/what-is-a-platform-team-and-why-do-we-need-them\">platform team</a>. </p>\n\n<h2>The case for consistent tooling</h2>\n\n<p>The first step in a tooling consolidation initiative is to get managers and executives. It shouldn’t be too hard since <a href=\"https://lsvp.com/cyber60-2024-2025/\">50% of CISOs are already asking for tool consolidation</a> from their teams. The only thing teams have to do is make the case for consistent tooling. So here’s the story teams should start with:</p>\n\n<p>For years, many organizations have allowed Dev and Sec teams to go their own way and choose their preferred solutions. Amid a prolonged shortage of security skills, the thinking went: “Why not prioritize comfort and familiarity? We don’t want to lose scarce talent.” The same argument has also applied to Dev tool preferences. However, this decentralized decision-making led to an unintended consequence: Tool sprawl and fragmented processes. </p>\n\n<h3>The challenge</h3>\n\n<p>Armon Dadgar, HashiCorp Co-Founder and CTO has a good explanation for why that’s bad:</p>\n\n<p>“I think the challenge in this model almost inevitably is 12 months, 18 months, 24 months into this, what we end up seeing is everything you'd expect: </p>\n\n<ul>\n<li>You have cost overruns because every team's doing it their own way. Nobody's paying attention to spinning down dev instances. Things are oversized. </li>\n<li>You have security vulnerabilities all over the place because the application teams are really focused on their applications. They're not really thinking about some of the Day 2 concerns: ‘Did I actually define my security groups correctly? Did I set the S3 bucket to private only?’</li>\n<li>Then you have all sorts of compliance challenges. As a security and compliance organization, there's no easy way to partner to solve those problems because every team is solving it their own way. </li>\n</ul>\n\n<p>So you have a hundred app teams doing it a hundred different ways, and you have one security team, one compliance team trying to herd the cats.”</p>\n\n<p>This “wild west” situation makes it incredibly hard to enforce security guidelines across an organization, and it makes it virtually impossible to audit compliance and security across so many different tools.</p>\n\n<p>At many organizations, the pendulum is swinging back toward a unified solution. </p>\n\n<h3>The solution</h3>\n\n<p>“When I look at it, I feel we are using far too many tools,” <a href=\"https://www.hashicorp.com/resources/roche-s-transition-from-tools-to-platforms-with-terraform-and-vault\">noted Harsha Vathsayayi</a>, a product manager at Roche Informatics, a division of the world’s 5th largest pharmaceutical company.  Vathsayayi determined that “too many tools negatively impact developer experience, which in turn decreases development.” </p>\n\n<p>He believes that tool sprawl can lead to a breach. “When we talk about tool sprawl or shadow IT, we often see multiple instances of tools running on a developer laptop or a VM that no one knows about,” explains Vathsayayi. “We see there are a lot of attack surfaces because those tools are not developed as per organization guidelines. No one is scanning them, and no one knows what they're running, which means for a hacker, it's a large attack surface.” </p>\n\n<p>Secret management was an initial focus of tool consolidation. The Roche Informatics team chose HashiCorp <a href=\"https://www.hashicorp.com/products/vault\">Vault Enterprise</a> to satisfy many use cases with one tool: </p>\n\n<ul>\n<li>A central identity broker for credentials across the organization</li>\n<li>One unified secrets management and auditing platform</li>\n<li>Encryption as a service at rest and in transit</li>\n<li>Internal public key infrastructure (PKI)</li>\n</ul>\n\n<p>Then, it adopted HashiCorp <a href=\"https://www.hashicorp.com/products/terraform\">Terraform</a> to standardize infrastructure automation and “provisioning on-prem, cloud, and even edge resources.” With one tool they now have:</p>\n\n<ul>\n<li>One auditable pipeline for fast, automated application infrastructure provisioning</li>\n<li>A platform and repository for building and reusing secure-by-default modules and configurations</li>\n<li>A policy as code checks and guardrails system (for enforcing security, cost, and reliability best practices)</li>\n</ul>\n\n<p>Vathsayayi believes their tool consolidation paid organizational dividends. “If [developers] have too many tools, a lot of their precious time goes to context switching.” He advises: “Try to reduce the amount of tools and move towards common platforms or a centralized platform to improve the developer experience and also enhance productivity for the organization.” </p>\n\n<h2>Consolidated platforms are difference-makers</h2>\n\n<p>Taming tool sprawl not only saves resources, it also reduces workflow complexity. With consistent tooling and automation, security teams waste less time and resources on audits, reviews, and fixes to code that should have been secure and compliant in the first place before moving to production.</p>\n\n<h3>Best practices for platforms</h3>\n\n<p>A platform-based approach should leverage APIs, automated checks, and guardrails to prevent bottlenecks caused by manual reviews from Sec, Ops, or compliance teams, while ensuring security best practices are in place. </p>\n\n<p>A modern platform can prioritize cloud security and the developer experience at the same time, establishing a secure and consistent workflow that supports all teams in the delivery pipeline — providing templates that empower even junior developers to become highly productive and secure on Day 1, and allowing all teams to focus on their expertise areas. </p>\n\n<p>Organizations should consider tools and products that excel at these functions: </p>\n\n<ul>\n<li>Version control tooling</li>\n<li>Static and dynamic scanning tools</li>\n<li>Secrets management platforms</li>\n<li>Secret scanning tools</li>\n<li>Infrastructure provisioning platforms with built-in policies as code engines</li>\n<li>Secure remote access tools.<br /></li>\n</ul>\n\n<p>With tool and process consistency, you get smoother Dev and Sec workflows. That’s the objective of well-managed <a href=\"https://www.hashicorp.com/infrastructure-cloud/security-lifecycle-management\">security</a> and <a href=\"https://www.hashicorp.com/infrastructure-cloud/infrastructure-lifecycle-management\">infrastructure lifecycles</a>, and it ultimately leads to operational consistency across your infrastructure estate. </p>\n\n<h2>Learn more</h2>\n\n<p><a href=\"https://www.hashicorp.com/on-demand/move-fast-and-secure-things\">Read our white paper</a> or <a href=\"https://www.hashicorp.com/lp/cloud-wars-balancing-speed-and-security-for-seamless-development\">attend our upcoming webinar</a> to find out how tool consolidation fits into our bigger platform engineering strategy aimed at solving the friction between developers and security teams.</p>\n","author":"Tom O’Connell","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"9f6cb54ac568b050e60d675c77b24ba14ba9f75addcb364c91350afa63062e79","category":"Tech"}