{"title":"Got an iPhone with an Action button? Here’s how to make it smarter","link":"https://www.macworld.com/article/2468165/got-an-iphone-with-an-action-button-heres-how-to-make-it-smarter.html","date":1727264896000,"content":"<p><a href=\"https://www.macworld.com\">Macworld</a></p>\n\n<div>\n<section><div></div></section>\n\n\n\n<p>Last year, Apple introduced the Action Button to the iPhone 15 Pro and leaned <em>hard</em> into its use as a button to take pictures. This year, though, the iPhone 16 and 16 Pro both have a new dedicated <a href=\"https://www.macworld.com/article/2453186/iphone-16-camera-control-button-features-fucntions.html\">Camera Control</a> button. So what’s an Action button–also now on the iPhone 16–to do?</p>\n\n\n\n<p>While the Action button can be assigned numerous tasks (including setting a Focus mode and toggling the flashlight on and off) I can see Apple struggling with ways of making the Action button seem less than an afterthought, overshadowed by the new Camera Control.</p>\n\n\n\n<p>For example, Apple has suggested on a few occasions that the Action Button is a bit of a chameleon. It can turn on the flashlight at night, but toggle Do Not Disturb during the day, for example. Or it can turn on the flashlight when your iPhone is held horizontally, but launch an app when held vertically!</p>\n\n\n\n<p>This all sounds clever, but unfortunately, Apple hasn’t actually added any functionality that lets users easily assign different tasks based on time or orientation. If you want to know how to do that sort of thing, you’ll need to use Apple’s Shortcuts app to get it done.</p>\n\n\n\n<p>I know Shortcuts is intimidating to a lot of people, so here’s a very simple guide to creating a basic Action Button shortcut with behavior that varies based on some specific parameters. (For more, <em>much more</em> on this concept, check out Federico Viticci’s <a href=\"https://www.macstories.net/ios/introducing-multibutton-assign-two-shortcuts-to-the-same-action-button-press-on-iphone-15-pro/\">MultiButton project</a>.)</p>\n\n\n\n<h2>Limitless potential </h2>\n\n\n\n<p>Shortcuts lets you create sequences of events that trigger from top to bottom when you run them. It’s like a computer program, but every event or command is a rectangular block that you can drag up and down to rearrange them.</p>\n\n\n\n<p>For the purposes of this example, we’re going to create a shortcut that detects the orientation of your phone and performs a different action depending on if you’re in portrait (vertical) mode or not.</p>\n\n\n\n<p>To begin, open Shortcuts (which is installed on every iPhone) and tap the “+” icon in the upper right corner to create your first shortcut. On the iPhone, the Shortcuts window has two panes: at the top, you’ll see the series of Actions in the workflow (currently none) while at the bottom you’ll see a library of all the Actions available on your device. A bunch are baked into iOS, and individual apps can add their own Actions too.</p>\n\n\n<div><figure><img src=\"https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?w=675\" alt=\"shortcut action finished\" srcset=\"https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?quality=50&amp;strip=all 1552w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=169%2C300&amp;quality=50&amp;strip=all 169w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=768%2C1366&amp;quality=50&amp;strip=all 768w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=675%2C1200&amp;quality=50&amp;strip=all 675w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=864%2C1536&amp;quality=50&amp;strip=all 864w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=1152%2C2048&amp;quality=50&amp;strip=all 1152w\" width=\"675\" height=\"1200\" loading=\"lazy\" />\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div><div><figure><img alt=\"shortcut action finished\" srcset=\"https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?quality=50&amp;strip=all 1552w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=169%2C300&amp;quality=50&amp;strip=all 169w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=768%2C1366&amp;quality=50&amp;strip=all 768w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=675%2C1200&amp;quality=50&amp;strip=all 675w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=864%2C1536&amp;quality=50&amp;strip=all 864w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=1152%2C2048&amp;quality=50&amp;strip=all 1152w\" width=\"675\" height=\"1200\" loading=\"lazy\" /></figure><p> </p></div>\n</div>\n\t\t\t\t<div><div><figure><img alt=\"shortcut action finished\" srcset=\"https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?quality=50&amp;strip=all 1552w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=169%2C300&amp;quality=50&amp;strip=all 169w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=768%2C1366&amp;quality=50&amp;strip=all 768w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=675%2C1200&amp;quality=50&amp;strip=all 675w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=864%2C1536&amp;quality=50&amp;strip=all 864w, https://b2c-contenthub.com/wp-content/uploads/2024/09/shortcut-action-finished.png?resize=1152%2C2048&amp;quality=50&amp;strip=all 1152w\" width=\"675\" height=\"1200\" loading=\"lazy\" /></figure><p> </p></div>\n</div>\n\t\t\t\t<div></div>\n\t\t</div></figure><p> </p></div>\n\n\n\n<p>For this example, we need to check for device orientation. In the <em>Actions</em> pane, you can use the Search box to search for <em>Orientation</em> or you can tap the category filter marked <em>Device</em> just below the search box, to limit the list of actions to just those intended to control or report back about your device. The action you want to tap is called <em>Get Orientation</em>. When you tap it, it’ll be added to the list of Actions in your workflow.</p>\n\n\n\n<p>Now that we’ve added <em>Get Orientation</em>, we need to do something with it–or really, we need to do <em>two</em> things with it. We need to perform one task if the phone is in Portrait orientation, and a different task if it isn’t. To do this, we need to add the <em>If</em> action. Tap in the <em>Search Actions</em> box and search for <em>If</em>, and then tap to add it to your workflow. It’ll automatically be added–along with two other actions, <em>Otherwise</em> and <em>End If</em>–at the bottom of the workflow.</p>\n\n\n\n<p>If you’ve never done any programming before, this is the bare bones of an If-Then statement. Below the <em>If</em> statement will go actions that happen if the If statement turns out to be true, and below <em>Otherwise</em> will go actions that happen if the If statement isn’t true. Everything below the <em>End If</em> action happens regardless of the results of the rest of the If statement.</p>\n\n\n\n<p>Now we need to define what the <em>If</em> statement is going to measure. Since <em>If</em> was added immediately following our addition of <em>Get Orientation</em>, it’s been placed right below that action–and has automatically been assigned the result of <em>Get Orientation</em> as the item that it’s going to test. This is reflected in how the If block is displayed, as “If Get Orientation is [Choose].” We could tap on that <em>Get Orientation</em> to change the <em>If</em> action to evaluate something else, and we could tap on the <em>is</em> statement to change it to something like “is not”, but for now, let’s leave it as is.</p>\n\n\n\n<p>Now tap on <em>Choose</em>, to choose what we’re evaluating about the device orientation. In this case, we’ll be prompted with a list of seven different possible iPhone orientations. Since the Flashlight only really makes sense when it’s in portrait mode, tap <em>Portrait</em>. Now the If action reads, “If Get Orientation is Portrait”. (If we wanted to add some other orientations, such as “face up,” we could tap the plus icon to the right of Portrait and convert the If action into a more complex series of logical questions–but let’s not. This is your first Shortcut.)</p>\n\n\n\n<p>Now we need to add a new action that does what we want when the iPhone is in Portrait mode, namely using the flashlight. To do this, tap in <em>Search Actions</em> at the bottom of the screen and type <em>Flashlight</em>, then tap on the <em>Set Flashlight</em> action. It will be added at the bottom of the stack of actions, below <em>End If</em>. This is too far down! If we leave it there, it’ll turn the flashlight on every single time we run the shortcut.</p>\n\n\n\n<p>Instead, tap and hold on <em>Turn Flashlight On</em> (being sure not to tap right on the blue tappable parts of the action) and drag it up until it nestles right under the If block. This tells Shortcuts that if Get Orientation is Portrait, <em>then</em> turn the Flashlight on.</p>\n\n\n\n<p>But is that what we really want? Sometimes you want to turn the Flashlight <em>off</em>. So let’s tap that word <em>Turn</em> and instead set it to <em>Toggle</em>. Now when the Shortcut is run and the device is in Portrait orientation, the flashlight will toggle to the opposite of its current state.</p>\n\n\n\n<p>Now to add the other action, which runs if the orientation is <em>not</em> Portrait. It can be anything we want, but for this example let’s have it toggle the Do Not Disturb focus mode. Tap on <em>Search Actions</em>, type <em>Focus</em>, and tap on <em>Set Focus</em>. This will add a Focus action–it’ll be marked as “Turn Do Not Disturb Off” by default–at the very bottom of the stack.</p>\n\n\n\n<p>Tap on <em>Turn</em> to change it to <em>Toggle</em>, which is better. Then tap and drag the entire action up to below <em>Otherwise</em> in the list. That indicates that this action should occur if the If statement (that the orientation is Portrait) fails.</p>\n\n\n\n<p>At this point, you should have a functional shortcut. Try it out by holding your phone up and tapping the play button in the lower right corner. If you’ve done it correctly, your flashlight will turn on. Do it again to turn it off.</p>\n\n\n\n<p>Before we assign this Shortcuts action to the Action Button, let’s give it a name. Tap on the carat icon just below the Dynamic Island, then tap <em>Rename</em>, and call it something like Action Toggle. Then tap <em>Done</em>.</p>\n\n\n\n<p>To assign your Shortcut to the Action Button, open <em>Settings</em>, tap <em>Action Button</em>, and then swipe to <em>Shortcut</em>. Tap <em>Choose a Shortcut </em>and choose the item you just created.</p>\n\n\n\n<p>That’s it! Try it out and see how it works. Once you’ve done this, you can create other shortcuts that use different information–like the time of day, for example–to run different actions at different times. And of course, you can <em>combine</em> If statements, so that the flashlight only fires when you’re in Portrait orientation at night. The sky’s the limit.</p>\n\n\n\n<p>If you’re curious about Shortcuts, Apple provides lots of examples in the Gallery tab of the app. The great thing about Shortcuts workflows is that they’re all viewable and editable in the Shortcuts app itself, so if you’re curious about how a particular workflow does what it does, you can open it and scroll through its actions.</p>\n\n\n\n<p>Now, should Apple add some of this basic if-then functionality to the Action Button settings app itself? Oh, probably. But it didn’t get around to it this fall–and it turns out it didn’t have to, since Shortcuts is always there to make our lives a little bit easier, as long as we know how to use it.</p>\n\n\n\n<p>Learn more about <a href=\"https://www.macworld.com/article/2221069/ios-18-latest-version-release-problems-features-compatibility-beta.html\">iOS 18</a> and the <a href=\"https://www.macworld.com/article/2007943/iphone-16-release-date-specs-price-features.html\">iPhone 16</a>.</p>\n\n</div>","author":"","siteTitle":"Macworld","siteHash":"37e84dd5a21fa961d6d6630e269546024dbb7741b2e2fadbe74f47383c70dfbb","entryHash":"42c66c03868e1f60e61ad9844a378d95e03259943ae22fd048686fc0bacb3257","category":"Apple"}