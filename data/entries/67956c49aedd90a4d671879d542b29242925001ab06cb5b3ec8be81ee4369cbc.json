{"title":"สิ่งที่น่าสนใจใน Technology Radar 2024 Volume 31","link":"https://www.somkiat.cc/technology-radar-2024-volume-31/","date":1730013954000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/10/tw_tr31_meta-150x150.jpg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/10/tw_tr31_meta-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2024/10/tw_tr31_meta-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/10/tw_tr31_meta.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/10/tw_tr31_meta-1024x536.jpg\" width=\"632\" height=\"330\" /></a></figure>\n\n\n\n<p>เพิ่งเห็น <strong><a href=\"https://www.thoughtworks.com/content/dam/thoughtworks/documents/radar/2024/10/tr_technology_radar_vol_31_en.pdf\" target=\"_blank\">Technology Radar Volume 31</a></strong> ปล่อยออกมา<br />โดยในฉบับนี้ยังคง focus ไปที่ Generative AI และ Large Language Model (LLM) อย่างมาก<br />ซึ่งมีประโยชน์อย่างมากต่อการพัฒนา software<br />ตั้งแต่ <a href=\"https://www.thoughtworks.com/insights/blog/generative-ai/using-ai-requirements-analysis-case-study\">requirement</a>, ออกแบบ พัฒนา ทดสอบ และ deploy กันเลย <br />รวมทั้งเรื่องของ security อีกด้วย</p>\n\n\n\n<span></span>\n\n\n\n<p>ใช่ว่าจะมีเพียงข้อดีเท่านั้น แต่มันยังมีข้อเสียเช่นกัน<br />โดยหนึ่งเรื่องที่เน้นมาก ๆ  คือ <strong>Coding assistance antipatterns</strong></p>\n\n\n\n<p>เป็นรูปแบบที่ไม่ดี  สำหรับใช้งาน Generative AI มาใช้งานช่วยเขียน code !!<br />ยกตัวอย่างเช่น <strong>Replacing pair programming with AI</strong><br />เป็นหัวข้อที่มีการพูดคุยเยอะมาก ๆ<br />สิ่งที่ควรต้องเกิดขึ้นในช่วงนี้คือ การนำมาช่วยเหลือซึ่งกันและกัน<br />คนที่ใช้งาน ควรมีความรู้ และ พื้นฐานที่แข็งแรงมากกว่าปกติด้วย<br />เพื่อให้เกิด code ที่มีคุณภาพ และ ดูแลรักษาได้ง่ายต่อไป<br />มิเช่นนั้น มันจะได้เพียงทำให้เสร็จ แต่ code ที่ได้มา ซับซ้อน หรือ ไม่มีใครเข้าใจ !!<br />ตรงนี้อันตรายมาก ๆ</p>\n\n\n\n<p>แต่ถ้าเป็นระบบงานที่ทำแล้วทิ้งไปเลย แบบนี้อาจจะเหมาะก็ได้ !!</p>\n\n\n\n<p><strong>หัวข้ออื่น ๆ  ที่น่าสนใจ ประกอบไปด้วย</strong></p>\n\n\n\n<ul>\n<li><strong>1% canary</strong> เป็นเทคนิคที่ใช้ใน canary release เพื่อใช้สำหรับการเก็บ feedback จริงจากผู้ใช้งาน แต่ก็ยังลดความเสี่ยงจาก version ใหม่ ๆ  ด้วย โดย 1% คือหนึ่งใน target user เพื่อรับ feedback และลดความเสี่ยงลงไป เป็นการ balance ระหว่าง development, operation และ buisness</li>\n\n\n\n<li><strong>Function calling with LLMs</strong> เป็นการ integrate ส่วนการทำงานต่าง ๆ  กับ LLMs provider เพื่อทำงานต่าง ๆ เช่น ในสายงาน operation ทำการ analyze log หา pattern ต่าง ๆ แล้วทำการ trigger แจ้งเตือนให้ทีมได้ หรือ เปิด incident แบบอัตโนมัติ ซึ่งเป็นแนวทางในการปรับปรุงเรื่องของ monitoring และ observability อีกด้วย รวมทั้งการ scaling แบบอัตโนมัติอีกด้วย  โดยที่เทคนิคนี้จะทำงานร่วมกับ <a href=\"https://www.promptingguide.ai/techniques/rag\" target=\"_blank\"><strong>Retrieval-Augmented Generation (RAG)</strong></a> และ AI Agent</li>\n\n\n\n<li><strong>Observability 2.0</strong> เป็นอีกแนวคิดที่น่าสนใจ เพื่อช่วยให้เข้าถึงข้อมูลระบบได้ลึกขึ้น หาปัญหาได้อย่างรวดเร็ว และเป็นแนวทางแบบ proactive มากยิ่งขึ้น</li>\n\n\n\n<li><a href=\"https://openfeature.dev/\">OpenFeature</a></li>\n\n\n\n<li><strong><a href=\"https://testcontainers.com/\" target=\"_blank\">Test container</a> </strong>สำหรับการทดสอบแบบ integration test</li>\n\n\n\n<li><a href=\"https://github.com/jetify-com/devbox\" target=\"_blank\"><strong>Devbox</strong></a> ช่วยสร้าง development environment แบบง่าย ๆ</li>\n\n\n\n<li>LiteLLM เป็น LLM proxy สำหรับ integrate LLM provider หลาย ๆ  เข้าด้วยกัน โดยสามารถใช้รูปแบบของ request และ response แบบเดียวกันได้เลย</li>\n</ul>\n\n\n\n<p>ลองดูเพิ่มเติมกันดูครับ<br />มีสิ่งที่น่าสนใจเยอะเลย</p>\n\n\n\n<p></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"67956c49aedd90a4d671879d542b29242925001ab06cb5b3ec8be81ee4369cbc","category":"Thai"}