{"title":"New version of ServiceNow Terraform Catalog enables resource updates","link":"https://www.hashicorp.com/blog/new-version-of-servicenow-terraform-catalog-enables-resource-updates","date":1694156400000,"content":"<p>We are excited to announce the ServiceNow Service Catalog for Terraform has been updated to version 2.3. This latest iteration introduces new items to the Terraform Catalog, providing more robust options for platform teams keen on updating and redeploying their existing Terraform infrastructure — essentially enabling seamless Day 2 operations within the application. Additionally, version 2.3 addresses the issue of duplicate workspace names for customers using multiple ServiceNow instances.</p>\n\n<p>This post covers version 2.3’s new features, including:</p>\n\n<ul>\n<li>New Catalog items for Day 2 actions</li>\n<li>Streamlined multi-instance integration</li>\n</ul>\n\n<h2>Updating Terraform workspaces and variables</h2>\n\n<p>Enabling Day 2 operations has long been a highly requested feature in the ServiceNow Service Catalog for Terraform. After setting up their initial workspace and resources, many users wished for easy ways to change details like workspace description or how it runs, or even shift it to a different project within Terraform Cloud or Enterprise. Plus, if a workspace had variables, many users expected a straightforward way to see, change, and then update variable values through the Terraform Catalog.</p>\n\n<p>To address these requests, the latest update introduced new Catalog Items designed to help users set up their own update processes. Whether ServiceNow admins prefer to configure the Catalog Items with Flows or Workflows as a main process engine, there are now specific items they can choose from the Catalog and tweak to meet their specific needs:</p>\n\n<ul>\n<li><strong>Update Workspace</strong>: This lets you change workspace configurations, such as VCS repository, description, project, execution mode, or agent pool ID (if applicable).</li>\n<li><strong>Update Workspace with Variables</strong>: This item allows you to change details about the workspace configurations and variable values attached to it.</li>\n<li><strong>Update Resources</strong>: This option combines Update Workspace and Create Run to let you change workspace configurations and start a new Terraform run with these new values.</li>\n<li><strong>Update Resources with Variables</strong>: Using this, you can change both your workspace and its variables, then start a Terraform run with these updated values.</li>\n</ul>\n\n<p>When you create a workspace, all its details are now saved in the application’s Terraform database. When you want to update something, the form shows the saved details, making it easy for you to make changes. The values of the variables are also saved. ServiceNow admins now have access to a new Terraform Variables menu module where they can see all these saved variables. These new features work only for workspaces that you set up using the ServiceNow Service Catalog for Terraform.</p>\n<h2>Streamlining multi-instance integration with Terraform Cloud</h2>\n\n<p>Version 2.3 of the ServiceNow Service Catalog for Terraform brings an optimized solution for Terraform customers operating with multiple ServiceNow instances connected to a single Terraform Cloud or Enterprise organization.</p>\n\n<p>The app names workspaces based on ServiceNow ticket numbers, and as more workspaces are created within Terraform Cloud or Enterprise, the numbers naturally auto-increment. When multiple instances create new Terraform workspaces at the same time, there is a risk of overlapping numbers.</p>\n\n<p>To mitigate this potential issue, our latest feature enhancement ensures that each Terraform workspace name is unique. Should the app identify a pre-existing workspace with an identical name, it appends a ServiceNow instance ID to the workspace name. This approach maintains consistency and guarantees the distinctive identification of every workspace, ensuring seamless operation across all instances.</p>\n<img src=\"https://www.datocms-assets.com/2885/1694196008-service_catalog_workspaces.png\" alt=\"The\" /><h2>Key benefits</h2>\n\n<p>The general availability of the latest version of ServiceNow Service Catalog for Terraform Cloud and Terraform Enterprise lets users generate new Terraform workspaces and initiate resource provisioning from the Service Catalog interface. That brings two main benefits:</p>\n\n<ol>\n<li><strong>Improved efficiency</strong>: Previously, there was no straightforward method to modify the settings of an existing workspace or to redeploy current resources. Admins can now choose a specific workspace from a list of previously created workspaces enabling them to revisit previous values, make necessary edits, and submit the changes for an update.</li>\n<li><strong>Reduced risk</strong>: Stopping admins from creating workspaces with identical names reduces the risk of overlapping numbers and ensures ServiceNow admins consistency in workspaces.<br /></li>\n</ol>\n\n<h2>Get started and try Terraform Cloud</h2>\n\n<p>New catalog items and streamlined multi-instance integrations are available today as generally available features. Learn more by reading thet <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/integrations/service-now/service-catalog-terraform\">ServiceNow Service Catalog documentation</a>. And if you haven’t already, get started for free on <a href=\"http://hashi.co/tf-cloud-bc\">Terraform Cloud</a> to provision and manage all your infrastructure.</p>\n","author":"Polina Jastrzebska","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"d6f2beabf1d96a0c48306cf17a181e647c509d4ca4cc71221a562fb5f2f91ef9","category":"Tech"}