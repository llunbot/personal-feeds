{"title":"Bringing Back Horizontal Rules in Select Elements","link":"https://webkit.org/blog/14933/bringing-back-horizontal-rules-in-select-elements/","date":1706206694000,"content":"<p>In September 2023, <a href=\"https://developer.apple.com/documentation/safari-release-notes/safari-17-release-notes\">Safari 17.0</a> on macOS shipped a small but interesting change to the <code>&lt;select&gt;</code> element. You can now put an <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr\"><code>&lt;hr&gt;</code></a> element, known as a horizontal rule, inside a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> element, which will draw a horizontal line again. <em>Again</em>, because Safari used to support this over a decade ago — more on that story later.</p>\n<p>The horizontal rule creates visual breaks between options to help users scan and compare against similar options.</p>\n<figure><img width=\"1062\" height=\"771\" src=\"https://webkit.org/wp-content/uploads/select-menu-hr-light-1.png\" alt=\"Depicts a select menu with Choose paper size label and the following options with visual separators between groups: 5.5 x 8.5 in, 8.5 × 11.0 in, 8.5 × 14.0 in, 11.0 x 17.0 in, A3, A4, A5, A6, Envelope #10, Envelope B5, Envelope C5, Envelope Monarch\" srcset=\"https://webkit.org/wp-content/uploads/select-menu-hr-light-1.png 1062w, https://webkit.org/wp-content/uploads/select-menu-hr-light-1-300x218.png 300w, https://webkit.org/wp-content/uploads/select-menu-hr-light-1-1024x743.png 1024w, https://webkit.org/wp-content/uploads/select-menu-hr-light-1-768x558.png 768w\" /><figcaption>Select element without separators; Select element with horizontal rule separators.</figcaption></figure>\n<p>It’s a small change, but it’s been <a href=\"https://developer.chrome.com/blog/hr-in-select/\">getting</a> <a href=\"https://adrianroselli.com/2023/10/splitting-within-selects.html\">attention</a> <a href=\"https://twitter.com/search?q=hr%20in%20select\">lately</a>. Simply add an <code>&lt;hr&gt;</code> between <code>&lt;option&gt;</code> elements to insert a line:</p>\n<pre><code><span>&lt;<span>label</span> <span>for</span>=<span>\"papersize\"</span>&gt;</span>Select Paper Size:<span>&lt;/<span>label</span>&gt;</span>\n<span>&lt;<span>select</span> <span>name</span>=<span>\"papersize\"</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>Select a paper size<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>hr</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>5.5 × 8.5 in<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>8.5 × 11.0 in<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>8.5 × 14.0 in<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>11.0 × 17.0 in<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>hr</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>A3<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>A4<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>A5<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>A6<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>hr</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>Envelope #10<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>Envelope B5<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>Envelope C5<span>&lt;/<span>option</span>&gt;</span>\n    <span>&lt;<span>option</span>&gt;</span>Envelope Monarch<span>&lt;/<span>option</span>&gt;</span>\n<span>&lt;/<span>select</span>&gt;</span>\n</code></pre>\n<figure>\nSelect Paper Size:<br />\n<hr /><hr /><hr /><figcaption>Interactive demo of Horizontal Rule elements in a Select element.</figcaption></figure>\n<p>So why did this work for years but then stop? Where did it go?</p>\n<h2>An HTML parser regression story</h2>\n<p>Well over a decade ago, WebKit adopted a new HTML parser. It was based on the HTML5 standardization effort, which attempted to unify the HTML language, as it had diverged quite a bit in implementations. And it was a <a href=\"https://blog.whatwg.org/html-vs-xhtml\">far cry from the SGML dialect</a> some in the standardization community pretended HTML to be. It represented a huge milestone in the development of HTML. We were finally on a path where all implementations would agree on what any arbitrary byte stream of HTML represented.</p>\n<p>Replacing WebKit’s HTML parser was a large undertaking. It brought huge benefits, but it was still <a href=\"https://bugs.webkit.org/show_bug.cgi?id=41115\">missing a few bits</a> when it shipped. In fact, one feature from WebKit had been hidden from HTML. You could still see it by manipulating the DOM or using XML, but apart from a couple of experts nobody knew.</p>\n<p>That feature was <code>hr</code> elements nested in <code>select</code> elements. Originally it was <a href=\"https://commits.webkit.org/12776@main\">added by Adele Peterson</a> at Apple in 2006 to support a common UI paradigm on the web: separators between select box options. We discovered this while doing some maintenance work on the HTML parser and agreed this was still a desirable feature. We also re-discovered that in 2018 a feature request was opened against the HTML Standard for this exact feature.</p>\n<p>To introduce this feature again at this stage required some <a href=\"https://github.com/whatwg/html/pull/9124\">careful changes</a> to the HTML parser portion of the HTML Standard as well as some corresponding semantic and conformance changes. After all, we wanted to fix this regression while preserving HTML parser interoperability. At the same time we wanted to ensure the feature was properly standardized as well. With the help from others in the HTML standardization community we managed to make this change and it’s now part of multiple browsers and harder to accidentally regress again due to improved cross-browser test coverage.</p>\n<p>That’s the story of how we lost access to separators in select boxes for a decade and then got them back, fully standardized, <a href=\"https://webkit.org/blog/14445/webkit-features-in-safari-17-0/#:~:text=Horizontal%20rules%20inside%20select%20elements,requiring%20the%20use%20of%20JavaScript.\">in Safari 17.0</a> (commit <a href=\"https://commits.webkit.org/263624@main\">263624</a>).</p>\n<p>If you’re still reading, you might wonder what other maintenance work we did on the HTML parser. It included a bunch of small fixes that made WebKit more standards compliant. Where it was appropriate, cross-browser test coverage was improved as well:</p>\n<ul>\n<li>Handle comments directly that follow the body closing tag (commit <a href=\"https://commits.webkit.org/262222@main\">262222</a>).</li>\n<li>Correct a minor bug in CDATA handling (applies to SVG and MathML when used inside HTML) (commit <a href=\"https://commits.webkit.org/262408@main\">262408</a>).</li>\n<li>Fully remove support for command, layer, and nolayer elements (commits <a href=\"https://commits.webkit.org/262431@main\">262431</a> &amp; <a href=\"https://commits.webkit.org/262553@main\">262553</a>).</li>\n<li>Corrected SVG and MathML attribute handling (commit <a href=\"https://commits.webkit.org/262502@main\">262502</a>).</li>\n<li>Added support for the search element (commit <a href=\"https://commits.webkit.org/264110@main\">264110</a>).</li>\n</ul>\n<h2>Some notes about separators in select elements</h2>\n<p>It’s important to be aware that this feature adds <em>visual</em> separators. They are not announced by assistive technologies like VoiceOver.</p>\n<p>It’s also worth noting that the HTML parser only supports <code>&lt;hr&gt;</code> as a child of <code>&lt;select&gt;</code> elements, not as a child of <code>&lt;optgroup&gt;</code> elements.</p>\n<p>Lastly, when using a <code>&lt;select&gt;</code> element with a <code>size</code> attribute value greater than 1, the separators are instead rendered as blank space, similar to the space added for <code>&lt;optgroup&gt;</code> elements.</p>\n<h2>Feedback</h2>\n<p>Using <code>&lt;hr&gt;</code> in <code>&lt;select&gt;</code> gives authors another choice in how to visually separate options for users. Instead of the blank space rendered with <code>&lt;optgroup&gt;</code>, now authors can use lines too.</p>\n<p>We love to hearing from you. Send a tweet to <a href=\"https://twitter.com/webkit\">@webkit</a> to share your thoughts on this feature. Find us on Mastodon at <a href=\"https://front-end.social/@jensimmons\">@jensimmons@front-end.social</a> and <a href=\"https://mastodon.social/@jondavis\">@jondavis@mastodon.social</a>. If you run into any issues, we welcome your <a href=\"https://bugs.webkit.org/\">WebKit bug reports</a> on WebKit features like this. Reporting issues makes an enormouse difference.</p>\n<p>You can also download the latest <a href=\"https://developer.apple.com/safari/download/\">Safari Technology Preview</a> to try out new web platform features like this before they appear in a Safari beta.</p>","author":"","siteTitle":"Blog – WebKit","siteHash":"7f8dbea0b8f53db2e11a2faa08c6dca9954c01638d09a2ce585b77a60d10f7a1","entryHash":"1beb554d890b53a7ceb2a4014ba2ba6af9dbcc616a5be6de2c5b215ca53374ef","category":"Tech"}