{"title":"Amazon Linux 2023, a Cloud-Optimized Linux Distribution with Long-Term Support","link":"https://aws.amazon.com/blogs/aws/amazon-linux-2023-a-cloud-optimized-linux-distribution-with-long-term-support/","date":1678912125000,"content":"<p>I am excited to announce the general availability of <a href=\"https://aws.amazon.com/linux/amazon-linux-2022\">Amazon Linux 2023</a> (AL2023). AWS has provided you with <a href=\"https://aws.amazon.com/blogs/aws/introducing-amazon-linux-ami/\">a cloud-optimized Linux distribution since 2010</a>. This is the third generation of our Amazon Linux distributions.</p> \n<p>Every generation of Amazon Linux distribution is secured, optimized for the cloud, and receives long-term AWS support. We built Amazon Linux 2023 on these principles, and we go even further. Deploying your workloads on Amazon Linux 2023 gives you three major benefits: a high-security standard, a predictable lifecycle, and a consistent update experience.</p> \n<p><strong>Let’s look at security first</strong>. Amazon Linux 2023 includes preconfigured security policies that make it easy for you to implement common industry guidelines. You can configure these policies at launch time or run time.</p> \n<p>For example, you can configure <a href=\"https://fedoraproject.org/wiki/Changes/CryptoPolicy\">the system crypto policy</a> to enforce system-wide usage of a specific set of cipher suites, TLS versions, or acceptable parameters in certificates and key exchanges. Also, the Linux kernel has many hardening features enabled by default.</p> \n<p>Amazon Linux 2023 makes it <strong>easier to plan and manage the operating system lifecycle</strong>. New Amazon Linux major versions will be available every two years. Major releases include new features and improvements in security and performance across the stack. The improvements might include major changes to the kernel, toolchain, GLib C, OpenSSL, and any other system libraries and utilities.</p> \n<p>During those two years, a major release will receive an update every three months. These updates include security updates, bug fixes, and new features and packages. Each minor version is a cumulative list of updates that includes security and bug fixes in addition to new features and packages. These releases might include the latest language runtimes such as Python or Java. They might also include other popular software packages such as Ansible and Docker. In addition to these quarterly updates, security updates will be provided as soon as they are available.</p> \n<p>Each major version, including 2023, will come with five years of long-term support. After the initial two-year period, each major version enters a three-year maintenance period. During the maintenance period, it will continue to receive security bug fixes and patches as soon as they are available. This support commitment gives you the stability you need to manage long project lifecycles.</p> \n<p>The following diagram illustrates the lifecycle of Amazon Linux distributions:</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/03/15/ALTimelines_external.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/03/15/ALTimelines_external.png\" alt width=\"800\" height=\"532\" /></a></p> \n<p>Last—and this policy is by far my favorite—Amazon Linux provides you with <strong>deterministic updates through versioned repositories</strong>, a flexible and consistent update mechanism. The distribution locks to a specific version of the Amazon Linux package repository, giving you control over how and when you absorb updates. By default, and in contrast with Amazon Linux 2, a <code>dnf update</code> command will not update your installed packages (<code>dnf</code> is the successor to <code>yum</code>). This helps to ensure that you are using the same package versions across your fleet. All <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a> instances launched from an <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html\">Amazon Machine Image (AMI)</a> will have the same version of packages. Deterministic updates also promote usage of <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/financial-services-industry-lens/use-immutable-infrastructure-with-no-human-access.html\">immutable infrastructure</a>, where no infrastructure is updated after deployment. When an update is required, you update your <a href=\"https://docs.aws.amazon.com/whitepapers/latest/introduction-devops-aws/infrastructure-as-code.html\">infrastructure as code</a> scripts and redeploy a new infrastructure. Of course, if <em>you really want to update</em> your distribution in place, you can point <code>dnf</code> to an updated package repository and update your machine as you do today. But did I tell you this is not a good practice for production workloads? I’ll share more technical details later in this blog post.</p> \n<p><span><strong>How to Get Started</strong><br /> </span>Getting started with Amazon Linux 2023 is no different than with other Linux distributions. You can use the EC2 <code>run-instances</code> API, the <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface (AWS CLI)</a>, or the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>, and one of the four Amazon Linux 2023 AMIs that we provide. We support two machine architectures (x86_64 and Arm) and two sizes (standard and minimal). Minimal AMIs contain the most basic tools and utilities to start the OS. The standard version comes with the most commonly used applications and tools installed.</p> \n<p>To retrieve the latest AMI ID for a specific Region, you can use <a href=\"https://aws.amazon.com/systems-manager/\">AWS Systems Manager</a> <code>get-parameter</code> API and query the <code>/aws/service/ami-amazon-linux-latest/&lt;<em>alias</em>&gt;</code> parameter.</p> \n<p>Be sure to replace <code>&lt;<em>alias</em>&gt;</code> with one of the four aliases available:</p> \n<ul> \n <li>For arm64 architecture (standard AMI): <code>al2023-ami-kernel-default-arm64</code></li> \n <li>For arm64 architecture (minimal AMI): <code>al2023-ami-minimal-kernel-default-arm64</code></li> \n <li>For x86_64 architecture (standard AMI): <code>al2023-ami-kernel-default-x86_64</code></li> \n <li>For x86_64 architecture (minimal AMI): <code>al2023-ami-minimal-kernel-default-x86_64</code></li> \n</ul> \n<p>For example, to search for the latest Arm64 full distribution AMI ID, I open a terminal and enter:</p> \n<pre><code>~ aws ssm get-parameters --region us-east-2 --names /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64\n{\n    \"Parameters\": [\n        {\n            \"Name\": \"/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64\",\n            \"Type\": \"String\",\n            \"Value\": \"ami-02f9b41a7af31dded\",\n            \"Version\": 1,\n            \"LastModifiedDate\": \"2023-02-24T22:54:56.940000+01:00\",\n            \"ARN\": \"arn:aws:ssm:us-east-2::parameter/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64\",\n            \"DataType\": \"text\"\n        }\n    ],\n    \"InvalidParameters\": []\n}</code></pre> \n<p>To launch an instance, I use the <code>run-instances</code> API. Notice how I use <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html\">Systems Manager resolution to dynamically lookup the AMI ID from the CLI</a>.</p> \n<pre><code>➜ aws ec2 run-instances                                                                            \\\n       --image-id resolve:ssm:/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64  \\\n       --key-name my_ssh_key_name                                                                   \\\n       --instance-type c6g.medium                                                                   \\\n       --region us-east-2 \n{\n    \"Groups\": [],\n    \"Instances\": [\n        {\n          \"AmiLaunchIndex\": 0,\n          \"ImageId\": \"ami-02f9b41a7af31dded\",\n          \"InstanceId\": \"i-0740fe8e23f903bd2\",\n          \"InstanceType\": \"c6g.medium\",\n          \"KeyName\": \"my_ssh_key_name\",\n          \"LaunchTime\": \"2023-02-28T14:12:34+00:00\",\n\n...(redacted for brevity)\n}\n</code></pre> \n<p>When the instance is launched, and if the associated security group allows SSH (TCP 22) connections, I can connect to the machine:</p> \n<pre><code>~ ssh ec2-user@3.145.19.213\nWarning: Permanently added '3.145.19.213' (ED25519) to the list of known hosts.\n   ,     #_\n   ~\\_  ####_        Amazon Linux 2023\n  ~~  \\_#####\\       Preview\n  ~~     \\###|\n  ~~       \\#/ ___   https://aws.amazon.com/linux/amazon-linux-2023\n   ~~       V~' '-&gt;\n    ~~~         /\n      ~~._.   _/\n         _/ _/\n       _/m/'\nLast login: Tue Feb 28 14:14:44 2023 from 81.49.148.9\n[ec2-user@ip-172-31-9-76 ~]$ uname -a\nLinux ip-172-31-9-76.us-east-2.compute.internal 6.1.12-19.43.amzn2023.aarch64 #1 SMP Thu Feb 23 23:37:18 UTC 2023 aarch64 aarch64 aarch64 GNU/Linux</code></pre> \n<p>We also distribute Amazon Linux 2023 as Docker images. The Amazon Linux 2023 container image is built from the same software components that are included in the Amazon Linux 2023 AMI. The container image is available for use in any environment as a base image for Docker workloads. If you’re using Amazon Linux for applications in EC2, you can containerize your applications with the Amazon Linux container image.</p> \n<p>These images are available from <a href=\"https://aws.amazon.com/ecr/\">Amazon Elastic Container Registry (Amazon ECR)</a> and from <a href=\"https://hub.docker.com/_/amazonlinux\">Docker Hub</a>. Here is a quick demo to start a Docker container using Amazon Linux 2023 from <span>Elastic Container Registry</span>.</p> \n<pre><code>$ aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws\nLogin Succeeded\n</code></pre> \n<pre><code>~ docker run --rm -it public.ecr.aws/amazonlinux/amazonlinux:2023 /bin/bash\nUnable to find image 'public.ecr.aws/amazonlinux/amazonlinux:2023' locally\n2023: Pulling from amazonlinux/amazonlinux\nb4265814d5cf: Pull complete \nDigest: sha256:bbd7a578cff9d2aeaaedf75eb66d99176311b8e3930c0430a22e0a2d6c47d823\nStatus: Downloaded newer image for public.ecr.aws/amazonlinux/amazonlinux:2023\nbash-5.2# uname -a \nLinux 9d5b45e9f895 5.15.49-linuxkit #1 SMP PREEMPT Tue Sep 13 07:51:32 UTC 2022 aarch64 aarch64 aarch64 GNU/Linux\nbash-5.2# exit \n</code></pre> \n<p>When pulling from Docker Hub, you can use this command to pull the image: <code>docker pull amazonlinux:2023</code>.</p> \n<p><span><strong>What Are the Main Differences Compared to Amazon Linux 2?<br /> </strong></span>Amazon Linux 2023 has some differences compared to Amazon Linux 2. <a href=\"https://docs.aws.amazon.com/linux/al2023/ug/compare-with-al2.html\">The documentation explains these differences in detail</a>. The two differences I would like to focus on are <code>dnf</code> and the package management policies.</p> \n<p>AL2023 comes with <a href=\"https://en.wikipedia.org/wiki/DNF_(software)\">Fedora’s <code>dnf</code></a>, the successor to <code>yum</code>. But don’t worry, <code>dnf</code> provides similar commands as <code>yum</code> to search, install, or remove packages. Where you used to run the commands <code>yum list</code> or <code>yum install httpd</code>, you may now run <code>dnf list</code> or <code>dnf install httpd</code>. For convenience, we create a symlink for <code>/usr/bin/yum</code>, so you can run your scripts unmodified.</p> \n<pre><code>$ which yum\n/usr/bin/yum\n$ ls -al /usr/bin/yum\nlrwxrwxrwx. 1 root root 5 Jun 19 18:06 /usr/bin/yum -&gt; dnf-3</code></pre> \n<p>The biggest difference, in my opinion, is the deterministic updates through versioned repositories. By default, the software repository is locked to the AMI version. This means that a <code>dnf update</code> command will not return any new packages to install. Versioned repositories give you the assurance that all machines started from the same AMI ID are identical. Your infrastructure will not deviate from the baseline.</p> \n<pre><code>$ sudo dnf update \nLast metadata expiration check: 0:14:10 ago on Tue Feb 28 14:12:50 2023.\nDependencies resolved.\nNothing to do.\nComplete!</code></pre> \n<p>Yes, but what if you want to update a machine? You have two options to update an existing machine. The cleanest one for your production environment is to create duplicate infrastructure based on new AMIs. As I mentioned earlier, we publish updates for every security fix and a consolidated update every three months for two years after the initial release. Each update is provided as a set of AMIs and their corresponding software repository.</p> \n<p>For smaller infrastructure, such as test or development machines, you might choose to update the operating system or individual packages in place as well. This is a three-step process:</p> \n<ul> \n <li>first, list the available updated software repositories;</li> \n <li>second, point <code>dnf</code> to a specific software repository;</li> \n <li>and third, update your packages.</li> \n</ul> \n<p>To show you how it works, I purposely launched an EC2 instance with an “old” version of Amazon Linux 2023 from February 2023. I first run <code>dnf check-release-update</code> to list the available updated software repositories.</p> \n<pre><code>$ dnf check-release-update\nWARNING:\n  A newer release of \"Amazon Linux\" is available.\n\n  Available Versions:\n\n  Version 2023.0.20230308:\n    Run the following command to upgrade to 2023.0.20230308:\n\n      dnf upgrade --releasever=2023.0.20230308\n\n    Release notes:\n     https://docs.aws.amazon.com/linux/al2023/release-notes/relnotes.html</code></pre> \n<p>Then, I might either update the full distribution using <code>dnf upgrade --releasever=2023.0.20230308</code> or point <code>dnf</code> to the updated repository to select individual packages.</p> \n<pre><code>$ dnf check-update --releasever=2023.0.20230308\n\nAmazon Linux 2023 repository                                                    28 MB/s |  11 MB     00:00\nAmazon Linux 2023 Kernel Livepatch repository                                  1.2 kB/s | 243  B     00:00\n\namazon-linux-repo-s3.noarch                          2023.0.20230308-0.amzn2023                amazonlinux\nbinutils.aarch64                                     2.39-6.amzn2023.0.5                       amazonlinux\nca-certificates.noarch                               2023.2.60-1.0.amzn2023.0.1                amazonlinux\n(redacted for brevity)\nutil-linux-core.aarch64 2.37.4-1.amzn2022.0.1 amazonlinux</code></pre> \n<p>Finally, I might run a <code>dnf update &lt;package_name&gt;</code> command to update a specific package.</p> \n<p>This might look like overkill for a simple machine, but when managing enterprise infrastructure or large-scale fleets of instances, this facilitates the management of your fleet by ensuring that all instances run the same version of software packages. It also means that the AMI ID is now something that you can fully run through your CI/CD pipelines for deployment and that you have a way to roll AMI versions forward and backward according to your schedule.</p> \n<p><span><strong>Where is Fedora?<br /> </strong></span>When looking for a base to serve as a starting point for Amazon Linux 2023, Fedora was the best choice. We found that <a href=\"https://docs.fedoraproject.org/en-US/project/\">Fedora’s core tenets</a> (Freedom, Friends, Features, First) resonate well with our vision for Amazon Linux. However, Amazon Linux focuses on a long-term, stable OS for the cloud, which is a notable different release cycle and lifecycle than <a href=\"https://getfedora.org/\">Fedora</a>. Amazon Linux 2023 provides updated versions of open-source software, a larger variety of packages, and frequent releases.</p> \n<p>Amazon Linux 2023 isn’t directly comparable to any specific Fedora release. The Amazon Linux 2023 GA version includes components from <a href=\"https://getfedora.org/en/server/download/\">Fedora 34, 35, and 36</a>. Some of the components are the same as the components in Fedora, and some are modified. Other components more closely resemble the components in <a href=\"https://centos.org/stream9/\">CentOS Stream 9</a> or were developed independently. The Amazon Linux kernel, on its side, is sourced from <a href=\"https://www.kernel.org/category/releases.html\">the long-term support options that are on kernel.org,</a> chosen independently from the kernel provided by Fedora.</p> \n<p>Like every good citizen in the open-source community, we give back and contribute our changes to upstream distributions and sources for the benefit of the entire community. Amazon Linux 2023 itself is open source. The source code for all RPM packages that are used to build the binaries that we ship are available through the SRPM yum repository (<code>sudo dnf install -y 'dnf-command(download)' &amp;&amp; dnf download --source bash</code>)</p> \n<p><strong><span>One More Thing: Amazon EBS Gp3 Volumes<br /> </span></strong>Amazon Linux 2023 AMIs use gp3 volumes by default.</p> \n<p>Gp3 is the latest generation general-purpose solid-state drive (SSD) volume for <a href=\"https://aws.amazon.com/ebs/\">Amazon Elastic Block Store (Amazon EBS)</a>. Gp3 provides 20 percent lower storage costs compared to gp2. Gp3 volumes deliver a baseline performance of 3,000 IOPS and 125MB/s at any volume size. What I particularly like about gp3 volumes is that I can now provision performance independently of capacity. When using gp3 volumes, I can now increase IOPS and throughput without incurring charges for extra capacity that I don’t actually need.</p> \n<p>With the availability of gp3-backed AL2023 AMIs, this is the first time a gp3-backed Amazon Linux AMI is available. Gp3-backed AMIs have been a common customer request since gp3 was launched in 2020. It is now available by default.</p> \n<p><span><strong>Price and Availability<br /> </strong></span>Amazon Linux 2023 is provided at no additional charge. Standard Amazon EC2 and AWS charges apply for running EC2 instances and other services. This distribution includes full support for five years. When deploying on AWS, our support engineers will provide technical support according to the terms and conditions of your <a href=\"https://aws.amazon.com/premiumsupport/plans/\">AWS Support plan</a>. AMIs are available in all AWS Regions.</p> \n<p>Amazon Linux is the most used Linux distribution on AWS, with hundreds of thousands of customers using Amazon Linux 2. <a href=\"https://aws.amazon.com/amazon-linux-2/partners/?partner-solutions-cards.sort-by=item.additionalFields.partnerNameLower&amp;partner-solutions-cards.sort-order=asc&amp;awsf.partner-solutions-filter-partner-type=product%23amazon-linux-2022\">Dozens of Independent Software Vendors (ISVs) and hardware partners are supporting Amazon Linux 2023</a> today. You can adopt this new version with the confidence that the partner tools you rely on are likely to be supported. We are excited about this release, which brings you an even higher level of security, a predictable release lifecycle, and a consistent update experience.</p> \n<p>Now go build and <a href=\"https://aws.amazon.com/linux/amazon-linux-2022/\">deploy your workload on Amazon Linux 2023</a> today.</p> \n<p><a href=\"https://twitter.com/sebsto\">-- seb</a></p>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"ecfb52491a93954e4993723b9c6a07a5df4d94acf0e3d74616babcfc943660f9","category":"Tech"}