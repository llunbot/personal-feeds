{"title":"เริ่มต้นพัฒนาระบบด้วยภาษา Go ในปี 2023","link":"https://www.somkiat.cc/start-with-go-2023/","date":1703497452000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2023/12/go-2023-150x150.jpg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2023/12/go-2023-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2023/12/go-2023-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/12/go-2023.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/12/go-2023.jpg\" width=\"565\" height=\"299\" /></a></figure>\n\n\n\n<p>เนื่องด้วยปลายปีต้องไปแนะนำการพัฒนาระบบงานด้วยภาษา Go นิดหน่อย<br />สิ่งหนึ่งที่โดนถามตลอดคือ<br />สำหรับผู้เริ่มต้นต้องเรียนรู้อะไรบ้าง<br />มีอะไรที่น่าสนใจบ้าง<br />จึงทำการสรุปไว้นิดหน่อย<br />ซึ่งเป็นแนวทางในการพัฒนาตลอดปี 2023 ที่ผ่านมา (ในมุมมองคนเริ่มต้นเช่นเดียวกัน)<br />มาเริ่มกันเลย</p>\n\n\n\n<span></span>\n\n\n\n<ul>\n<li>เริ่มต้นโดยไปที่ <strong>go.dev</strong> นะครับ มีทุกอย่างที่นี่ ตั้งแต่การติดตั้ง และ เอกสารต่าง ๆ</li>\n\n\n\n<li>แนะนำการเรียนรู้เลยที่ <a href=\"https://go.dev/learn/\" target=\"_blank\">go.dev/learn</a></li>\n\n\n\n<li>IDE หลัก ๆ ที่ผมใช้คือ VS Code และ Go extension</li>\n</ul>\n\n\n\n<p><strong>ส่วน go command line tools ที่ใช้ตลอด ประกอบไปด้วย</strong></p>\n\n\n\n<ul>\n<li>go mod init สำหรับการสร้าง module ซึ่งเป็นค่า default ของ go project ไปแล้ว</li>\n\n\n\n<li>go mod tidy สำหรับ download และ prune พวก library/dependency ที่ใช้งานใน project</li>\n\n\n\n<li>gp work สำหรับการสร้าง workspace สำหรับ multi-module อันนี้สะดวกสบายมากขึ้น</li>\n\n\n\n<li>go fmt สำหรับการจัดการ format ของ code ใน project</li>\n\n\n\n<li><a href=\"https://www.somkiat.cc/try-golang-ci-lint-to-improve-code-quality/\" target=\"_blank\">go lint cli</a> สำหรับช่วยทำ static code analysis</li>\n\n\n\n<li>go build สำหรับการสร้าง single binary ของระบบงาน</li>\n\n\n\n<li>go test สำหรับทดสอบระบบงาน</li>\n\n\n\n<li>ทำการ scan code เพิ่อหาพวก secret ในระบบ ใช้งาน <a href=\"https://github.com/gitleaks/gitleaks\" target=\"_blank\">git Leak</a></li>\n\n\n\n<li>ทำ profiling อย่าลืม <a href=\"https://www.somkiat.cc/profiling-golang-web-application/\" target=\"_blank\">pprof</a> นะครับ ของดี</li>\n\n\n\n<li>ถ้าไม่ใช้งานกับ Docker น่าจะยังประบได้อีกนะ</li>\n\n\n\n<li>สำหรับเริ่มมือในแปลง JSON ใน Struct นั้นใช้งาน json-to-go หรือ <a href=\"https://marketplace.visualstudio.com/items?itemName=quicktype.quicktype\" target=\"_blank\">Paste JSON as Code</a> ได้เลย</li>\n</ul>\n\n\n\n<p><strong>เพิ่มเติมสำหรับการ build single binary ตามแต่ละ OS และ CPU</strong></p>\n\n\n\n<p>ทำการ config environment variables ชื่อว่า GOOS และ GOARCH ดังตัวอย่าง</p>\n\n\n\n<ul>\n<li>GOOS=darwin GOARCH=amd64</li>\n\n\n\n<li>GOOS=windows GOARCH=arm64</li>\n</ul>\n\n\n\n<p>ทำการ trim การ build ด้วยคำสั่ง </p>\n\n\n\n<ul>\n<li><strong><em>go build -ldflags=\"-s -w\"</em></strong></li>\n</ul>\n\n\n\n<p>หรือถ้าง่าย ๆ แนะนำให้ใช้งาน <a href=\"https://goreleaser.com/\" target=\"_blank\">Go Releaser</a></p>\n\n\n\n<p><strong>ในส่วนของ library/package ที่น่าสนใจ</strong></p>\n\n\n\n<ul>\n<li>testing ก็ต้อง testify</li>\n\n\n\n<li>web framework จะมี go gin, echo เป็นต้น</li>\n\n\n\n<li>logging ปกติจะมี zap, zerolog และ logrus แต่ตอนนี้ใน go มี standard library ชื่อว่า log/slog ออกมา ทำให้ง่ายไปอีก</li>\n\n\n\n<li>และอื่น ๆ อีกมากมายตาม requirement ของระบบ แนะนำดูที <a href=\"https://github.com/avelino/awesome-go\" target=\"_blank\">Awesome Go</a></li>\n</ul>\n\n\n\n<p><strong>ส่วนเรื่องความรู้ของภาษา Go ก็ต้องทำความเข้าใจ</strong></p>\n\n\n\n<p>หลัก ๆ ผ่าน go.dev/learn นั่นเอง เช่น Go Tour และ Effective go<br />จากนั้นเรื่องที่ต้องทำความเข้าใจก่อน สำหรับผมประกอบไปด้วย</p>\n\n\n\n<ul>\n<li>เรื่องของ go tool ตั้งแต่การพัฒนา ทดสอบ จนถึงการ deploy เขียนแค่ hello world ก็ได้</li>\n\n\n\n<li>syntax ก็ช่วยให้เราไปได้เร็วขึ้น ตัวภาษาอาจจะแปลก ๆ หน่อย เลยต้องทำความเข้าใจ ลงมือทำเยอะ ๆ</li>\n\n\n\n<li>ไปเรียนรู้ทั้งหมดไม่ได้ แนะนำให้หาปัญหา หรืองานที่จะทำ จากนั้นเรียนรู้ภาษาตามการแก้ไข จะทำให้สนุกมากยิ่งขึ้น</li>\n\n\n\n<li>สิ่งที่ต้องเข้าใจ หลัก ๆ ที่ของแนะนำเช่น struct, interface และ error handling จากนั้นไปดูที่โครงสร้างการทำงานของระบบงาน</li>\n\n\n\n<li>ภาษา go มีแนวทาง และ แนวคิดของตัวเอง จำเป็นต้องเรียนรู้และเข้าใจด้วย จะช่วยให้เราพัฒนาตัวเองขึ้นไปอีกทาง</li>\n\n\n\n<li>แนะนำให้ stay update go อยู่อย่างสม่ำเสมอ อย่ามีข้ออ้าง !!</li>\n\n\n\n<li>ChatGPT และ Chat Copilot เป็นเพื่อคู่คิด ขาดไม่ได้เลย แนะนำให้ลองนำมาใช้งานดูครับ</li>\n</ul>\n\n\n\n<p>จงเรียนรู้อย่างต่อเนื่อง<br />ของให้สนุกกับการ coding ครับ<br />ตอนที่เขียน blog นี้ใช้งาน go 1.21.5</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"6a574427a7241d379924940641581d11b1796ccd1f1cf2511dd647cd8a06b3d0","category":"Thai"}