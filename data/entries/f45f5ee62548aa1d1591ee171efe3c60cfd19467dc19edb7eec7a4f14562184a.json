{"title":"Vault benchmark testing tool","link":"https://www.hashicorp.com/blog/vault-benchmark-testing-tool","date":1701190800000,"content":"<p>Load testing is an important part of releasing a reliable API or application. It gives organizations the confidence that the infrastructure, applications, and workloads will work well under a defined load. This testing is also important to ensure that self-managed HashiCorp Vault clusters can handle a large number of concurrent requests — sometimes <a href=\"https://www.hashicorp.com/resources/company-hit-20k-requests-vault-encryption\">thousands per second</a> — in a real-world scenario. Because if Vault goes down, secure access to secrets and encryption as a service go down.</p>\n\n<p>This post discusses how the <a href=\"https://github.com/hashicorp/vault-benchmark\">Vault benchmark</a> tool our engineers have built can give operators confidence in the reliability of their secrets management lifecycle.</p>\n\n<p>Vault benchmark is designed to test the performance of Vault authentication methods and secrets engines. Its load-testing capabilities are powered by the HTTP load testing utility <a href=\"https://github.com/tsenart/vegeta\">Vegeta</a>.</p>\n\n<h2>Vault benchmark benefits</h2>\n\n<p>The benefits of benchmarking your Vault workloads include:</p>\n\n<ul>\n<li>Increased uptime due to the ability to spot future problems.</li>\n<li>Breaking down operational silos by monitoring across system components, enabling the teams responsible for those components to come together to fix issues.</li>\n<li>Faster response to problems by collecting real-time data.</li>\n<li>Increased innovation when IT teams have more time to work on mission-critical projects rather than fixing application problems.</li>\n</ul>\n\n<h2>Vault benchmark prerequisites</h2>\n\n<p>Prerequisites for using Vault benchmark include:</p>\n\n<ul>\n<li>Familiarity with using the command line (installing and executing CLI apps)</li>\n<li>The application/API deployed on a server (dev/staging) for testing. You may use Vault benchmark for local tests but they might not give an accurate picture of how the server will behave under a real-world load.</li>\n<li>Experience using Vault.</li>\n</ul>\n\n<h2>Using Vault benchmark</h2>\n\n<p>To use Vault benchmark, run <a href=\"https://releases.hashicorp.com/vault-benchmark\">the <code>vault-benchmark</code> binary</a> along with a benchmark configuration file. Use the file to configure any resources on the Vault instance that are required to perform tests. Before running the binary, set up any infrastructure dependencies, such as a database.</p>\n\n<p>Depending on the configuration, Vault benchmark may put a great deal of stress on the Vault cluster and the underlying infrastructure during testing. Vault benchmark is intended to be run against non-production Vault clusters that are isolated from production systems or any other systems that might negatively impact the end-user experience.</p>\n\n<p>Through load testing, engineering teams may discover aspects of their architecture that are performing well, as well as opportunities for improvement. We recommend using <a href=\"https://developer.hashicorp.com/vault/tutorials/operations/production-hardening\">Vault’s production hardening guidelines</a> and <a href=\"https://developer.hashicorp.com/vault/docs/internals/architecture\">reference architecture</a> in addition to load testing to improve and tune overall performance.</p>\n\n<p>You can download the Vault benchmark release binary from our <a href=\"https://releases.hashicorp.com/vault-benchmark\">release page</a>. Documentation for Vault benchmark, which includes usage examples and test configurations, can be found in the project’s <a href=\"https://github.com/hashicorp/vault-benchmark/blob/main/docs/index.md\">GitHub repository docs folder</a>.</p>\n\n<p>To learn how <a href=\"https://www.indeed.com/\">Indeed</a> manages the reliability of its Vault clusters and uses Vault benchmark, watch the HashiConf 2023 talk: <a href=\"https://www.youtube.com/watch?v=-lotQe6Gylg\">All the 9s: Keeping Vault resilient and reliable</a></p>\n\n<blockquote>\n<p>“[Vault benchmark] makes codifying your regular traffic and benchmarking clusters really easy. Just like you define your infrastructure as code, you define your traffic patterns and stress tests as code. </p>\n\n<p>The tool already supports a comprehensive set of off-backends and secret engines, so you can easily map your standard client interactions and reproduce them in lower environments. This is an invaluable tool to understand how your current configuration and, more importantly, how any future configuration changes could impact cluster performance.”\n— Mark Billow, SRE, Indeed</p>\n</blockquote>\n\n<h2><strong>Self-managed and HashiCorp-managed Vault</strong></h2>\n\n<p>For more information about best practices for self-managed <a href=\"https://www.vaultproject.io/\">Vault Community</a> and <a href=\"https://www.hashicorp.com/products/vault\">Vault Enterprise</a>, visit <a href=\"https://developer.hashicorp.com/\">HashiCorp Developer</a> and check out the full <a href=\"https://developer.hashicorp.com/vault\">Vault knowledge base</a>. If you’re interested in outsourcing Vault operations and reliability engineering to HashiCorp, try <a href=\"https://developer.hashicorp.com/hcp/docs/vault\">HCP Vault</a> or <a href=\"https://developer.hashicorp.com/vault/tutorials/hcp-vault-secrets-get-started/hcp-vault-secrets-introduction\">HCP Vault Secrets</a>, our cloud-managed versions of HashiCorp Vault.</p>\n","author":"Rich Dubose","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"f45f5ee62548aa1d1591ee171efe3c60cfd19467dc19edb7eec7a4f14562184a","category":"Tech"}