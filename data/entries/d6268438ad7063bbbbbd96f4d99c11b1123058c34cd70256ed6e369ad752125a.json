{"title":"มาลองใช้งาน Vitest สำหรับ API testing","link":"https://www.somkiat.cc/api-testing-with-vitest/","date":1703173082000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2023/12/vitest-150x150.jpg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2023/12/vitest-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2023/12/vitest-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/12/vitest.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/12/vitest.jpg\" width=\"739\" height=\"359\" /></a></figure>\n\n\n\n<p>ปกติในการทำ API testing ด้วย JavaScript และ NodeJS นั้น<br />มักจะใช้งาน library ต่าง ๆ เช่น Jest และ SuperTest<br />รวมไปถึง library/framework อื่น ๆ เช่น cypress และ playwright<br />แต่ก็มีอีกตังที่น่าสนใจคือ <strong><a href=\"https://vitest.dev/\">Vitest</a></strong><br />ที่เพิ่งปล่อย version 1 ออกมาเมื่อเดือนที่ผ่านมา<br />ซึ่งเบื้องหลังการทำงานคือ Vite ที่เร็วมาก ๆ<br />ดังนั้นมาลองใช้งานเล่น ๆ กันดู</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>สิ่งที่น่าสนใจสำหรับ Vitest ประกอบไปด้วย</strong></p>\n\n\n\n<ul>\n<li>ทำงานเร็วมาก รวมทั้งใช้ memory น้อยกว่าตัวอื่น ๆ เช่น Jest เป็นต้น</li>\n\n\n\n<li>ใช้ config เดียวกับ Vite</li>\n\n\n\n<li>สนับสนุน JavaScript, TypeScript และ ESM รวมทั้ง JSX ด้วย</li>\n\n\n\n<li>สนับสนุน Jest</li>\n\n\n\n<li>มี watch mode น่าจะเป็น default ไปแล้ว</li>\n\n\n\n<li>เริ่มต้นใช้งานแบบ zero configuration</li>\n\n\n\n<li>สำหรับการ assrtion จะมี Chai มาให้เลย รวมทั้งมี assertType ให้อีกด้วย</li>\n\n\n\n<li>ส่วนการ run test นั้นจะทำงานแบบ parallel มาให้เลย แต่ก็สามารถปิดการใช้งานได้</li>\n\n\n\n<li>มี benchmark ให้เลย ชิวมาก</li>\n\n\n\n<li>มี Vitest UI สำหรับแสดงผล report การทดสอบแบบสวย ๆ</li>\n\n\n\n<li>ทดสอบได้ทั้ง UI test, API test และ Snapshot test</li>\n\n\n\n<li>มี Mocking มาให้ใช้</li>\n\n\n\n<li>มี <a href=\"https://vitest.dev/guide/in-source.html\" target=\"_blank\">in source testing</a> คือเขียน test case ใน production code ได้เลย ตรงนี้ไม่ค่อยชอบเท่าไร</li>\n</ul>\n\n\n\n<p>มาลองใช้งานกันดู</p>\n\n\n\n<p><strong>เริ่มด้วยการเขียน test และ run แบบปกติ (watch mode)</strong></p>\n\n\n\n[gist id=\"f6b3896bb7c609d58c1e7e71c2756d5d\" file=\"1.js\"]\n\n\n\n<p>สำหรับไฟล์ package.json เป็นดังนี้</p>\n\n\n\n<ul>\n<li>Test with watch mode</li>\n\n\n\n<li>Test แล้วจบ พร้อม coverage</li>\n\n\n\n<li>UI mode</li>\n</ul>\n\n\n\n[gist id=\"f6b3896bb7c609d58c1e7e71c2756d5d\" file=\"package.json\"]\n\n\n\n<p>ทำการแสดงผลการทดสอบแบบ html สวย ๆ ใน UI mode</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/12/ui-report.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/12/ui-report.jpg\" width=\"463\" height=\"253\" /></a></figure>\n\n\n\n<p><strong>มาลองทำ API testing ด้วย Vitest กันดีกว่า</strong></p>\n\n\n\n<p>ลองใช้งาน API จาก <a href=\"https://jsonplaceholder.typicode.com/\">JsonPlaceHolder</a><br />โดยสิ่งที่ต้องการทดสอบประกอบไปด้วย</p>\n\n\n\n<ul>\n<li>Response status code</li>\n\n\n\n<li>Response content type</li>\n\n\n\n<li>Body response ต้องเป็น object</li>\n\n\n\n<li>JSON ของ response ต้องมี schema ตามที่ต้องการ</li>\n</ul>\n\n\n\n<p>สามารถเขียนง่าย ๆ ได้ดังนี้</p>\n\n\n\n[gist id=\"f6b3896bb7c609d58c1e7e71c2756d5d\" file=\"api.test.js\"]\n\n\n\n<p> ผลการทดสอบเป็นดังนี้</p>\n\n\n\n[gist id=\"f6b3896bb7c609d58c1e7e71c2756d5d\" file=\"1.txt\"]\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/12/Screenshot-2566-12-21-at-22.37.20.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/12/Screenshot-2566-12-21-at-22.37.20-1024x457.png\" width=\"540\" height=\"240\" /></a></figure>\n\n\n\n<p>ใช้งานง่ายดี เร็วด้วย สวยด้วย<br />ต้องใช้งานกันแล้ว<br />สนุกกับการ coding ครับ</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"d6268438ad7063bbbbbd96f4d99c11b1123058c34cd70256ed6e369ad752125a","category":"Thai"}