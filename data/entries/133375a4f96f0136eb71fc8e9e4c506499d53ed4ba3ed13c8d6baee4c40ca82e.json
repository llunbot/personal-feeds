{"title":"ควรใช้งาน Stored procedure ใน database หรือไม่ ?","link":"https://www.somkiat.cc/when-to-use-stored-procedure/","date":1637335815000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/11/problem-150x150.jpg\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/11/problem.jpg\" /></figure>\n\n\n\n<p>เพิ่งคุยเรื่องการใช้งาน Stored procedure ที่เขียนใน database<br />ว่าระบบ legacy หลาย ๆ ตัวใช้งานกัน<br />และยังคงดูแลรักษา เพิ่ม feature ต่าง ๆ มาจนถึงปัจจุบัน<br />ตลอดจนก็สรรเสริญถึงมันเยอะมาก ๆ !!<br />ว่าแต่ปัญหามันคืออะไรกันแน่ ?<br />มันไม่ดีใช่ไหม ?</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>ก่อนอื่นต้องมาดูข้อดีของ Stored procedure ก่อนว่ามีอะไรบ้าง</strong></p>\n\n\n\n<p>เนื่องจากถ้ามันไม่ดีแล้ว จะมีใน database ต่าง ๆ ทำไมกัน<br />ข้อดีมีดังนี้</p>\n\n\n\n<ul><li>ความเร็วในการจัดการข้อมูลที่สูงมาก ๆ เพราะว่าไม่ต้องส่งข้อมูลข้ามระบบ network ดังนั้น network latency น้อยมาก ๆ</li><li>ง่ายต่อการจัดการ เพราะว่า อยู่ที่เดียวคือ database</li><li>ซ่อนการทำงานต่าง ๆ จากผู้ใช้งาน เราสามารถซ่อนความซับซ้อนได้ง่าย ๆ คนใช้งานก็ง่าย</li><li>สามารถใช้งานความสามารถอื่น ๆ ของ database ได้ง่าย</li></ul>\n\n\n\n<p><strong>แต่ปัญหาที่มักเกิดขึ้นคือ </strong></p>\n\n\n\n<ul><li>นำ business logic, validation, logging, traction ของระบบที่ซับซ้อน ไปใส่ไว้ใน stored procedure มันสามารถทำได้ แต่การดูแลไม่ง่ายเลย</li><li>แต่ละ stored procedure ทำการเรียก stored procedure อื่น ๆ ไปมา ทำให้แก้ไขที่หนึ่ง ดันไปกระทบอีกที่หนึ่ง</li><li>การจัดการ versioning ของ store procedure ยาก</li><li>เจอระบบแบบกระจายตามแต่ละ business/service ยิ่งลำบาก รวมถึงการจัดการ transaction</li><li>การทดสอบไม่ต้องพูดถึง ไม่ง่ายเลย</li><li>เกิดการ lock กับ database นั้น ๆ ทำให้เปลี่ยน หรือ scale ได้ยาก</li><li>ขาดคนที่มีความรู้และเข้าใจกับ database และ stored procedure ทำให้ค่าใช้จ่ายในการดูแลรักษาสูงขึ้น</li></ul>\n\n\n\n<p>ดังนั้น อย่าไปเขียน business logic ไว้ใน stored procedure จะดีกว่า<br />ไม่ใช่ว่า ไม่ใช้เลย ซึ่งก็ไม่ถูกต้อง<br />ยิ่งถ้าเป็นการทำงานกับระบบที่รวม database ไว้ด้วยกัน<br />stored procedure จะเหมาะสมมาก ๆ ในการจัดการ เช่น ETL (Extract, Transform, Loader)</p>\n\n\n\n<p><strong>ดังนั้นสิ่งต่าง ๆ เหล่านี้มันคือ การตัดสินใจ</strong></p>\n\n\n\n<p>ซึ่งเริ่มต้นมันอาจจะดี<br />แต่เมื่อเวลาผ่านไป <br />ความต้องการเปลี่ยน <br />technology เปลี่ยน<br />ดังนั้นสิ่งที่เราเคยทำไป หรือ ตัดสินใจลงไป อาจจะผิดหรือไม่เหมาะสมได้<br />ดังนั้นสิ่งที่ควรทำคือ การปรับปรุง และ เปลี่ยนตั้งแต่เนิ่น ๆ<br />มิใช่ปล่อยไว้จนเป็นภาระ ต่อคนดูแลระบบ<br />และสุดท้ายมันก็ส่งผลต่อ business แบบหลีกเลี่ยงไม่ได้เลย</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"133375a4f96f0136eb71fc8e9e4c506499d53ed4ba3ed13c8d6baee4c40ca82e","category":"Thai"}