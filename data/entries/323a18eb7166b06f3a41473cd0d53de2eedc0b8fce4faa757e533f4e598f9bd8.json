{"title":"Using Multimodal AI models For Your Applications (Part 3)","link":"https://smashingmagazine.com/2024/10/using-multimodal-ai-models-applications-part3/","date":1728640800000,"content":"<p>In this third and final part of a <a href=\"https://www.smashingmagazine.com/2024/07/integrating-image-to-text-and-text-to-speech-models-part1/\">three-part series</a>, we’re taking a more streamlined approach to an application that supports vision-language (VLM) and text-to-speech (TTS). This time, we’ll use different models that are designed for all three modalities — images or videos, text, and audio( including speech-to-text) — in one model. These “any-to-any” models make things easier by allowing us to avoid switching between models.</p>\n<p>Specifically, we’ll focus on two powerful models: <strong>Reka</strong> and <strong>Gemini 1.5 Pro</strong>.</p>\n<p>Both models take things to the next level compared to the tools we used earlier. They eliminate the need for separate speech recognition models, providing a unified solution for multimodal tasks. With this in mind, our goal in this article is to explore how Reka and Gemini simplify building advanced applications that handle images, text, and audio all at once. </p>\nOverview Of Multimodal AI Models\n<p>The architecture of multimodal models has evolved to enable seamless handling of various inputs, including text, images, and audio, among others. Traditional models often require separate components for each modality, but recent advancements in “any-to-any” models like <a href=\"https://next-gpt.github.io\"><strong>Next-GPT</strong></a> or <a href=\"https://machinelearning.apple.com/research/massively-multimodal\"><strong>4M</strong></a> allow developers to build systems that process multiple modalities within a unified architecture.</p>\n<p><a href=\"https://deepmind.google/discover/blog/a-generalist-agent/\"><strong>Gato</strong></a>, for instance, utilizes a 1.2 billion parameter decoder-only transformer architecture with 24 layers, embedding sizes of 2048 and a hidden size of 8196 in its feed-forward layers. This structure is optimized for general tasks across various inputs, but it still relies on extensive task-specific fine-tuning.</p>\n<p><a href=\"https://openai.com/index/hello-gpt-4o/\"><strong>GPT-4o</strong></a>, on the other hand, takes a different approach with training on multiple media types within a single architecture. This means it’s a single model trained to handle a variety of inputs (e.g., text, images, code) without the need for separate systems for each. This training method allows for smoother task-switching and better generalization across tasks.</p>\n<p>Similarly, <a href=\"https://codi-gen.github.io\"><strong>CoDi</strong></a> employs a multistage training scheme to handle a linear number of tasks while supporting input-output combinations across different modalities. CoDi’s architecture builds a shared multimodal space, enabling synchronized generation for intertwined modalities like video and audio, making it ideal for more dynamic multimedia tasks.</p>\n<p>Most “any-to-any” models, including the ones we’ve discussed, rely on a few key concepts to handle different tasks and inputs smoothly:</p>\n<ul>\n<li><strong>Shared representation space</strong><br />These models convert different types of inputs — text, images, audio — into a common feature space. Text is encoded into vectors, images into feature maps, and audio into spectrograms or embeddings. This shared space allows the model to process various inputs in a unified way.</li>\n<li><strong>Attention mechanisms</strong><br />Attention layers help the model focus on the most relevant parts of each input, whether it’s understanding the text, generating captions from images, or interpreting audio.</li>\n<li><strong>Cross-modal interaction</strong><br />In many models, inputs from one modality (e.g., text) can guide the generation or interpretation of another modality (e.g., images), allowing for more integrated and cohesive outputs.</li>\n<li><strong>Pre-training and fine-tuning</strong><br />Models are typically pre-trained on large datasets across different types of data and then fine-tuned for specific tasks, enhancing their performance in real-world applications.</li>\n</ul>\nReka Models\n<p><a href=\"https://www.reka.ai\">Reka</a> is an AI research company that helps developers build powerful applications by offering models for a range of tasks. These tasks include generating text from videos and images, translating speech, and answering complex questions from long multimodal documents. Reka’s models can even write and execute code, providing flexible, real-world solutions for developers.</p>\n<p>These are the three main models Reka offers:</p>\n<ol>\n<li><a href=\"https://www.reka.ai/news/reka-core-our-frontier-class-multimodal-language-model?utm\"><strong>Reka Core</strong></a><br />A 67-billion-parameter multimodal language model designed for complex tasks. It supports inputs like images, videos, and texts while excelling in advanced reasoning and coding.</li>\n<li><a href=\"https://chat.reka.ai\"><strong>Reka Flash</strong></a><br />A faster model with a 21-billion-parameter, designed for flexibility and rapid performance in multimodal settings.</li>\n<li><a href=\"https://publications.reka.ai/reka-core-tech-report.pdf\"><strong>Reka Edge</strong></a> (PDF)<br />A smaller 7-billion-parameter model was built for on-device and low-latency applications, making it efficient for local use and local or latency-sensitive applications.</li>\n</ol>\n<p>Reka’s models can be fine-tuned and deployed securely, whether on the cloud, on-premises, or even on-device. Let’s start by testing Reka’s capabilities directly through its <a href=\"https://chat.reka.ai/chat\">playground</a>. This allows us to experiment with its multimodal features without writing any code, providing a hands-on way to see how the models handle various tasks, such as image and video comprehension.</p>\n<p>Alright, we’ll kick things off by uploading an image of a diagram outline of the <strong>PaliGemma architecture</strong> and ask Reka for a detailed explanation.</p>\n<blockquote>Can you provide a more detailed explanation of this image?</blockquote>\n\n<p><img src=\"https://files.smashing.media/articles/using-multimodal-ai-models-applications-part3/1-diagram-outline-reka-explanation.png\" /></p>\n<p>Here’s what we get from Reka Core:</p>\n<blockquote>“This image is a schematic representation of a machine-learning model named PaliGemma. The model appears to be designed for multimodal input, combining both image and text data. At the top, there are two input sources: ‘Image Input’ and ‘Text Input’. The image input is processed by a ‘SigLIP Image Encoder’, which likely stands for a specific type of image encoding technique. The output of this encoder is then subjected to a ‘Linear Projection’, which is a common step in machine learning to transform data into a lower-dimensional space. The text input is directly fed into the model. Both the projected image data and the text input are then concatenated into ‘Concatenated Tokens’, which are then processed by a component labeled ‘Gemma’. The final output of the model is ‘Text Output’, which suggests that the model is designed to generate text based on the input data.”</blockquote>\n\n<p>It’s a clear and detailed breakdown of the PaliGemma architecture. The model accurately identifies image and text inputs, the <a href=\"https://huggingface.co/docs/transformers/main/en/model_doc/siglip\">SigLIP image encoder</a>, and the linear projection step. It also grasps how the image and text inputs are combined and processed to generate text output. I should admit that the response is quite neat, offering a solid explanation of the architecture. </p>\n<p>Let’s try a video input instead. We’ll upload the video about <a href=\"https://www.gennyapp.com\">Genny</a>, a software, and ask a question to see how well Reka Core handles video comprehension.</p>\n<blockquote>What is this video about?</blockquote>\n\n<blockquote>“This video is a screen recording of a group of friends discussing their plans for the weekend.”</blockquote>\n\n<p>Well, it’s not a good answer compared to <a href=\"https://www.smashingmagazine.com/2024/08/integrating-image-to-text-and-text-to-speech-models-part2/#visual-instruction-tuning-and-llava\">what LLaVA gave us in the previous article</a>. Now let’s try a longer video, but with the Reka Flash model. The video is about a TTS model called <a href=\"https://github.com/huggingface/parler-tts\">Parler TTS</a>. Instead of asking what the video is about, let’s prompt it like this:</p>\n<blockquote>I’m an AI developer, and I’m not sure how this TTS model can help me in my projects. Can you explain how I can use it or what it’s useful for?</blockquote>\n\n<p><img src=\"https://files.smashing.media/articles/using-multimodal-ai-models-applications-part3/2-reka-flash-answer.png\" /></p>\n<p>Reka Flash generates a solid answer this time: </p>\n<blockquote>“Of course! This TTS (Text-to-Speech) model can be incredibly useful for developers, especially those working on projects that involve creating more human-like interactions or providing audio feedback to users. Here are some ways you can leverage this TTS model in your projects:<br />\n<ol><li><strong>Accessibility:</strong> TTS models can greatly enhance the accessibility of your applications for users with visual impairments or reading difficulties. By providing spoken feedback or narrating content, you can make your applications more inclusive</li><li><strong>Voice Assistants:</strong> You can integrate this TTS model into voice assistants or chatbots, allowing them to generate more natural-sounding responses. This can improve user experience and make interactions with your bots more engaging.</li><li><strong>Multimedia Applications:</strong> This TTS model can be used in multimedia applications, such as e-books, educational tools, or games, to provide spoken narration or instructions. This can make the content more engaging and easier to understand.</li><li><strong>Audio Notifications:</strong> You can use the TTS model to generate audio notifications for your applications, providing users with spoken alerts or reminders. This can be particularly useful for users who may not always have their screens visible.</li><li><strong>Language Learning:</strong> The TTS model can be used in language learning applications to provide users with correct pronunciation and intonation. It can also generate spoken feedback or narrate lessons, making the learning process more immersive.</li><li><strong>Audio Books:</strong> You can use the TTS model to generate audio books, allowing users to listen to written content instead of reading it. This can be especially helpful for users who prefer auditory learning or have difficulty reading.</li><li><strong>Explainer Videos:</strong> The TTS model can be used to generate voiceovers for explainer videos, providing users with spoken narration that explains the content on the screen. This can make the content more engaging and easier to understand.</li><li><strong>Audio Feedback:</strong> You can use the TTS model to generate audio feedback for users in your applications, such as confirming actions, providing instructions, or giving feedback on their performance. This can make the interactions more natural and intuitive.</li></ol>In summary, the TTS model can be a valuable tool for developers looking to create more human-like interactions, improve accessibility, and enhance the user experience in various applications.”</blockquote>\n\n<p>It’s a good answer that’s informative and quite practical for developers. Let’s compare what happens when we try the Reka Edge model with a PDF input titled “Meta AI — Responsible Use Guide” (<a href=\"https://github.com/Meta-Llama/llama/blob/main/Responsible-Use-Guide.pdf\">PDF</a>).</p>\n<blockquote>As an AI developer, how can I ensure that I am following the responsible AI guidelines outlined in this document?</blockquote>\n\n<blockquote>“To ensure that your use of AI aligns with the principles outlined in this guide, you can follow these steps and best practices:<br /><ol><li>Familiarize yourself with the principles of responsible AI, such as transparency, accountability, and user empowerment, as outlined in the guide.</li><li>Understand the potential impacts of AI on users and society, and be aware of the risks and challenges associated with the development and deployment of AI systems.</li><li>Embrace an iterative model-development mindset, continuously striving for improvement and learning from feedback and errors.</li><li>Build a responsible AI ecosystem by working with partners, experts, and communities to develop and share best practices, tools, and benchmarking resources.</li><li>Follow the guidelines and best practices outlined in the guide for each stage of model development, from data collection and preparation to fine-tuning, evaluation, and deployment.</li><li>Consider the specific use case and requirements for your AI system, and tailor your approach accordingly.</li><li>Regularly monitor and evaluate the performance and safety of your AI system and make adjustments as needed to ensure it aligns with the principles outlined in the guide.</li><li>Be transparent and accountable in your interactions with users and stakeholders, and be open to feedback and suggestions for improvement.</li><li>Stay informed about the latest developments and research in the field of AI, and be prepared to adapt your approach as needed to address new challenges and opportunities.</li><li>Follow the specific guidelines and best practices outlined in the addendum for Code Llama, such as defining content policies, evaluating and benchmarking models, and addressing input- and output-level risks.”</li></ol></blockquote>\n\n<p>Reka Edge’s answer is quite thorough and detailed, too!</p>\n<p>If you want to dive into coding, start by <a href=\"https://auth.reka.ai/u/signup?state=hKFo2SBqU1JxcUhoNGt1bThTTXY5R2JYQTRzYl9GczZrQjNHc6Fur3VuaXZlcnNhbC1sb2dpbqN0aWTZIHVXTExuRjRlcFJ6X3laTUtRTGhPb0JaRVpLN1ppOXdFo2NpZNkgYmFxNFExOG9Tc0JpV053RGFOQzRtNWhmZ1FHd1V1cE0\">creating a Reka account</a> and getting an API key. Then you can follow along with this <a href=\"https://colab.research.google.com/github/reka-ai/colab/blob/main/reka_demo.ipynb#scrollTo=8bf9f004\">notebook</a>. Try out their Python SDK, and make sure to explore the different <a href=\"https://docs.reka.ai/available-models\">models available.</a> It’s a great way to see how these tools work under the hood!</p>\nGemini Models\n<p><a href=\"https://blog.google/technology/ai/google-gemini-next-generation-model-february-2024/\">Gemini 1.5</a>, developed by <a href=\"https://deepmind.google/about/\">Google DeepMind</a>, is designed to handle complex tasks efficiently, thanks to the new Mixture-of-Experts (MoE) system. MoE is like packing several specialized models inside one big model. Instead of using the whole network for every task, Gemini 1.5 activates only the parts (or what they call “experts”) that are most relevant. This means Gemini 1.5 can tackle complex tasks with less processing power than a typical monolithic model.</p>\n<p>We can explore Gemini’s features in <a href=\"https://ai.google.dev/aistudio\">Google AI Studio</a> since it’s already baked right in. We’ll begin by uploading the following image illustrating VLM capabilities.</p>\n<p><img src=\"https://files.smashing.media/articles/using-multimodal-ai-models-applications-part3/3-vision-language-model.jpeg\" /></p>\n<p>We’ll ask Gemini to analyze the image and extract details or concepts:</p>\n<blockquote>Explain this image. What are the specific details or concepts it represents?</blockquote>\n\n<blockquote>“The image is a flowchart illustrating different types of image understanding tasks with a Vision Language Model.<br /><ul><li><strong>Object Localization:</strong> This task aims to identify the precise location of objects within an image. The example question asks, “Is one cat behind another?”</li><li><strong>Zero-shot Segmentation:</strong> This task involves segmenting an image into different regions based on a given label, even if the model has never seen that specific label before. The example question asks to segment “striped cat.”</li><li><strong>Zero-shot Visual QA:</strong> This task requires answering questions about an image, even if the model has not been specifically trained to answer that type of question. The example question asks, “What is the breed of these cats?”</li><li><strong>One-shot Learning with Instructions:</strong> This task involves providing the model with a single example and instruction to learn a new concept and apply it to other images. The example question asks, “Striped cats are called tabby cats. What is the breed of the cats in the image?”</li></ul></blockquote>\n\n<p>Well, Gemini nailed it — it clearly understood the image and recognized the tasks a VLM handles. This is exactly what you’d expect from a model designed for advanced image analysis.</p>\n<p>Now, we’ll upload another image — this time of an Italian dish — and ask Gemini if it can recognize the dishes and list the ingredients needed for them. This type of “food recognition task” will help us test its ability to identify foods and ingredients.</p>\n<p><img src=\"https://files.smashing.media/articles/using-multimodal-ai-models-applications-part3/4-italian-food.png\" /></p>\n<blockquote>List the different dishes in this image, also from which country, and give me the ingredients I need to make them.</blockquote>\n\n<blockquote>“The image shows an Italian feast with the following dishes:<br /><ol><li><strong>Seafood Stew:</strong> A rich and flavorful stew with seafood like clams, mussels, shrimp, fish, and vegetables in a tomato broth.</li><li><strong>Spaghetti with Tomato Sauce:</strong> Classic spaghetti pasta tossed in a simple yet flavorful tomato sauce.</li><li><strong>Meatballs in Tomato Sauce:</strong> Tender and juicy meatballs simmered in a rich tomato sauce.</li><li><strong>Lasagna:</strong> Layered pasta with meat sauce, cheese, and tomato sauce.</li><li><strong>Side Salad:</strong> A refreshing side salad with mixed greens, tomatoes, and other vegetables.</li><li><strong>Garlic Bread:</strong> Toasted bread slices rubbed with garlic and olive oil.</li><li><strong>Marinara Sauce:</strong> A simple tomato-based sauce.</li></ol>This is a typical Italian meal with various dishes showcasing the flavors of Italian cuisine.<br /><br />As for the ingredients, you’ll need tomatoes for many of these dishes, specifically for the sauces and the side salad.”</blockquote>\n\n<p>Well, the model did a good job recognizing the dishes, but it also didn’t give me all the necessary ingredients. Let’s see how it does with videos instead, using the same video we used earlier with the Reka models. This time, the task will focus on <strong>action recognition</strong>. </p>\n<blockquote>What is the purpose of this video, and what key actions or processes are being demonstrated?</blockquote>\n\n<blockquote>“The video is a tutorial about the importance of friendship and how it can impact our lives. It demonstrates the use of a video editing software called “Genmy” to create a video and add text subtitles. The video creator is using Genmy to:<br /><ul><li><strong>Record their voice:</strong> This is seen at the top of the screen with the mic icon.</li><li><strong>Add text to speech:</strong> You see the “Text to Speech” option, which is likely being used to generate subtitles or captions for the video.</li><li><strong>Edit the timeline:</strong> They’re working with a video timeline, adding and arranging different elements.</li><li><strong>Add voice-over:</strong> The speaker is adding commentary to the video.</li><li><strong>Create a visually appealing presentation:</strong> They’re using a combination of video footage, text, and voice-over to create an engaging tutorial.”</li></ul></blockquote>\n\n<p>Well, Gemini gave a clear breakdown of the video, identifying it as a tutorial demonstrating the <a href=\"https://www.genmy.ai\">Genmy video editing software</a> to highlight how it’s used for recording voice, adding text-to-speech, editing video timelines, and allowing voice-over. Impressive!</p>\n<p>Let’s upload one more video, the same one we used for Reka about the Parler TTS model, and ask Gemini to <strong>analyze and summarize</strong> the contents.</p>\n<blockquote>Summarize this video and explain how the contents might be relevant or helpful for software engineers.</blockquote>\n\n<blockquote>“This video showcases different voice samples generated by a text-to-speech (TTS) system called “Parler-TTS.” The video highlights various voice characteristics like gender, pace, pitch, and even the simulated environment. For software engineers, this video demonstrates the progress made in TTS technology. These are some insights:<br /><ul><li><strong>Voice Variety:</strong> The video shows that Parler-TTS can create diverse voices, potentially useful for applications needing different personas or tones.</li><li><strong>Fine-grained Control:</strong> The video emphasizes the ability to control voice parameters like pace and pitch, showcasing the potential for customizability.</li><li><strong>Quality and Naturalness:</strong> The video focuses on the quality of the generated speech, demonstrating the advancements made in speech synthesis, which is crucial for user experience.”</li></ul></blockquote>\n\n<p>Nicely done! I can go with that answer. Gemini explains adjusting voice settings, like pitch and speed, and how having different voices can be useful. Gemini also emphasizes the importance of natural, high-quality speech, which is handy for developers working with TTS systems!</p>\n<p>Alright, for coding, you can grab the code from Google AI Studio by clicking the <strong>Get Code</strong> button. You can choose between formatting the code in Python, Swift, and Java, among other languages.</p>\n<p><img src=\"https://files.smashing.media/articles/using-multimodal-ai-models-applications-part3/5-gemini-api.png\" /></p>\nConclusion\n<p>Both Reka and Gemini are strong multimodal models for AI applications, but there are key differences between them to consider. Here’s a table that breaks those down:</p>\n<table>\n    <thead>\n        <tr>\n            <th>Feature</th>\n            <th>Reka</th>\n      <th>Gemini 1.5</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><strong>Multimodal Capabilities</strong></td>\n            <td>Image, video, and text processing</td>\n      <td>Image, video, text, with extended token context</td>\n        </tr>\n        <tr>\n      <td><strong>Efficiency</strong></td>\n            <td>Optimized for multimodal tasks</td>\n            <td>Built with MoE for efficiency</td>\n        </tr>\n        <tr>\n      <td><strong>Context Window</strong></td>\n            <td>Standard token window</td>\n            <td>Up to two million tokens (with Flash variant)</td>\n        </tr>\n    <tr>\n      <td><strong>Architecture</strong></td>\n            <td>Focused on multimodal task flow</td>\n            <td>MoE improves specialization</td>\n        </tr>\n    <tr>\n      <td><strong>Training/Serving</strong></td>\n            <td>High performance with efficient model switching</td>\n            <td>More efficient training with MoE architecture</td>\n        </tr>\n    <tr>\n      <td><strong>Deployment</strong></td>\n            <td>Supports on-device deployment</td>\n            <td>Primarily cloud-based, with Vertex AI integration</td>\n        </tr>\n    <tr>\n      <td><strong>Use Cases</strong></td>\n            <td>Interactive apps, edge deployment</td>\n            <td>Suited for large-scale, long-context applications</td>\n        </tr>\n    <tr>\n      <td><strong>Languages Supported</strong></td>\n            <td>Multiple languages</td>\n            <td>Supports many languages with long context windows</td>\n        </tr>\n    </tbody>\n</table>\n\n<p><strong>Reka</strong> stands out for on-device deployment, which is super useful for apps requiring offline capabilities or low-latency processing.</p>\n<p>On the other hand, <strong>Gemini 1.5 Pro</strong> shines with its long context windows, making it a great option for handling large documents or complex queries in the cloud.</p>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"323a18eb7166b06f3a41473cd0d53de2eedc0b8fce4faa757e533f4e598f9bd8","category":"Tech"}