{"title":"Add your Ruby gems to AWS CodeArtifact","link":"https://aws.amazon.com/blogs/aws/add-your-ruby-gems-to-aws-codeartifact/","date":1714515713000,"content":"<p>Ruby developers can now use <a href=\"https://aws.amazon.com/codeartifact\">AWS CodeArtifact</a> to securely store and retrieve their gems. CodeArtifact integrates with standard developer tools like <code>gem</code> and <code>bundler</code>.</p> \n<p>Applications often use numerous packages to speed up development by providing reusable code for common tasks like network access, cryptography, or data manipulation. Developers also embed <a href=\"https://aws.amazon.com/what-is/sdk/\">SDKs</a>–such as the <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a>–to access remote services. These packages may come from within your organization or from third parties like open source projects. Managing packages and dependencies is integral to software development. Languages like Java, C#, JavaScript, Swift, and Python have tools for downloading and resolving dependencies, and Ruby developers typically use <code>gem</code> and <code>bundler</code>.</p> \n<p>However, using third-party packages presents legal and security challenges. Organizations must ensure package licenses are compatible with their projects and don’t violate intellectual property. They must also verify that the included code is safe and doesn’t introduce vulnerabilities, a tactic known as a supply chain attack. To address these challenges, organizations typically use private package servers. Developers can only use packages vetted by security and legal teams made available through private repositories.</p> \n<p>CodeArtifact is a managed service that allows the safe distribution of packages to internal developer teams without managing the underlying infrastructure. <span>CodeArtifact</span> now supports Ruby gems in addition to <a href=\"https://www.npmjs.com/\">npm</a>, <a href=\"https://pypi.org/project/pip/\">PyPI</a>, <a href=\"https://maven.apache.org\">Maven</a>, <a href=\"https://www.nuget.org/\">NuGet</a>, <a href=\"https://www.nuget.org/\">SwiftPM</a>, and generic formats.</p> \n<p>You can publish and download Ruby gem dependencies from your CodeArtifact repository in the AWS Cloud, working with existing tools such as <code>gem</code> and <code>bundler</code>. After storing packages in CodeArtifact, you can reference them in your <code>Gemfile</code>. Your build system will then download approved packages from the CodeArtifact repository during the build process.</p> \n<p><span><strong>How to get started<br /> </strong></span>Imagine I’m working on a package to be shared with other development teams in my organization.</p> \n<p>In this demo, I show you how I prepare my environment, upload the package to the repository, and use this specific package build as a dependency for my project. I focus on the steps specific to Ruby packages. You can read <a href=\"https://aws.amazon.com/blogs/aws/software-package-management-with-aws-codeartifact/\">the tutorial written by my colleague Steven to get started with CodeArtifact</a>.</p> \n<p>I use an AWS account that has a package <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/codeartifact-concepts.html#welcome-concepts-repository\">repository</a> (<code>MyGemsRepo</code>) and <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/codeartifact-concepts.html#welcome-concepts-domain\">domain</a> (<code>stormacq-test</code>) already configured.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/15/2024-04-15_12-28-53.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/15/2024-04-15_12-28-53.png\" alt=\"CodeArtifact - Ruby repository\" width=\"800\" height=\"284\" /></a></p> \n<p>To let the Ruby tools acess my CodeArtifact repository, I start by collecting an authentication token from CodeArtifact.</p> \n<pre><code>export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token \\\n                                     --domain stormacq-test              \\\n                                     --domain-owner 012345678912         \\\n                                     --query authorizationToken          \\\n                                     --output text`\n\nexport GEM_HOST_API_KEY=\"Bearer $CODEARTIFACT_AUTH_TOKEN\"</code></pre> \n<p>Note that the authentication token expires after 12 hours. I must repeat this command after 12 hours to obtain a fresh token.</p> \n<p>Then, I request the repository endpoint. I pass the <code>domain</code> name and <code>domain owner</code> (the AWS account ID). Notice the <code>--format ruby</code> option.</p> \n<pre><code>export RUBYGEMS_HOST=`aws codeartifact get-repository-endpoint  \\\n                           --domain stormacq-test               \\\n                           --domain-owner 012345678912          \\\n                           --format ruby                        \\\n                           --repository MyGemsRepo              \\\n                           --query repositoryEndpoint           \\\n                           --output text`</code></pre> \n<p>Now that I have the repository endpoint and an authentication token, <code>gem</code> will use these environment variable values to connect to my private package repository.</p> \n<p>I create a very simple project, build it, and send it to the package repository.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/17/2024-04-17_12-08-35.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/17/2024-04-17_12-08-35.png\" alt=\"CodeArtifact - building and pushing a custom package\" width=\"800\" height=\"496\" /></a></p> \n<pre><code>$ gem build hola.gemspec \n\nSuccessfully built RubyGem\n  Name: hola-codeartifact\n  Version: 0.0.0\n  File: hola-codeartifact-0.0.0.gem\n  \n$ gem push hola-codeartifact-0.0.0.gem \nPushing gem to https://stormacq-test-486652066693.d.codeartifact.us-west-2.amazonaws.com/ruby/MyGemsRepo...</code></pre> \n<p>I verify in the console that the package is available.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/17/2024-04-17_12-08-19.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/17/2024-04-17_12-08-19.png\" alt=\"CodeArtifact - Hola package is present\" width=\"800\" height=\"347\" /></a></p> \n<p>Now that the package is available, I can use it in my projects as usual. This involves configuring the local <code>~/.gemrc</code> file on my machine. I follow the instructions provided by the console, and I make sure I replace <code>${CODEARTIFACT_AUTH_TOKEN}</code> with its actual value.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/15/2024-04-15_12-55-54.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/15/2024-04-15_12-55-54.png\" alt=\"CodeArtifact - console instructions to connect to the repo\" width=\"800\" height=\"813\" /></a></p> \n<p>Once <code>~/.gemrc</code> is correctly configured, I can install gems as usual. They will be downloaded from my private gem repository.</p> \n<pre><code>$ gem install hola-codeartifact\n\nFetching hola-codeartifact-0.0.0.gem\nSuccessfully installed hola-codeartifact-0.0.0\nParsing documentation for hola-codeartifact-0.0.0\nInstalling ri documentation for hola-codeartifact-0.0.0\nDone installing documentation for hola-codeartifact after 0 seconds\n1 gem installed</code></pre> \n<p><span><strong>Install from upstream<br /> </strong></span>I can also associate my repository with an upstream source. It will automatically fetch gems from upstream when I request one.</p> \n<p>To associate the repository with rubygems.org, I use the console, or I type</p> \n<pre><code>aws codeartifact  associate-external-connection \\\n                   --domain stormacq-test       \\\n                   --repository MyGemsRepo      \\\n                   --external-connection public:ruby-gems-org\n\n{\n    \"repository\": {\n        \"name\": \"MyGemsRepo\",\n        \"administratorAccount\": \"012345678912\",\n        \"domainName\": \"stormacq-test\",\n        \"domainOwner\": \"012345678912\",\n        \"arn\": \"arn:aws:codeartifact:us-west-2:012345678912:repository/stormacq-test/MyGemsRepo\",\n        \"upstreams\": [],\n        \"externalConnections\": [\n            {\n                \"externalConnectionName\": \"public:ruby-gems-org\",\n                \"packageFormat\": \"ruby\",\n                \"status\": \"AVAILABLE\"\n            }\n        ],\n        \"createdTime\": \"2024-04-12T12:58:44.101000+02:00\"\n    }\n}</code></pre> \n<p>Once associated, I can pull any gems through <span>CodeArtifact</span>. It will automatically fetch packages from upstream when not locally available.</p> \n<pre><code>$ gem install rake \n\nFetching rake-13.2.1.gem\nSuccessfully installed rake-13.2.1\nParsing documentation for rake-13.2.1\nInstalling ri documentation for rake-13.2.1\nDone installing documentation for rake after 0 seconds\n1 gem installed</code></pre> \n<p>I use the console to verify the <code>rake</code> package is now available in my repo.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/16/2024-04-16_21-06-59.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/04/16/2024-04-16_21-06-59.png\" width=\"800\" height=\"437\" /></a></p> \n<p><span><strong>Things to know<br /> </strong></span>There are some things to keep in mind before uploading your first Ruby packages.</p> \n<ul> \n <li>Be sure <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html\">to update to the latest version of the AWS CLI</a> before trying any command shown in the preceding instructions. Only the latest version of the CLI knows about Ruby repositories in CodeArtifact.</li> \n <li>The authentication token expires after 12 hours. We suggest writing a script to automate its renewal or using <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-run-lambda-schedule.html\">a scheduled AWS Lambda function</a> and securely storing the token in <a href=\"https://aws.amazon.com/secrets-manager/\">AWS Secrets Manager</a> (for example).</li> \n</ul> \n<p><strong><span>Pricing and availability</span><br /> </strong>CodeArtifact costs for Ruby packages are the same as for the other package formats already supported. CodeArtifact billing depends on three metrics: the storage (measured in GB per month), the number of requests, and the data transfer out to the internet or to other AWS Regions. Data transfer to AWS services in the same Region is not charged, meaning you can run your continuous integration and delivery (CI/CD) jobs on <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a> or <a href=\"https://aws.amazon.com/codebuild/\">AWS CodeBuild</a>, for example, without incurring a charge for the CodeArtifact data transfer. As usual, <a href=\"https://aws.amazon.com/codeartifact/pricing/\">the pricing page</a> has the details.</p> \n<p>CodeArtifact for Ruby packages is available in <a href=\"https://aws.amazon.com/codeartifact/faq/\">all 13 Regions where CodeArtifact is available</a>.</p> \n<p>Now, go build your Ruby applications and upload your private packages to CodeArtifact!</p> \n<a href=\"https://twitter.com/sebsto\">-- seb</a>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"2e44d9688713837aeb7956e2d774bc0de379e80a113f57188c17a9df19243133","category":"Tech"}