{"title":"Three new capabilities for Amazon Inspector broaden the realm of vulnerability scanning for workloads","link":"https://aws.amazon.com/blogs/aws/three-new-capabilities-for-amazon-inspector-broaden-the-realm-of-vulnerability-scanning-for-workloads/","date":1701367674000,"content":"<p>Today, <a href=\"https://aws.amazon.com/inspector/\">Amazon Inspector</a> adds three new capabilities to increase the realm of possibilities when scanning your workloads for software vulnerabilities:</p> \n<ul> \n <li>Amazon Inspector introduces a new set of open source plugins and an API allowing you to assess your container images for software vulnerabilities at build time directly from your continuous integration and continuous delivery (CI/CD) pipelines wherever they are running.</li> \n <li>Amazon Inspector can now continuously monitor your <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a> instances without installing an agent or additional software (in preview).</li> \n <li>Amazon Inspector uses generative artificial intelligence (AI) and automated reasoning to provide assisted code remediation for your <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> functions.</li> \n</ul> \n<p>Amazon Inspector is a vulnerability management service that continually scans your AWS workloads for known software vulnerabilities and unintended network exposure. Amazon Inspector automatically discovers and scans running EC2 instances, container images in <a href=\"https://aws.amazon.com/ecr/\">Amazon Elastic Container Registry (Amazon ECR)</a> and within your CI/CD tools, and Lambda functions.</p> \n<p>We all know engineering teams often face challenges when it comes to promptly addressing vulnerabilities. This is because of the tight release deadlines that force teams to prioritize development over tackling issues in their vulnerability backlog. But it’s also due to the complex and ever-evolving nature of the security landscape. As a result, a study showed that <a href=\"https://securityintelligence.com/news/news-vulnerabilities-25-days-remediate/\">organizations take 250 days on average to resolve critical vulnerabilities</a>. It is therefore crucial to identify potential security issues early in the development lifecycle to prevent their deployment into production.</p> \n<p><strong><span>Detecting vulnerabilities in your AWS Lambda functions code<br /> </span></strong>Let’s start close to the developer with Lambda functions code.</p> \n<p>In <a href=\"https://aws.amazon.com/about-aws/whats-new/2022/11/aws-amazon-inspector-support-aws-lambda-functions/\">November 2022</a> and <a href=\"https://aws.amazon.com/about-aws/whats-new/2023/06/amazon-inspector-code-scans-aws-lambda-function/\">June 2023</a>, Amazon Inspector added the capability to scan your function’s dependencies and code. Today, we’re adding generative AI and automated reasoning to analyze your code and automatically create remediation as code patches.</p> \n<p>Amazon Inspector can now provide in-context code patches for multiple classes of vulnerabilities detected during security scans. Amazon Inspector extends the assessment of your code for security issues like injection flaws, data leaks, weak cryptography, or missing encryption. Thanks to generative AI, Amazon Inspector now provides suggestions how to fix it. It shows affected code snippets in context with suggested remediation.</p> \n<p>Here is an example. I wrote a short snippet of Python code with a hardcoded AWS secret key. Never do that!</p> \n<pre><code>def create_session_noncompliant():\n    import boto3\n    # Noncompliant: uses hardcoded secret access key.\n    sample_key = \"AjWnyxxxxx45xxxxZxxxX7ZQxxxxYxxx1xYxxxxx\"\n    boto3.session.Session(aws_secret_access_key=sample_key)\n    return response</code></pre> \n<p>I deploy the code. This triggers the assessment. I open the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a> and navigate to the Amazon Inspector page. In the <strong>Findings</strong> section, I find the vulnerability. It gives me the <strong>Vulnerability location</strong> and the <strong>Suggested remediation</strong> in a plain natural language explanation but also in <code>diff</code> text and graphical formats.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/14/2023-11-13_19-25-24.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/14/2023-11-13_19-25-24.png\" alt=\"Inspector automated code remediation\" width=\"800\" height=\"1261\" /></a></p> \n<p><strong><span>Detecting vulnerabilities in your container CI/CD pipeline</span><br /> </strong>Now, let’s move to your CI/CD pipelines when building containers.</p> \n<p>Until today, Amazon Inspector was able to assess container images once they were built and stored in Amazon Elastic Container Registry (Amazon ECR). Starting today, Amazon Inspector can detect security issues much sooner in the development process by assessing container images during their build within CI/CD tools. Assessment results are returned in near real-time directly to the CI/CD tool’s dashboard. There is no need to enable Amazon Inspector to use this new capability.</p> \n<p>We provide ready-to-use CI/CD plugins for <a href=\"https://www.jenkins.io/\">Jenkins</a> and <a href=\"https://www.jetbrains.com/teamcity/\">JetBrain’s TeamCity</a>, with more to come. There is also a new API (<code>inspector-scan</code>) and command (<code>inspector-sbomgen</code>) available from our <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a> and <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface (AWS CLI)</a>. This new API allows you to integrate Amazon Inspector in the CI/CD tool of your choice.</p> \n<p>Upon execution, the plugin runs a container extraction engine on the configured resource and generates a <a href=\"https://cyclonedx.org/\">CycloneDX-compatible software bill of materials (SBOM)</a>. Then, the plugin sends the SBOM to Amazon Inspector for analysis. The plugin receives the result of the scan in near real-time. It parses the response and generates outputs that Jenkins or TeamCity uses to pass or fail the execution of the pipeline.</p> \n<p>To use the plugin with Jenkins, I first make sure there is a role attached to the EC2 instance where Jenkins is installed, or I have an AWS access key and secret access key with permissions to call the Amazon Inspector API.</p> \n<p>I install the plugin directly from Jenkins (<strong>Jenkins Dashboard</strong> &gt; <strong>Manage Jenkins</strong> &gt; <strong>Plugins</strong>)</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/08/2023-11-08_14-38-25.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/08/2023-11-08_14-38-25.png\" alt=\"Inspect CICD Install Jenkins plugin\" width=\"800\" height=\"144\" /></a></p> \n<p>Then, I add an <strong>Amazon Inspector Scan</strong> step in my pipeline.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-11-08_14-27-33-v2.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/16/2023-11-08_14-27-33-v2.png\" alt=\"Inspector CICD - add Jenkins step\" width=\"400\" height=\"402\" /></a></p> \n<p>I configure the step with the <strong>IAM Role</strong> I created (or an AWS access key and secret access key when running on premises), my <strong>Docker Credentials</strong>, the <strong>AWS Region</strong>, and the <strong>Image Id</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/08/2023-11-08_14-27-44.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/08/2023-11-08_14-27-44.png\" alt=\"Inspector CICD - configure jenkins plugins\" width=\"800\" height=\"461\" /></a></p> \n<p>When Amazon Inspector detects vulnerabilities, it reports them to the plugin. The build fails, and I can view the details directly in Jenkins.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/08/2023-11-08_14-28-01-v2.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/08/2023-11-08_14-28-01-v2.png\" alt=\"Inspector CICD - findings in jenkins\" width=\"800\" height=\"420\" /></a></p> \n<p>The SBOM generation understands packages or applications for popular operating systems, such as Alpine, Amazon Linux, Debian, Ubuntu, and Red Hat packages. It also detects packages for Go, Java, NodeJS, C#, PHP, Python, Ruby, and Rust programming languages.</p> \n<p><strong><span>Detecting vulnerabilities on Amazon EC2 without installing agents (in preview)</span><br /> </strong>Finally, let’s talk about agentless inspection of your EC2 instances.</p> \n<p>Currently, Amazon Inspector uses <a href=\"https://aws.amazon.com/systems-manager/\">AWS Systems Manager</a> and the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-agent.html\">AWS Systems Manager Agent (SSM Agent)</a> to collect information about the inventory of your EC2 instances. To ensure Amazon Inspector can communicate with your instances, you have to ensure three conditions. First, a recent version of the SSM Agent is installed on the instance. Second, the SSM Agent is started. And third, you attached an IAM role to the instance to allow the SSM Agent to communicate back to the SSM service. This seems fair and simple. But it is not when considering large deployments across multiple OS versions, AWS Regions, and accounts, or when you manage legacy applications. Each instance launched that doesn’t satisfy these three conditions is a potential security gap in your infrastructure.</p> \n<p>With agentless scanning (in preview), Amazon Inspector doesn’t require the SSM Agent to scan your instances. It automatically discovers existing and new instances and schedules a vulnerability assessment for them. It does so by taking a snapshot of the instance’s EBS volumes and analyzing the snapshot. This technique has the extra advantage of not consuming any CPU cycle or memory on your instances, leaving 100 percent of the (virtual) hardware available for your workloads. After the analysis, Amazon Inspector deletes the snapshot.</p> \n<p>To get started, enable hybrid scanning under <strong>EC2 scanning settings</strong> in the Amazon Inspector section of the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>. Hybrid mode means Amazon Inspector continues to use the SSM Agent–based scanning for instances managed by SSM and automatically switches to agentless for instances that are not managed by SSM.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/05/2023-11-03_16-50-37.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/05/2023-11-03_16-50-37.png\" alt=\"Inspector enable hybrid scanning\" width=\"800\" height=\"429\" /></a></p> \n<p>Under <strong>Account management</strong>, I can verify the list of scanned instances. I can see which instances are scanned with the SSM Agent and which are not.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/05/2023-11-05_16-22-24-2.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/05/2023-11-05_16-22-24-2.png\" alt=\"Inspector list of instances monitored\" width=\"800\" height=\"510\" /></a></p> \n<p>Under <strong>Findings</strong>, I can filter by vulnerability, by account, by instance, and so on. I select by instance and select the agentless instance I want to review.</p> \n<p>For that specific instance, Amazon Inspector lists more than 200 findings, sorted by severity.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/05/2023-11-03_17-53-06.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/05/2023-11-03_17-53-06.png\" alt=\"Inspector list of findings\" width=\"800\" height=\"702\" /></a></p> \n<p>As usual, I can see the details of a finding to understand what the risk is and how to mitigate it.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/05/2023-11-03_17-54-06-2.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/05/2023-11-03_17-54-06-2.png\" alt=\"Inspector details of a finding\" width=\"800\" height=\"1626\" /></a></p> \n<p><strong><span>Pricing and availability</span><br /> </strong>Amazon Inspector code remediation for Lambda functions is available in ten Regions: US East (Ohio, N. Virginia), US West (Oregon), Asia Pacific (Singapore, Sydney, Tokyo), and Europe (Frankfurt, Ireland, London, Stockholm). It is available at no additional cost.</p> \n<p>Amazon Inspector agentless vulnerability scanning for Amazon EC2 is available in preview in three AWS Regions: US East (N. Virginia), US West (Oregon), and Europe (Ireland).</p> \n<p>The new API to scan containers at build time is available in <a href=\"https://docs.aws.amazon.com/general/latest/gr/inspector2.html\">the 21 AWS Regions where Amazon Inspector is available today</a>.</p> \n<p>There are no upfront or subscription costs. We charge on-demand based on the volume of activity. There is a price per EC2 instance or container image scan. As usual, <a href=\"https://aws.amazon.com/inspector/pricing/\">the Amazon Inspector pricing page</a> has the details.</p> \n<p>Start today by adding the Jenkins or TeamCity agent to your containerized application CI/CD pipelines or activate the agentless Amazon EC2 inspection.</p> \n<p><a href=\"https://console.aws.amazon.com/inspector\">Now go build</a>!</p> \n<a href=\"https://twitter.com/sebsto\">-- seb</a>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"f03f12032711cbe7c2ce300dd0b143b14e99747a747833003282e37061430aea","category":"Tech"}