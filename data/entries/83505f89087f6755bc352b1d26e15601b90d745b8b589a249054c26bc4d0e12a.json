{"title":"Red Hat Podman and HashiCorp Nomad integration matures","link":"https://www.hashicorp.com/blog/red-hat-podman-and-hashicorp-nomad-integration-matures","date":1702314000000,"content":"<p>One of the core goals of the HashiCorp Nomad team is to enable users to run workloads the way they like.</p>\n\n<p>That goal extends to the <a href=\"https://www.redhat.com/en/topics/containers/what-is-podman\">Red Hat Podman container engine</a> for running OCI Linux containers. Through community-driven efforts, running Podman tasks in Nomad has been possible with the Podman task driver plugin for some time. </p>\n\n<p>Thanks to recent community efforts, we’ve made progress maturing the Podman and Nomad integration for high-value applications and workflows. This post shares some of the new features of the Nomad-Podman integration.</p>\n\n<h2>The Nomad-Podman integration has matured</h2>\n\n<p>The latest enhancements to the Nomad-Podman integration add support for: </p>\n\n<ul>\n<li>Running Podman containers in task groups with bridge networking enabled</li>\n<li>Authentication options in the task driver config</li>\n<li>Specifying a credentials helper or external credentials configuration file for working with private registries (via Podman driver support)</li>\n</ul>\n\n<p>Although there is still work to be done, the progress made opens doors to new Podman use cases that were tedious, if not impossible, before.</p>\n\n<h2>Podman and Consul service mesh</h2>\n\n<p><a href=\"https://www.hashicorp.com/blog/nomad-1-7-improves-vault-and-consul-integrations-adds-numa-support\">Nomad 1.7</a>, released in GA this month, takes advantage of these developments to provide a more seamless experience when using <a href=\"https://developer.hashicorp.com/nomad/plugins/drivers/podman\">Podman</a> in conjunction with our HashiCorp Consul service mesh integration. </p>\n\n<p>Consul service mesh requires the use of an Envoy sidecar proxy for each task participating in</p>\n\n<p>the network mesh. Since its inception, the Nomad integration for Consul service mesh has defaulted to a Docker-specific task configuration for these Envoy sidecars. Now, Nomad will automatically detect if Podman is the most suitable task driver and generate an Envoy task configuration that runs Envoy as a Podman container. Job submitters no longer need to specify a custom <code>connect.sidecar_task</code> block. </p>\n\n<h2>Why use Podman instead of Docker?</h2>\n\n<p>There are substantial advantages to using Podman as a task driver instead of Docker:</p>\n\n<ul>\n<li>Podman does not require running <a href=\"https://docs.docker.com/engine/reference/commandline/dockerd/\"><code>dockerd</code></a> and <a href=\"https://containerd.io/\"><code>containerd</code></a> as root processes on every node. </li>\n<li>Podman makes clever use of <a href=\"https://systemd.io/\"><code>systemd</code></a> socket activation to launch containers. Most mainstream Linux distributions are based on systemd, providing widespread out-of-the-box support. </li>\n<li>Unlike Docker, Podman does not require pause containers to support the bridge networking use case</li>\n</ul>\n\n<p>Earlier in this post, we discussed how Envoy containers run alongside each Nomad task when using the Consul service mesh integration. With Docker, each task group with one of those Envoy containers actually requires a second sidecar — the pause container — which is necessary due to the special way Docker creates network namespaces. </p>\n\n<p>Since Podman works with the conventional network namespaces created and managed by the Nomad client, there is no need for that extra sidecar. In a cluster with thousands of tasks participating in a service mesh, the savings on CPU, memory, disk, and bandwidth can be significant.</p>\n\n<h2>More maturity on the way</h2>\n\n<p>These improvements to the Nomad-Podman integration story are only the beginning. Going forward, we intend to provide first-class support for rootless Podman, address outstanding bug reports, enhance our Podman integration test coverage, and update the plugin-packaging.</p>\n\n<p>To find out more about the Nomad-Podman integration, please visit our <a href=\"https://developer.hashicorp.com/nomad/plugins/drivers/podman\">Podman task driver page</a>.</p>\n","author":"Mike Nomitch","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"83505f89087f6755bc352b1d26e15601b90d745b8b589a249054c26bc4d0e12a","category":"Tech"}