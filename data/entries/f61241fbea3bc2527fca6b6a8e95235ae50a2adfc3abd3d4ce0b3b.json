{"title":"Putting Gears In Motion: Animating Cars With HTML And SVG","link":"https://smashingmagazine.com/2023/02/putting-gears-motion-animating-cars-with-html-svg/","date":1676552400000,"content":"<p>Hello! And if you like HTML, you‚Äôve come to the right place! </p>\n<p>I love HTML. As an old-school front-end developer, I think it‚Äôs a hugely underrated skill. I‚Äôve been writing HTML since ~2005, and today the browser alone can almost do all the things Flash could do nearly two decades ago!</p>\n<p>One such <em>trick</em> HTML now has is called <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateMotion\"><code>&lt;animateMotion&gt;</code></a> ‚Äî those familiar with Flash will remember this as <em>The Motion Guide</em>. I found this video from 14 years ago, but the method existed for a while before that:</p>\n<p> The idea is, you create a path for elements to follow‚Ä¶ and that‚Äôs it! </p>\n<p>Here‚Äôs an example of what you can do with <code>&lt;animateMotion&gt;</code>:</p>\n<ul>\n<li>üöÄ <a href=\"https://animate-motion-race-cars.vercel.app/\">Live Preview</a></li>\n<li>‚öôÔ∏è <a href=\"https://github.com/PaulieScanlon/animate-motion-race-cars\">Repository</a></li>\n</ul>\n<p>If you take a look at the <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateMotion#example\">MDN Docs</a>, you‚Äôll see a simple example of a red circle following a path on an infinite loop. The race cars in the live preview follow the same simple rules, and it works just like this!</p>\n<a href=\"https://animate-motion-race-cars.vercel.app/\"><img src=\"https://smashing-files.ams3.digitaloceanspaces.com/articles/animate-race-cars-using-html/race-cars-animation.gif\" /></a>A simple example of what can be achieved using <code>animateMotion</code>. (<a href=\"https://animate-motion-race-cars.vercel.app/\">See animation</a>)\n\n\n\nSVG Using <code>animateMotion</code>\n<p>Here‚Äôs a <a href=\"https://animate-motion-race-cars.vercel.app/simple-version.html\">simplified version</a> which I'll use to explain some of the finer details.</p>\n<p><strong>Note</strong>: <em>I‚Äôve removed some of the path values for brevity, but you can see  <code>src</code> for the below snippet at <a href=\"https://github.com/PaulieScanlon/animate-motion-race-cars/blob/main/simple-version.html\">simple-version.html</a>.)</em></p>\n<div>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Simple Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;main&gt;\n      &lt;svg viewBox=\"0 0 307 184\" xmlns=\"<a href=\"http://www.w3.org/2000/svg&quot;\">http://www.w3.org/2000/svg\"</a>&gt;\n        &lt;g id=\"track\"&gt;\n          &lt;g id=\"track-lines\"&gt;\n            &lt;path fill=\"none\" stroke=\"#facc15\" d=\"M167.88,111.3...\" /&gt;\n          &lt;/g&gt;\n\n          &lt;g id=\"pink-car\"&gt;\n            &lt;animateMotion dur=\"4s\" repeatCount=\"indefinite\" rotate=\"auto\" path=\"M167.88,111.3...\" /&gt;\n            &lt;path fill=\"#EC4899\" d=\"M13.71,18.65c0.25-0.5...\" /&gt;\n          &lt;/g&gt;\n        &lt;/g&gt;\n      &lt;/svg&gt;\n    &lt;/main&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</div>\n\n<p>The first thing to look at is the <code>&lt;g&gt;</code> element with the <code>id</code> of <code>track-lines</code>. This is the yellow dashed line that represents the path the car will follow.</p>\n<p>You‚Äôll also see another <code>&lt;g&gt;</code> element with the <code>id</code> of <code>pink-car</code>. Within this group is the <code>&lt;animateMotion&gt;</code> element. It has an attribute of <code>path</code>. The numbers used to form this path are the same as the numbers that form the <code>track-lines</code>. An <code>&lt;animateMotion&gt;</code> element is invisible, and its only purpose is to provide a path for an element to follow.</p>\n<p>Speaking of which, below the <code>&lt;animateMotion&gt;</code> element is another <code>&lt;path&gt;</code> element, this is the pink car, and it will follow the path of its nearest neighbor.</p>\n<code>animateMotion</code> Attributes\n<p>There‚Äôs some additional attributes that the <code>&lt;animateMotion&gt;</code> element accepts; these are as follows:</p>\n<ul>\n<li><code>dur</code>: The duration of the animation.</li>\n<li><code>repeatCount</code>: The number of times the animation should loop.</li>\n<li><code>rotate</code>: This can be considered as an orientation to the path. It will ensure the element that‚Äôs animating around the path always faces the direction of travel.</li>\n<li><code>path</code>: As explained, this is the actual path an element will follow.  </li>\n</ul>\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateMotion#example\">MDN Docs</a> show the <code>&lt;animateMotion&gt;</code> element as a child of an Svg <code>&lt;circle&gt;</code> shape e.g:</p>\n<pre><code>&lt;circle r=\"5\" fill=\"red\"&gt;\n  &lt;animateMotion\n    dur=\"10s\"\n    repeatCount=\"indefinite\"\n    path=\"M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z\" /&gt;\n&lt;/circle&gt;\n</code></pre>\n\n<p>Whilst this approach works for shapes, it will only work if the element can accept a child. The SVG path element can‚Äôt, so wrapping everything in the <code>&lt;g&gt;</code> element allows HTML to work out where the coordinate system should start and which elements should follow the path. Sneaky ay!</p>\n<p>And that‚Äôs it. I designed the track and the other elements seen on the <a href=\"https://animate-motion-race-cars.vercel.app/\">preview link</a> in Adobe Illustrator and exported the whole thing as an SVG. I then did a little bit of manual refactoring to ensure the cars were adjacent to an <code>&lt;animateMotion&gt;</code> element. Et voil√†! A race track!</p>\nAccessibility\n<p>One small snag, the <code>&lt;animateMotion&gt;</code> element doesn‚Äôt natively observe <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\">prefers-reduce-motion</a>. To work around this in the preview I've added a <a href=\"https://github.com/PaulieScanlon/animate-motion-race-cars/blob/main/index.html#L17\">media query</a> that sets any element with the class name of <code>car</code> to <code>display: none;</code>. Not ideal, but it is at least motion safe!</p>\n<p>I hope you‚Äôve enjoyed this post, and if you have any questions, please come and find me on Twitter. <a href=\"https://twitter.com/PaulieScanlon\">@PaulieScanlon</a>, oh and if you‚Äôre a better illustrator than I am, please, feel free to re-design the race track and cars, and I‚Äôll be happy to convert it into code!  </p>\n<p>See you around the internet!</p>\n<h3>Further Reading On SmashingMag</h3>\n<ul>\n<li>‚Äú<a href=\"https://www.smashingmagazine.com/2021/10/real-time-multi-user-game/\">How To Build A Real-Time Multi-User Game From Scratch</a>,‚Äù Martin Grubinger</li>\n<li>‚Äú<a href=\"https://www.smashingmagazine.com/2023/01/svg-customization-animation-practical-guide/\">Easy SVG Customization And Animation: A Practical Guide</a>,‚Äù Adrian Bece</li>\n<li>‚Äú<a href=\"https://www.smashingmagazine.com/2021/10/composable-css-animation-vue-animxyz/\">Composable CSS Animation In Vue With AnimXYZ</a>,‚Äù Ejiro Asiuwhu</li>\n<li>‚Äú<a href=\"https://www.smashingmagazine.com/2022/11/guide-keyboard-accessibility-html-css-part1/\">A Guide To Keyboard Accessibility: HTML And CSS (Part 1)</a>,‚Äù Cristian D√≠az</li>\n</ul>","author":"","siteTitle":"Articles on Smashing Magazine ‚Äî For Web Designers And Developers","siteHash":"f300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"f61241fbea3bc2527fca6b6a8e95235ae50a2adfc3abd3d4ce0b3b","category":"Tech"}