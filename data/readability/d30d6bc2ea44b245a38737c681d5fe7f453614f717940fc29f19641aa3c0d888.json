{"title":"สรุปการแบ่งปันเรื่องของการเขียน code ที่น่าจะดีขึ้น","link":"https://www.somkiat.cc/sharing-on-better-coding/","date":1628351297000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header><div><p><time>August 7, 2021</time> <span><a href=\"https://www.somkiat.cc/category/programming/\" rel=\"category tag\">Programming</a></span></p></div></header><div><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/08/clean-code.png\" alt=\"\" width=\"557\" height=\"384\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/08/clean-code.png 942w, https://www.somkiat.cc/wp-content/uploads/2021/08/clean-code-300x207.png 300w, https://www.somkiat.cc/wp-content/uploads/2021/08/clean-code-768x531.png 768w\" sizes=\"(max-width: 557px) 100vw, 557px\"></figure><p>มีโอกาสได้แบ่งปันประสบการณ์ ของการเขียน program อีกครั้ง<br>จึงคิดว่า จะแบ่งปันเรื่องพื้นฐานดีกว่า (พอดีทำเป็นแต่เรื่องพื้นฐาน)<br>นั่นก็คือ การเขียน code ที่น่าจะดีขึ้นกว่าเดิม ไม่มากก็น้อย<br>ประกอบด้วยแนวคิดต่าง ๆ เหล่านี้<br>น่าจะพอมีประโยชน์บ้าง</p><p><strong>เรื่องที่ 1 ในแต่ละ method พยายามเขียน code ให้ชิดซ้าย</strong></p><p>นั่นคือลดการเขียน code ที่มี condition ซ้อนกันไปเรื่อย ๆ<br>หรือมี indentation ลึกเข้ามาเรื่อย ๆ<br>ทำให้แต่ละ method ทำงานไม่เยอะ<br>น่าจะทำให้อ่านเข้าใจง่ายมากยิ่งขึ้น</p><p><strong>เรื่องที่ 2 อย่าใช้ . เยอะ เช่น A.B.C ไปเรื่อย ๆ</strong></p><p>แบบนี้จะมีปัญหาเยอะมาก ๆ เมื่อมีการเปลี่ยนแปลง<br>นั่นคือ เพื่อให้ลดผลกระทบ<br>รวมทั้งเป็นการซ่อน implementation ที่ดี</p><p><strong>เรื่องที่ 3 เรื่องการตั้งชื่อ ต้องสื่อสารให้ชัดเจน</strong></p><p>แน่นอนว่า ชื่อหรือคำ ต้องสัมพันธ์กับ requirement หรือ business</p><p><strong>เรื่องที่ 4 ขนาดของ file/class/method ต้องไม่เยอะ</strong></p><p>อาจจะต้องกำหนดร่วมกัน เช่น<br>ถ้าเกิน 100 บรรทัด มันเริ่มมีปัญหาไหม ?</p><p><strong>เรื่องที่ 5 ควรต้องใช้ fail fast หรือ early return ใน method</strong></p><p>ในการเขียน code แต่ละ method นั้น<br>เพื่อแยกส่วนการทำงานระหว่าง<br>การทำงานหลัก และ การตรวจสอบ (validation) ออกจากกัน<br>แนะนำให้ทำการตรวจสอบสิ่งที่ไม่ตรงเงื่อนไขออกไปก่อน<br>สุดท้ายเหลือไว้เพียง การทำงานหลัก</p><p><strong>เรื่องที่ 6 จำนวน instance variable ของแต่ละ class ต้องไม่เยอะ</strong></p><p>ยกตัวอย่างเช่น ไม่เกิน 2-3 ตัว<br>เป้าหมายเพื่อลดจำนวนของ dependency ของ class นั้น ๆ ลงไป</p></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"d30d6bc2ea44b245a38737c681d5fe7f453614f717940fc29f19641aa3c0d888","category":"Thai"}