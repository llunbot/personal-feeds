{"title":"New – Real-User Monitoring for Amazon CloudWatch","link":"https://aws.amazon.com/blogs/aws/cloudwatch-rum/","date":1638204307000,"content":"<p>Way back in 2009 I wrote a blog post titled <a href=\"https://aws.amazon.com/blogs/aws/new-aws-load-balancing-automatic-scaling-and-cloud-monitoring-services/\">New Features for Amazon EC2: Elastic Load Balancing, Auto Scaling, and Amazon CloudWatch</a>. In that post I talked about how <a href=\"https://aws.amazon.com/cloudwatch/\">Amazon CloudWatch</a> helps you to build applications that are highly scalable and highly available, and noted that it gives you cost-effective real-time visibility into your metrics, with no deployment and no maintenance. Since that launch, we have added many new features to CloudWatch, all with that same goal in mind. For example, last year I showed you how you could <a href=\"https://aws.amazon.com/blogs/aws/new-use-cloudwatch-synthetics-to-monitor-sites-api-endpoints-web-workflows-and-more/\">Use CloudWatch Synthetics to Monitor Sites, API Endpoints, Web Workflows ,and More</a>.</p> \n<p><span><strong>Real-User Monitoring (RUM)</strong></span><br /> The next big challenge (and the one that we are addressing today) is monitoring web applications with the goal of understanding performance and providing an optimal experience for your users. Because of the number of variables involved—browser type, browser configuration, user location, connectivity, and so forth—synthetic testing can only go so far. What really matters to your users is the experience that <em>they</em> receive, and that’s what we want to help you to deliver!</p> \n<p>Amazon CloudWatch RUM will help you to collect the metrics that give you the insights that will help you to identity, understand, and improve this experience. You simply register your application, add a snippet of JavaScript to the header of each page, and deploy. The snippet runs when your users step through each page of your application, and sends the data to RUM for consolidation and analysis. You can use this tool on its own, and in conjunction with both <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html\">Amazon CloudWatch ServiceLens</a> and <a href=\"https://aws.amazon.com/x-ray/\">AWS X-Ray</a>.</p> \n<p><span><strong>CloudWatch RUM in Action</strong></span><br /> To get started, I open the CloudWatch Console and navigate to RUM. Then I click <strong>Add app monitor</strong>:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/rum_splash_3.png\" /></p> \n<p>I give my monitor a name and specify the domain that hosts my application:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/rum_mon_step1_4.png\" /></p> \n<p>Then I choose the events that I want to monitor &amp; collect, and specify the percentage of sessions. My personal blog does not get a lot of traffic, so I will collect all of the sessions. I can also choose to store data in <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/WhatIsCloudWatchLogs.html\">Amazon CloudWatch Logs</a> in order to keep it around for more than the 30 days provided by CloudWatch RUM:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/rum_mon_step2_3.png\" /></p> \n<p>Finally, I opt to create a new Cognito identy pool, and add a tag. If I want to use CloudWatch ServiceLens and X-Ray, I can expand <strong>Active tracing</strong> and enable XRay. My app does not make any API requests, so I will not do that. I finish by clicking <strong>Add app monitor</strong>:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/rum_mon_step3_3.png\" /></p> \n<p>The console then shows me the JavaScript code snippet that I need to insert into the <code>&lt;head&gt;</code> element of my application:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/rum_code_2.png\" /></p> \n<p>I save the snippet, click <strong>Done</strong>, and then edit my application (my somewhat neglected <a href=\"http://jeff-barr.com/\">personal blog</a> in this case) to add the code snippet. I am using Jekyll, and added the snippet to my blog template:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/rum_putty_edit_1.png\" /></p> \n<p>Then I wait for some traffic to arrive. When I return to the RUM Console, I can see all of my app monitors. I click <strong>MonitorMyBlog</strong> to learn more:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/25/rum_mon_list_2.png\" /></p> \n<p>Then I can explore the aggregated timing data and the other information that has been collected. There’s far more than I have space to show today, so feel free to try this out on your own and do a deeper dive. Each of the tabs contains multiple filters and options to help you to zoom in on areas of interest: specific pages, locations, browsers, user journeys, and so forth.</p> \n<p>The <strong>Performance</strong> tab shows the vital signs for my application, followed by additional information:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/rum_perf_top_1.png\" /></p> \n<p>The vital signs are apportioned into three levels (Positive, Tolerable, and Frustrating):</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/rum_perf_ptf_1.png\" /></p> \n<p>The screen above contains a metric (largest contentful paint) that was new to me. As <a href=\"https://twitter.com/philwalton\">Philip Walton</a> explains it, “<a href=\"https://web.dev/lcp/\">Largest Contentful Paint</a> (LCP) is an important user-centered metric for measuring perceived load speed because it marks the point in the page load timeline when the page’s main content has likely loaded.”</p> \n<p>I can also see the time consumed by the steps that the browser takes when loading a page:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/rum_perf_steps_1.png\" /></p> \n<p>And I can see average load time by time of day:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/rum_perf_load_1.png\" /></p> \n<p>I can also see all of this information on a page-by-page basis:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/rum_perf_page_1.png\" /></p> \n<p>The <strong>Browsers &amp; Devices</strong> tab also shows a lot of interesting and helpful data. For example, I can learn more about the browsers that are used to access my blog, again with the page-by-page option:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/rum_browsers_1.png\" /></p> \n<p>I can also view the user journeys (page sequences) through my blog. Based on this information, it looks like I need to do a better job of leading users from one page to another:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/rum_journey_1.png\" /></p> \n<p>As I noted earlier, there’s a lot of interesting and helpful information here, and you should check it out on your own.</p> \n<p><span><strong>Available Now</strong></span><br /> CloudWatch RUM is available now and you can start using it today in ten AWS Regions: US East (N. Virginia), US East (Ohio), US West (Oregon), Europe (Ireland), Europe (London), Europe (Frankfurt), Europe (Stockholm), Asia Pacific (Sydney), Asia Pacific (Tokyo), and Asia Pacific (Singapore). You pay $1 for every 100K events that are collected.</p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"44c3cf75506321755ccce7125132c351f926492bebda61356d21d04e0f296ac3","category":"Tech"}