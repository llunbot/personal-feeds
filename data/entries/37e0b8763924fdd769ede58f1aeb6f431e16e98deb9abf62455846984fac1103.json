{"title":"Building an Event-Based HA Architecture with Nomad and Consul","link":"https://www.hashicorp.com/blog/building-an-event-based-ha-architecture-with-nomad-and-consul","date":1627326000000,"content":"<p><em>This guest post was written by Marcus Naughton, Founder of <a href=\"https://chatsight.ai/\">Chatsight</a>, a provider of modern and inclusive content-moderation infrastructure for social platforms.</em></p>\n<p>Chatsight provides low-latency and highly available content moderation services powered by artificial intelligence and delivered via an API. We’ve served 3.4 million requests since January 2021, with deployments across multiple cloud vendors and backed by services like Cloudflare. During that time, we’ve used HashiCorp Nomad and Consul to support our service and maximize uptime for our customers.</p>\n<h2><a href=\"#application-deployment-and-updates-are-critical\">»</a><a></a>Application Deployment and Updates Are Critical</h2>\n<p>Developing moderation tools takes an enormous amount of our time, but we can’t afford to neglect our need to deliver our application to consumers quickly. We make changes to our code frequently — sometimes we push a dozen updates live per day. This presents a problem — content moderation is a sensitive task that requires continuous fine-tuning, but how can we deploy updates rapidly without the risk of the constant change creating disturbances for our customers?</p>\n<p>Like many entrepreneurs and developers, we are confident in implementing business ideas with code, but have little experience in building and running a reliable application platform to deliver our solutions to end users. HashiCorp Nomad and Consul gave us a simple architecture to build and operate as well as an easy experience to update applications. That lets us ship and iterate our products faster.</p>\n<h2><a href=\"#starting-from-scratch-with-containers\">»</a><a></a>Starting from Scratch with Containers</h2>\n<p>On my earlier projects, I relied heavily on approaches like <a href=\"https://systemd.io/\">systemd</a> that became increasingly difficult to manage at scale. Updates had to be pushed by restarting the service, which created blackouts while the runtime stopped and started. I knew I had to find a better approach and eventually I settled on using containers. But containers seemed really alien to me: “How do you even run these things?”</p>\n<p>After coming to grips with creating container-based applications, my next step was to learn how to deliver and deploy these containers. I tried using Kubernetes, but while this approach was definitely viable, I felt out of my depth. The overhead of learning and maintaining Kubernetes was too much of a time sink. In addition, high availability was not a default Kubernetes offering.</p>\n<p>Although I had a decent knowledge of natural language processing (NLP) and machine learning (ML) development when I started building Chatsight, I knew absolutely nothing about how production teams develop and deploy changes and updates. The Chatsight platform API reacts in about 2/10ths of a second from the moment it receives a request, so it has to be constantly available to service our customers’ live stream chats, as well as other customers who hit our API every second.</p>\n<p>So I was left with a real challenge: How do I start orchestrating containers without having to learn Kubernetes from scratch, when I really had no understanding of how productionized application development worked?</p>\n<h2><a href=\"#enter-nomad-and-consul\">»</a><a></a>Enter Nomad and Consul</h2>\n<p>With all of this in mind, <a href=\"https://www.nomadproject.io/\">HashiCorp Nomad</a> turned out to be an amazing way to offload this responsibility without incurring much technical debt. We rely on Nomad to safely deploy new containers to our clusters, ensuring they are healthy and eliminating downtime with native <a href=\"https://learn.hashicorp.com/tutorials/nomad/job-rolling-update\">rolling updates</a>.</p>\n<p>Similarly, after relying on load balancers from the cloud service providers, we didn’t initially realize that another tool — <a href=\"https://www.consul.io/\">HashiCorp Consul</a> — could provide a solution to our growing <a href=\"https://www.consul.io/use-cases/service-discovery-and-health-checking\">service discovery</a> headaches.</p>\n<p>Essentially, Consul’s service discovery capabilities tell Nomad when a container is updated, and Nomad will immediately provision new containers, notify Consul of the change, and deploy our update without ever interrupting our service to our customers.</p>\n<p>Having service discovery automatically managed by Consul and Nomad was a massive help in reducing our reliance on cloud load balancers. We now use a dedicated <a href=\"http://www.haproxy.org/\">HAProxy</a> instance to route our users API requests, with DNS-based service discovery provided by Consul.</p>\n<h2><a href=\"#deploying-and-controlling-nomad\">»</a><a></a>Deploying and Controlling Nomad</h2>\n<p>When we began deploying Nomad, it was amazing to see that it supported the ability to connect with other nodes automatically in our cloud environments, and allowed us to easily join new servers to the cluster without having to manually make them aware of each other first. At the same time, Nomad simplified our VM architecture by reducing the number of wasteful standby nodes. Now, when a machine goes down, the containers lost are replaced immediately on another suitable node in the cluster, with minimal downtime.</p>\n<p>When we needed greater control over Nomad, we found its highly detailed API gave us exact control over what was running. This let us create tools to customize Nomad into exactly what we needed it to be.</p>\n<p>For example, we use an internal tool, Sarif, as a broker for Nomad. This lets us expose Nomad to application-level code triggered by events from runtimes like Node.js. This allowed us, for example, to offer audio moderation on demand, creating a container in reaction to an API request. Additionally, we rely on Nomad to routinely manage intensive natural-language batch processing tasks when signaled by Sarif.</p>\n<h2><a href=\"#empowered-by-nomad\">»</a><a></a>Empowered by Nomad</h2>\n<p>We’ve been empowered by having access to an application orchestrator like Nomad that natively supports anything we’ve asked of it, even allowing us to build onto it where and when we needed to. This frees up time spent on application deployment and lets us invest that effort into product development to help drive the business.</p>\n<p>Clearly, Chatsight has benefited greatly from the simplified experience offered by Nomad and Consul. It allowed us to create the event-based architecture that powers our entire platform, and to maintain 100% uptime since January 2021 while processing millions of comments and pushing updates live on a daily basis.</p>\n<p><em>Editor’s note: If you’ve never deployed apps with HashiCorp Nomad, watch this demo showing you <a href=\"https://www.hashicorp.com/resources/deploy-your-first-application-with-nomad-in-20-mins\">how to deploy your first application with Nomad in 20 minutes</a>.</em></p>","author":"Marcus Naughton","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"37e0b8763924fdd769ede58f1aeb6f431e16e98deb9abf62455846984fac1103","category":"Tech"}