{"title":"ทำความรู้จักกับ Kamal หรือ MRSK ของ 37Signals","link":"https://www.somkiat.cc/hello-kamal/","date":1698217644000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2023/10/user-to-container-150x150.jpg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2023/10/user-to-container-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2023/10/user-to-container-75x75.jpg 75w\" /></p>\n<p>สำหรับสาย tech น่าจะเคยได้ยินข่าวที่ทาง 37Signals<br />หรือบริษัทที่สร้าง Basecamp และ HEY นั้น<br />ได้<a href=\"https://world.hey.com/dhh/we-stand-to-save-7m-over-five-years-from-our-cloud-exit-53996caa\" target=\"_blank\">ทำการย้ายระบบงานจาก Cloud กลับมายัง On-premise</a><br />ซึ่งช่วยลดค่าใช้จ่ายลงมาอย่างมาก</p>\n\n\n\n<span></span>\n\n\n\n<p><strong><em>ปล. ไม่ใช่บอกว่าระบบที่ใช้งาน Cloud จะไม่ดี<br />เพราะว่าในการเริ่มต้นนั้นจะสะดวกสบายมากขึ้น<br />สามารถลดการดูแลรักษา hardware รวมถึงการ scale ด้วย<br />แต่เมื่อถึงจุดหนึ่งก็ต้องมีการปรับเปลี่ยนเป็นธรรมดา</em></strong></p>\n\n\n\n<p>โดยทาง <strong>37Signals</strong> ก็ยังใช้แนวคิดเช่นเดิม เพิ่มเติมคือย้ายมาดูแลเอง<br />เนื่องจากคำนวณหลาย ๆ อย่างแล้ว จะลดค่าใช้จ่ายลงมา<br />และปรับปรุงประสิทธิภาพของระบบงานอีกด้วย<br />ซึ่งสอดคล้องกับ business ที่ทำอยู่</p>\n\n\n\n<p><strong>ในการย้ายครั้งนี้ ได้สร้างเรื่องมือที่ชื่อว่า <a href=\"https://kamal-deploy.org/\" target=\"_blank\">Kamal</a> หรือ MRSK มาใช้งาน</strong></p>\n\n\n\n<p>เป็นเครื่องมือสำหรับการ deploy ระบบงาน<br />ในรูปแบบของ container นั่นเอง<br />มีเครื่องมือที่ใช้ดังนี้</p>\n\n\n\n<ul>\n<li>Docker</li>\n\n\n\n<li><a href=\"https://doc.traefik.io/traefik/\" target=\"_blank\">Traefix</a> ทำตัวเป็น reverse proxy และ load balance รวมทั้งช่วยในการ rollout อีกด้วย</li>\n</ul>\n\n\n\n<p><strong>แสดงโครงสร้างดังรูป</strong></p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/10/user-to-container.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/10/user-to-container.jpg\" width=\"595\" height=\"282\" /></a></figure>\n\n\n\n<p><strong>ในการ deploy นั้นจะมีขั้นตอนดังนี้</strong></p>\n\n\n\n<ul>\n<li>ทำการสร้าง docker image ปกติ จากนั้นทำการ push ไปยัง Docker container registry</li>\n\n\n\n<li>ทีม deploy ทำการ ssh เข้าไปยัง server ที่จะ deploy</li>\n\n\n\n<li>ทำการ deploy ผ่าน kamal command line</li>\n\n\n\n<li>เครื่อง server อย่างต่ำมี 2 เครื่อง คือ Application และ Database (stateless และ stateful)</li>\n\n\n\n<li>โดยมา Traefik มาคั่นอยู่หน้า application เพื่อ route traffic จาก user เข้ามานั่นเอง ถ้าต้องการ scale ก็สามารถนำ load balance มาไว้ข้างหน้าอีกที ซึ่ง Kamal ไม่สนับสนุน ต้องทำเอง</li>\n</ul>\n\n\n\n<p>แสดงดังรูป</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/10/2servers.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/10/2servers.jpg\" width=\"582\" height=\"417\" /></a></figure>\n\n\n\n<p>ลืมบอกไปว่า Kamal พัฒนาด้วย Ruby นะครับ ดังนั้นการติดตั้งจะผ่าน gem นั่นเอง<br />หรือทำการ alias ผ่าน docker ได้เลย<br />ดูได้จาก <a href=\"https://kamal-deploy.org/docs/installation\" target=\"_blank\">installation document</a></p>\n\n\n\n<p><strong>ในการ deploy ก็ทำการสร้างไฟล์ config ในรูปแบบของ YAML ดังนี้</strong></p>\n\n\n\n<ul>\n<li>สนับสนุนไฟล์ <a href=\"https://github.com/bkeepers/dotenv\" target=\"_blank\">.env</a></li>\n\n\n\n<li>สนับสนุน environment variable ของ OS</li>\n\n\n\n<li>กำหนด role ของ server ได้ ว่าจะเป็น web หรือ job schedule หรือจะใช้งาน Traefik หรือไม่</li>\n\n\n\n<li>สามารถ custom script ต่าง ๆ ผ่าน <a href=\"https://kamal-deploy.org/docs/hooks\" target=\"_blank\">Hooks</a> ที่เตรียมไว้ให้ได้ ว่าแต่ละจุดต้องการให้ทำอะไรเพิ่มเติม</li>\n</ul>\n\n\n\n[gist id=\"f3e6f740b6513d7bd0a1b349c0c735c4\" file=\"1.yml\"]\n\n\n\n<p>จากแนวทางนี้ทาง Kamal จะเรียกว่า <br />การ deploy จาก bare metal มายัง Cloud VMs นั่นเอง<br />ช่วยทำให้เกิดมาตรฐานของการพัฒนา และ  deploy ระบบงาน<br />เป็นกรอบการทำงานหนึ่งที่น่าสนใจ<br />ที่ถูกสร้างขึ้นมาตามความต้องการของ 37Signal นั่นเอง<br />แต่ก็เป็นแนวทางหนึ่ง ที่เราสามารถนำมาต่อยอดได้เช่นกัน</p>\n\n\n\n<p><strong><em>ทั้งเรื่องของ Zero-downtime deployment<br />ทั้งเรื่องของ Rolling restart<br />ทั้งเรื่องของ Service management<br />โดยใช้ผ่าน Docker ทั้งหมด</em></strong></p>\n\n\n\n<p>ลองศึกษาและใช้งานกันดูครับ</p>\n\n\n\n<p><strong>Reference Websites</strong></p>\n\n\n\n<ul>\n<li><a href=\"https://semaphoreci.com/blog/mrsk\" target=\"_blank\">Breaking Free From the Cloud With Kamal: Just Enough Orchestration for Your Apps</a></li>\n</ul>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"b0d577ccb2a00a19f117a2cb68ee4fe5b5038827031dbd4213a4a051e0a7ea5b","category":"Thai"}