{"title":"บันทึกการแบ่งปันเรื่อง Automated Testing with Cypress","link":"https://www.somkiat.cc/note-automated-testing-with-cypress/","date":1722862809000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/08/course-cypress-2024-150x150.jpg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/08/course-cypress-2024-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2024/08/course-cypress-2024-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/08/course-cypress-2024.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/08/course-cypress-2024-1024x615.jpg\" width=\"547\" height=\"328\" /></a></figure>\n\n\n\n<p>สรุปจากการแบ่งปันเรื่อง Automated testing with Cypress เป็นเวลา 2 วัน<br />เป็นการเขียน test script ด้วย <a href=\"https://www.cypress.io/\" target=\"_blank\">Cypress</a> เป็นภาษา JavaScript<br />โดยสิ่งที่แบ่งปันเป็นดังนี้</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>เริ่มด้วยการติดตั้ง และ สร้าง repository สำหรับเก็บ test script</strong></p>\n\n\n\n<p>ประกอบไปด้วย 2 แนวทางคือ</p>\n\n\n\n<ul>\n<li>แยก repository ออกมาจาก code</li>\n\n\n\n<li>ใช้ repository เดียวกันกับ code ไปเลย</li>\n</ul>\n\n\n\n<p>ขึ้นอยู่กับแนวทางที่ตกลงร่วมกัน<br />แต่ที่แนะนำคือ รวมกันไปเลย</p>\n\n\n\n<p><strong>ต่อมาทำการสร้าง project ด้วย cypress ปกติ</strong></p>\n\n\n\n<p>และแนะนำความสามารถของ Cypress UI หรือ Studio <br />ว่ามีความสามารถอะไรบ้างที่สำคัญ เช่น</p>\n\n\n\n<ul>\n<li>แนวทางในการทดสอบทั้ง unit, integration และ end-to-end test เพื่อให้เข้าใจ strategy ของการทดสอบ</li>\n\n\n\n<li>โครงสร้างของ Cypress project ว่าเป็นอย่างไร</li>\n\n\n\n<li>รูปแบบของการทดสอใน Cypress เช่น End-to-End, Component, API, Snapshot, Visual testing</li>\n\n\n\n<li>Auto testing</li>\n\n\n\n<li>การ debug</li>\n\n\n\n<li>การ record test script ผ่าน Cypress Studio ที่ยังคงเป็น experiment feature เท่านั้น แต่ใช้งานได้ดี</li>\n\n\n\n<li>การใช้งาน cypress playground เพื่อช่วยให้การ inspect และเขียน test script ง่ายขึ้น</li>\n\n\n\n<li>ตัวอย่างของ cypress ที่มือใหม่ต้องเรียนรู้ คือ <a href=\"https://example.cypress.io/\" target=\"_blank\">example.cypress.io</a></li>\n\n\n\n<li>ปรับปรุงให้ test step ใน UI และ report สวย ๆ อ่านง่าย เป็น step-by-step ด้วยการใช้งาน <a href=\"https://github.com/filiphric/cypress-plugin-steps\" target=\"_blank\">cypress-plugin-steps</a></li>\n\n\n\n<li>การ configuration ที่น่าสนใจในไฟล์ <strong>cypress.config.js/ts</strong> </li>\n\n\n\n<li>การทดสอบผ่าน command line รวมทั้ง parameter ต่าง ๆ</li>\n\n\n\n<li>การจัดการ network request เพื่อทำการ stub request ต่าง ๆ ที่ต้องการ</li>\n</ul>\n\n\n\n<p><strong>จากนั้นเริ่มให้ test script ด้วยภาษา JavaScript</strong></p>\n\n\n\n<ul>\n<li>เขียนแบบปกติ โดยใช้ cypress playground และ ตัว recorder ทั้งใน Cypress Studio และ extension ใน Google Chrome</li>\n\n\n\n<li>เริ่มทำการ refactor code ของ test script ด้วยการไปใช้ test life cycle, แยกเป็น function ย่อย ๆ, แยกไปเป็น class และ แยกไปเป็น command ต่อไป</li>\n\n\n\n<li>เพื่อให้ test script อ่านง่าย และเป็นมิตรขึ้นมา ด้วยการใช้งาน Cypress Cucumber ด้วยรูปแบบของ Gherkin มาช่วย ด้วย library ชื่อว่า <a href=\"https://github.com/badeball/cypress-cucumber-preprocessor\" target=\"_blank\">cypress-cucumber-processor</a> ซึ่งเปลี่ยนคน maintain แล้ว</li>\n\n\n\n<li>การจัดการ selector หรือ element บนหน้า web ที่ดีกว่าเป็นอย่างไร ลดการผูกมักกับหน้า web ลงไป</li>\n\n\n\n<li>การ assert หรือตรวจสอบผลการทำงาน ว่าเป็นไปตามที่เราคาดหวังหรือไม่</li>\n\n\n\n<li>การจัดการ test case เพื่อลด flaky test ลงไป</li>\n\n\n\n<li>การจัดกลุ่มของ test case ด้วย <a href=\"https://www.npmjs.com/package/cypress-tags\" target=\"_blank\">Cypress tags</a></li>\n\n\n\n<li>การสร้าง test report ในรูปแบบต่าง ๆ ทั้ง build-in, Mocha custom, JUnit, Allure และ Cucumber เป็นต้น</li>\n</ul>\n\n\n\n<p><strong>ทำการสร้าง pipeline ของ CI/CD</strong></p>\n\n\n\n<ul>\n<li>ออกแบบ pipeline ของขั้นตอนการทำงาน</li>\n\n\n\n<li>สร้าง pipeline โดยทำการทดสอบด้วย Cypress</li>\n\n\n\n<li>ใช้งาน <a href=\"https://docs.cypress.io/examples/docker\" target=\"_blank\">Cypress + Docker</a> สำหรับการทดสอบระบบงานตาม test case ที่เขียน</li>\n</ul>\n\n\n\n<p>เป็นการแนะนำสำหรับก้าวแรกของการใช้งาน Cypress<br />สำหรับเขียน test script เพื่อช่วยการทดสอบให้ง่ายและสะดวกขึ้น<br />ต่อจากนี้คือ การลงมือทำ เพื่อฝึกฝน และเพิ่มประสบการณ์ต่อไป<br />แต่เหนือสิ่งอื่นใดคือ <br />จะทดสอบอะไรบ้าง ?<br />เพิ่มความมั่นใจที่มีต่อระบบหรือไม่ ?</p>\n\n\n\n<p><br />ขอให้สนุกกับการทดสอบ และ coding</p>\n\n\n\n<p><br /></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"a4746e24e64f13e3476248d3c1634b69fbda64008115742a9c49fee62c3e4d7f","category":"Thai"}