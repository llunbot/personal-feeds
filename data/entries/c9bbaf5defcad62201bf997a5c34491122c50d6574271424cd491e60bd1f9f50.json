{"title":"New RCS Spec From GSM Association Adds E2EE; Both Apple and Google to Support It","link":"https://www.theverge.com/news/629620/apple-iphone-e2ee-encryption-rcs-messaging-android","date":1742076515000,"content":"\n<p>Jess Weatherbed, reporting for The Verge:</p>\n\n<blockquote>\n  <p>iPhone and Android users will be able to exchange end-to-end\nencrypted (E2EE) RCS messages in the near future thanks to newly\nupdated RCS specifications. <a href=\"https://www.gsma.com/newsroom/article/rcs-encryption-a-leap-towards-secure-and-interoperable-messaging/\">The GSM Association announced</a> that the\nlatest RCS standard includes E2EE based on the Messaging Layer\nSecurity (MLS) protocol, enabling interoperable encryption between\ndifferent platform providers for the first time. [...]</p>\n\n<p>“End-to-end encryption is a powerful privacy and security\ntechnology that iMessage has supported since the beginning, and\nnow we are pleased to have helped lead a cross industry effort to\nbring end-to-end encryption to the RCS Universal Profile published\nby the GSMA,” said Apple spokesperson Shane Bauer. “We will add\nsupport for end-to-end encrypted RCS messages to iOS, iPadOS,\nmacOS, and watchOS in future software updates.” [...]</p>\n\n<p>“We’ve always been committed to providing a secure messaging\nexperience, and Google Messages users have had end-to-end\nencrypted (E2EE) RCS messaging for years,” Google spokesperson Ed\nFernandez told The Verge. “We’re excited to have this updated\nspecification from GSMA and work as quickly as possible with the\nmobile ecosystem to implement and extend this important user\nprotection to cross-platform RCS messaging.”</p>\n</blockquote>\n\n<p>This is nothing but good news. But it’s wrong to frame this along Google’s lines, that they’ve been there waiting for Apple to support E2EE for RCS. They’ve been <a href=\"https://daringfireball.net/2024/02/eu_rcs_imessage\">waiting for Apple to support RCS <em>at all</em></a>, yes, and Google has also implemented their own <em>proprietary</em> E2EE layer for RCS. But until now, there was no E2EE specification in the open RCS spec. Now there is. That’s why it’s not just Android ↔︎ iOS RCS messaging that wasn’t able to use E2EE, but even Android ↔︎ Android, unless both devices were using Google’s own Messenger app.</p>\n\n<p>I have also noticed recently that Google Messages and Apple Messages now do a pretty good job of supporting each other’s tapbacks.</p>\n\n<p>What I’m most interested about with Apple’s implementation of RCS encryption is how they’ll indicate it visually in chats. It’s not going to be with blue bubbles. Blue means “iMessage”, not “encrypted” — it just happens to be that iMessage started as a protocol based on end-to-end encryption. There’s no such thing as a non-encrypted iMessage — it’s part of the protocol, and always has been. But what happens when new/updated Android phones support the new RCS encryption spec, and older devices don’t? A lock icon for the encrypted chats? If it were up to me, iOS would drop support for non-encrypted RCS — iOS should use RCS with E2EE for every device that supports it, and fall back to dumb old no-encryption-at-all SMS for all devices that do not.</p>\n\n<div>\n<a href=\"https://daringfireball.net/linked/2025/03/15/rcs-e2ee-apple-google\"> ★ </a>\n</div>\n\n\t","author":"John Gruber","siteTitle":"Daring Fireball","siteHash":"fc569638025dadf22a867470f8215f38855cf50e975782a6c989909474292a36","entryHash":"c9bbaf5defcad62201bf997a5c34491122c50d6574271424cd491e60bd1f9f50","category":"Tech"}