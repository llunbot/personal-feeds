{"title":"เรื่องรูปแบบของ caching data","link":"https://www.somkiat.cc/caching-policy/","date":1633686991000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/10/Screen-Shot-2564-10-08-at-16.50.24-150x150.png\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/10/Screen-Shot-2564-10-08-at-16.50.24-1024x561.png\" /></figure>\n\n\n\n<p>จาก blog ก่อนหน้านี้เรื่องของ <strong><a href=\"https://www.somkiat.cc/basic-of-caching/\" target=\"_blank\">caching data หรือข้อมูลชั่วคราว</a></strong><br />ช่วยทำให้การดึงหรือจัดการข้อมูลได้รวดเร็วขึ้น<br />รวมทั้งช่วยลดภาระงานต่าง ๆ ลงไปด้วย <br />(แต่ไปเพิ่มงานให้ที่อื่น)<br /><br />มีคำถามเรื่องรูปแบบของ caching data ว่าเป็นอย่างไรบ้าง ?<br />ขยายความเรื่องรูปแบบของ caching data<br />คือรูปแบบของการสร้างข้อมูลนั่นเองว่าเป็นอย่างไร<br />ยกตัวอย่างเช่น</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>ข้อมูลของ cacheing data จะเพิ่มขึ้นเรื่อย ๆ จากการใช้งาน</strong></p>\n\n\n\n<p>เช่นข้อมูลของผู้ใช้งาน จะถูกสร้างใน cached ก็ต่อเมื่อ<br />ผู้ใช้งานนั้นถูกเรียกใช้ทำให้ครั้งต่อไป<br />ไม่จำเป็นต้องไปดึงข้อมูลจาก database หลักอีก<br />ไปจนกว่าข้อมูลใน cache จะหายไป หรือ หมดอายุ<br />แบบนี้จะเรียกว่า เป็นการสร้าง cached <strong>แบบ Hot data หรือ incremental data</strong> นั่นเอง</p>\n\n\n\n<p><strong>ดูคร่าว ๆ แล้วเหมือนจะดี !!</strong><br />แต่เมื่อมีผู้ใช้งานจำนวนมาก ๆ เข้ามาใช้งานพร้อม ๆ กัน<br />ลองคิดดูว่าจะเกิดอะไรขึ้น ?<br />แน่นอนว่า ข้อมูลใน cached นั้นจะไม่มีเลย<br />ดังนั้นภาระจะไปตกอยู่กับ database และที่จัดเก็บข้อมูลหลัก<br />ซึ่งปัจจุบันก็มีปัญหาหรือเปล่านะ <br />ถ้าไม่มีปัญหาคงไม่ใช้ cached มั้ง ?</p>\n\n\n\n<p><strong>ดังนั้นเราจำเป็นต้องแก้ไขปัญหานี้เช่นกัน</strong><br />แต่ก็ต้องดูในเรื่องของ data workflow ด้วย ว่า<br />เป็นอย่างไร มิเช่นนั้นอาจจะก่อให้เกิดปัญหาตามมาได้</p>\n\n\n\n<p><strong>ตัวอย่างการแก้ไขปัญหานี้ก็เช่น การสร้าง cached ขึ้นมาก่อนจะถูกใช้งาน</strong></p>\n\n\n\n<p>เช่นการดึงข้อมูลทั้งหมด หรือ ข้อมูลที่คิดว่าจะถูกใช้งาน<br />นำข้อมูลมาจากประวัติการใช้งานก็ได้<br />ทำให้เมื่อผู้ใช้งานต้องการข้อมูลก็จะได้ข้อมูลจาก cached เร็วขึ้น<br />ประสิทธิภาพก็เร็วขึ้นแต่ก็ไม่ง่ายนะ !!<br />แบบนี้เราจะเรียกว่า การ<strong> Warm data</strong> นั่นเอง</p>\n\n\n\n<p><strong>ต่อมาข้อมูลใน cached มักจะมี expired time หรือวันหมดอายุ​</strong></p>\n\n\n\n<p>ก็จะทำให้ข้อมูลหาย และอาจจะหายเยอะ<br />ส่งผลต่อประสิทธิภาพของ cached ที่ลดลงอีกด้วย<br />และอาจจะกลับไปอยู่ในสถานการณ์แบบ Hot data ก็เป็นได้<br />ถ้ามีข้อมูลที่หมดอายุพร้อม ๆ กันจำนวนมาก</p>\n\n\n\n<p><strong>ดังนั้นจำเป็นต้องคิดวิธีจัดการ </strong><br />นั่นคือ เมื่อข้อมูลชุดใด ๆ ก็ตามจะหมดอายุระบบ cached ก็จะต้องไปดึงข้อมูลมาใหม่ <br />หรือ การ refresh ข้อมูลใน cached นั่นเอง<br />หรือทำการ <strong>reload caching data</strong> <br />อาจจะทำแบบ sync หรือ async ก็ได้</p>\n\n\n\n<p><strong><em>น่าจะทำให้เห็นรูปแบบการใช้งาน caching data มากยิ่งขึ้น</em></strong></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"d81ed39d3fa80e66974f8a33cd9dcafdc9c148fb8c3467b3d531c483a4fc33f8","category":"Thai"}