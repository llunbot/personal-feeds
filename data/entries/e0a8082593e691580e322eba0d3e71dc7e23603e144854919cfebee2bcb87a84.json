{"title":"HashiCorp Vault 1.15 adopts Microsoft Workload Identity Federation","link":"https://www.hashicorp.com/blog/hashicorp-vault-1-15-adopts-microsoft-workload-identity-federation","date":1696262400000,"content":"<p>Microsoft’s primary method for managing identities by workload has been Pod identity. However, the company’s Pod identity technology and workflows are being deprecated and will not be supported after December 2023. Microsoft will continue to support identity workflows with its <a href=\"https://learn.microsoft.com/en-us/azure/active-directory/workload-identities/workload-identity-federation\">Workload Identity Federation</a> (WIF) product, which was released as part of <a href=\"https://www.hashicorp.com/blog/vault-1-15-brings-ui-updates-pki-enhancements-new-betas-and-more\">Vault 1.15</a> to deepen Vault’s integration with MS Azure.</p>\n\n<p>In this post, we’ll take a deeper look at the advantages and caveats of WIF.</p>\n\n<h2>What is Workload Identity Federation (WIF)</h2>\n\n<p>In Azure, workload identities are assigned to software workloads such as an application, service, script, or container, to authenticate and access other services and resources.  WIF makes it easier for developers to access Azure resources from applications and services operating in Kubernetes or other cloud providers by removing the need for secrets in some scenarios. Developers can configure Azure AD applications and services to trust tokens issued by other identity providers, such as HashiCorp Vault. The tokens can then be leveraged to access resources in those applications.</p>\n\n<h2>Identity federation versus secrets</h2>\n\n<p>Developers creating applications that require secrets face several questions:</p>\n\n<p><strong>Where to store secrets?</strong>\n* Many secrets continue to be stored in an insecure manner, checked into repos or shared within collaboration tools. To securely manage secrets, developers need to leverage a vault.</p>\n\n<p><strong>How to mitigate password leakage?</strong>\n* It’s <a href=\"https://www.hashicorp.com/blog/why-we-need-dynamic-secrets\">not enough</a> to store your secrets securely. Secrets should be set to expire so they get rotated regularly.</p>\n\n<p><strong>How to reduce or eliminate service downtime associated with secrets rotation?</strong>\n* Developers need to leverage a management tool that facilitates secrets rotation while reducing the risk of downtime.</p>\n\n<p>WIF resolves these concerns and removes the need for developers to deal with the burden of secrets management; storing secrets securely and rotating them regularly. The secrets are managed by the Azure platform, simplifying the developer experience. However, workload identities have a few limitations:</p>\n\n<ul>\n<li>Only 20 federated credentials can be added to an identity. If more than 20 are required, you must use more identities.</li>\n<li>Federated tokens must be signed with <a href=\"https://auth0.com/docs/get-started/applications/signing-algorithms\">RS256</a>.</li>\n<li>Managed workload identities in certain regions will not support federated credentials, see the <a href=\"https://learn.microsoft.com/en-us/azure/active-directory/develop/workload-identity-federation\">Microsoft documents page</a> for the updated list.</li>\n</ul>\n\n<h2>Learn more about WIF</h2>\n\n<p>Microsoft’s Workload Identity Federation will continue to provide developers with a powerful tool to secure their applications and services. To learn more about workload identities, please visit our <a href=\"https://developer.hashicorp.com/vault/docs\">developer documentation</a>.</p>\n","author":"Rich Dubose","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"e0a8082593e691580e322eba0d3e71dc7e23603e144854919cfebee2bcb87a84","category":"Tech"}