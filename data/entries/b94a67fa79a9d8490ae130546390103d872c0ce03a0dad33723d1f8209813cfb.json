{"title":"ทำความรู้จักกับ Selenium WebDriver BiDi (Bidirectional) Protocol กันนิดหน่อย","link":"https://www.somkiat.cc/selenium-webdriver-bidi-with-intercept-request/","date":1738228036000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2025/01/bidi-01-150x150.jpg\" alt=\"\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2025/01/bidi-01-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2025/01/bidi-01-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2025/01/bidi-01.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2025/01/bidi-01.jpg\" alt=\"\" width=\"643\" height=\"328\" /></a></figure>\n\n\n\n<p>ใน Selenium WebDriver นั้นมีความสามารถใหม่ออกมาคือ <strong><a href=\"https://www.selenium.dev/documentation/webdriver/bidi/\" target=\"_blank\">Selenium WebDriver BiDi</a></strong><br />เป็นการนำเอาความสามารถของ <br />Selenium WebDriver มาผสมเข้ากัน CDP (Chrome DevTools Protocol)<br />นั่นคือ ทำการผ่าน <strong>websocket (JSON-over-WebSocket)</strong> ไม่ทำการแบบ synchronous เหมือนเดิมแล้ว<br />ทำให้การทำงานเร็วขึ้น ปัญหา flaky test น้อยลงไป<br />ควบคุม Web browser ได้ดีและมากขึ้น<br />โดยในความสามารถที่รอมานาน ซึ่ง Cypress และ Playwright ทำได้นานแล้ว<br />คือ <strong><a href=\"https://www.selenium.dev/documentation/webdriver/bidi/network/\" target=\"_blank\">Network Intercepter</a></strong></p>\n\n\n\n<span></span>\n\n\n\n<p><strong>โครงสร้างการทำงานแบบคร่าว ๆ ของ WebDriver แบบเดิม กับ WebSocket</strong></p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2025/01/bidi-02.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2025/01/bidi-02.jpg\" alt=\"\" width=\"591\" height=\"409\" /></a></figure>\n\n\n\n<p><strong>มาดูตัวอย่างการใช้งาน BiDi ใน Selenium กัน</strong></p>\n\n\n\n<p>มีขั้นตอนการทำงานดังนี้</p>\n\n\n\n<ul>\n<li>Enable BiDi ด้วยการเพิ่ม webSockerUrl=true เข้าไปใน option ของ web browser</li>\n\n\n\n<li>ต้องการ intercept หรือ ดักจับ request ที่ออกจาก web browser เพื่อทำการควบคุม response ให้เป็นไปตามที่ต้องการ ทั้ง success และ failure case ต่าง ๆ</li>\n</ul>\n\n\n\n<p><strong>ตัวอย่างเขียนด้วยภาษา Java + <a href=\"https://googlechromelabs.github.io/chrome-for-testing/\" target=\"_blank\">Chrome for Testing</a></strong></p>\n\n\n\n<ul>\n<li>ทำการ enable BiDi</li>\n\n\n\n<li>ทำการดักจับ request และส่ง response ที่ต้องการคือ Mock Hello World! กลับไปแทนของจริง</li>\n\n\n\n<li>ทำการตรวจสอบผลการแสดงผลในหน้า web ว่าเป็นไปตามที่คาดหวังหรือไม่</li>\n</ul>\n\n\n\n[gist id=\"f9d502b2ba739955140468a0323efa89\" file=\"SeleniumWithNetworkInterceptorTest.java\"]\n\n\n\n<p>เพียงเท่านี้ก็สามารถใช้งาน Selenium WebDriver BiDi แบบง่าย ๆ ได้แล้ว<br />ลองใช้งานกันดู</p>\n\n\n\n<p>สามารถดู code ตัวอย่างได้ที่ <a href=\"https://github.com/up1/demo-selenium-bidi\" target=\"_blank\">GitHub:Up1</a></p>\n\n\n\n<p>รูปแสดงการทำงานของ <a href=\"https://codoid.com/selenium-testing/an-introductory-guide-to-the-webdriver-bidi-protocol/\">BiDi</a> </p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2025/01/WebDriver-BiDi-Protocol_Page_2.png\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2025/01/WebDriver-BiDi-Protocol_Page_2-1024x512.png\" alt=\"\" width=\"614\" height=\"307\" /></a></figure>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"b94a67fa79a9d8490ae130546390103d872c0ce03a0dad33723d1f8209813cfb","category":"Thai"}