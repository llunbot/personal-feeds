{"title":"Amazon Aurora MySQL zero-ETL integration with Amazon Redshift is now generally available","link":"https://aws.amazon.com/blogs/aws/amazon-aurora-mysql-zero-etl-integration-with-amazon-redshift-is-now-generally-available/","date":1699392189000,"content":"<p>“<a href=\"https://aws.amazon.com/blogs/big-data/realizing-near-real-time-analytics-with-a-zero-etl-future/\">Data is at the center of every application, process, and business decision,</a>” wrote <a href=\"https://www.linkedin.com/in/swaminathansivasubramanian/\">Swami Sivasubramanian</a>, VP of Database, Analytics, and Machine Learning at AWS, and I couldn’t agree more. A common pattern customers use today is to build data pipelines to move data from <a href=\"https://aws.amazon.com/rds/aurora/\">Amazon Aurora</a> to <a href=\"https://aws.amazon.com/redshift/\">Amazon Redshift</a>. These solutions help them gain insights to grow sales, reduce costs, and optimize their businesses.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2023/06/19/bdb-2753-image001.png\" width=\"904\" height=\"309\" /></p> \n<p>To help you focus on creating value from data instead of preparing data for analysis, we <a href=\"https://aws.amazon.com/about-aws/whats-new/2022/11/amazon-aurora-zero-etl-integration-redshift/\">announced Amazon Aurora zero-ETL integration with Amazon Redshift</a> at AWS re:Invent 2022 and in <a href=\"https://aws.amazon.com/about-aws/whats-new/2023/06/amazon-aurora-mysql-zero-etl-integration-redshift-public-preview/\">public preview</a> for Amazon Aurora MySQL-Compatible Edition in June 2023.</p> \n<p><span><strong>Now generally available: Amazon Aurora MySQL zero-ETL integration with Amazon Redshift<br /> </strong></span>Today, we announced the general availability of Amazon Aurora MySQL zero-ETL integration with Amazon Redshift. With this fully managed solution, you no longer need to build and maintain complex data pipelines in order to derive time-sensitive insights from your transactional data to inform critical business decisions.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-0.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-0-1024x511.png\" width=\"1024\" height=\"511\" /></a></p> \n<p>This zero-ETL integration between Amazon Aurora and Amazon Redshift unlocks opportunities for you to run near real-time analytics and machine learning (ML) on petabytes of transactional data in Amazon Redshift. As this data gets written into Aurora, it will be available in Amazon Redshift within seconds.</p> \n<p>It also enables you to run consolidated analytics from multiple Aurora MySQL database clusters in Amazon Redshift to derive holistic insights across many applications or partitions. Amazon Aurora MySQL zero-ETL integration with Amazon Redshift processes over 1 million transactions per minute (an equivalent of 17.5 million insert/update/delete row operations per minute) from multiple Aurora databases and makes them available in Amazon Redshift in less than 15 seconds (p50 latency lag).</p> \n<p>Furthermore, you can take advantage of the analytics and built-in ML capabilities of Amazon Redshift, such as materialized views, cross-Region data sharing, and federated access to multiple data stores and data lakes.</p> \n<p><span><strong>Let’s get started</strong></span><br /> In this article, I’ll highlight some steps along with information on how you can get started easily. I will use my existing Amazon Aurora MySQL serverless database and Amazon Redshift data warehouse.</p> \n<p>To get started, I need to navigate to Amazon RDS and select <strong>Create zero-ETL integration</strong> on the <strong>Zero-ETL integrations</strong> page.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-2-1.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-2-1-1024x527.png\" width=\"1024\" height=\"527\" /></a></p> \n<p>On the <strong>Create zero-ETL integration </strong>page, I need to follow a few steps to configure the integration for my Amazon Aurora database cluster and my Amazon Redshift data warehouse.</p> \n<p>First, I define an identifier for my integration and select <strong>Next</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-3.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-3-1024x398.png\" width=\"1024\" height=\"398\" /></a></p> \n<p>On the next page, I need to select the source database by selecting <strong>Browse RDS databases</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-4.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-4-1024x501.png\" width=\"1024\" height=\"501\" /></a></p> \n<p>Here, I can select my existing database as the source.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/23/aurora-rs-zeroetl-9.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/23/aurora-rs-zeroetl-9-1024x357.png\" width=\"1024\" height=\"357\" /></a></p> \n<p>The next step asks me the target Amazon Redshift data warehouse. Here, I have the flexibility to choose the Amazon Redshift Serverless or RA3 data warehouse in my account or in different account. I select <strong>Browse Redshift data warehouses</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-5.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-5-1024x562.png\" width=\"1024\" height=\"562\" /></a></p> \n<p>Then, I choose the target data warehouse.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-6.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-6-1024x369.png\" width=\"1024\" height=\"369\" /></a></p> \n<p>Because Amazon Aurora needs to replicate into the data warehouse, we need to add an additional resource policy and add the Aurora database as an authorized integration source in the Amazon Redshift data warehouse.</p> \n<p>I can solve this by manually updating in the Amazon Redshift console or let Amazon RDS fix it for me. I tick the checkbox.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-5-1.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-5-1-1024x689.png\" width=\"1024\" height=\"689\" /></a></p> \n<p>On the next page, it shows me the changes that Amazon RDS will perform for us. I select <strong>Continue</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-6-1.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-6-1-1024x656.png\" width=\"1024\" height=\"656\" /></a></p> \n<p>On the next page, I can configure the tags and also the encryption. By default, zero-ETL integration encrypts your data using <a href=\"https://aws.amazon.com/kms/\">AWS Key Management Service (AWS KMS)</a>, and I have the option to use my own key.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-7.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-7-1024x626.png\" width=\"1024\" height=\"626\" /></a></p> \n<p>Then, I need to review all the configurations and select <strong>Create zero-ETL integration</strong> to create the integration.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-8.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/19/aurora-rs-zeroetl-8-769x1024.png\" width=\"769\" height=\"1024\" /></a></p> \n<p>After a few minutes, my zero-ETL integration is sucessfully created. Then, I switch to Amazon Redshift, and on the <strong>Zero-ETL integrations</strong> page, I can see that I have my recently created zero-ETL integration.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-10.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-10-1024x361.png\" width=\"1024\" height=\"361\" /></a></p> \n<p>Since the integration does not yet have a target database inside Amazon Redshift, I need to create one.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-11.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-11-1024x737.png\" width=\"1024\" height=\"737\" /></a></p> \n<p>Now the integration configuration is complete. On this page, I can see the integration status is active, and there is one table that has been replicated.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-12.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-12-1024x958.png\" width=\"1024\" height=\"958\" /></a></p> \n<p>For testing, I create a new table in my Amazon Aurora database and insert a record into this table.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-13.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-13-1024x593.png\" width=\"1024\" height=\"593\" /></a></p> \n<p>Then I switched to the <strong>Redshift</strong> <strong>query editor v2</strong> inside Amazon Redshift. Here I can make a connection to the database that I formed as part of the integration. By running a simple query, I can see that my data is already available inside Amazon Redshift.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-14.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/10/06/aurora-redshift-integration-14-1024x620.png\" width=\"1024\" height=\"620\" /></a></p> \n<p>I found this zero-ETL integration very convenient for two reasons. First, I could unify all data from multiple database clusters together and analyze it in aggregate. Second, within seconds of the transactional data being written into Amazon Aurora MySQL, this zero-ETL integration seamlessly made the data available in Amazon Redshift.</p> \n<p><span><strong>Things to know</strong></span></p> \n<p><strong>Availability</strong> – Amazon Aurora zero-ETL integration with Amazon Redshift is available in US East (Ohio), US East (N. Virginia), US West (Oregon), Asia Paciﬁc (Singapore), Asia Paciﬁc (Sydney), Asia Paciﬁc (Tokyo), Europe (Frankfurt), Europe (Ireland), and Europe (Stockholm).</p> \n<p><strong>Supported Database Engines</strong> – Amazon Aurora zero-ETL Integration with Amazon Redshift currently supports MySQL-compatible editions of Amazon Aurora. Support for Amazon Aurora PostgreSQL-Compatible Edition is a work in progress.</p> \n<p><strong>Pricing</strong> –  Amazon Aurora zero-ETL integration with Amazon Redshift is provided at no additional cost. You pay for existing Amazon Aurora and Amazon Redshift resources used to create and process the change data created as part of a zero-ETL integration.</p> \n<p>We’re one step closer to helping you focus more on creating value from data instead of preparing it for analysis. To learn more on how to get started, please visit the <a href=\"https://aws.amazon.com/rds/aurora/zero-etl/\">Amazon Aurora MySQL zero-ETL integration with Amazon Redshift</a> page.</p> \n<p>Happy integrating!<br /> — <a href=\"https://www.linkedin.com/in/donnieprakoso\">Donnie</a></p>","author":"Donnie Prakoso","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"97f54c00dd075d6719a2b2e07d47fa3d2d0954b024b1b549b18658de1df20c5c","category":"Tech"}