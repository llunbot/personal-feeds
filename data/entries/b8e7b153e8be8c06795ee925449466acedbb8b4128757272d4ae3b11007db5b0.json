{"title":"How To Use AI Tools To Skyrocket Your Programming Productivity","link":"https://smashingmagazine.com/2023/05/ai-tools-skyrocket-programming-productivity/","date":1683622800000,"content":"<p><em>Programming is fun.</em> At least, that’s the relationship I would love to have with programming. However, we all know that with the thrills and joys of programming, there comes a multitude of struggles, unforeseen problems, and long hours of coding. Not to mention — too much coffee.</p>\n<p>If only there were a way to cut out all of the menial struggles programmers face daily and bring them straight to the things they should be spending their energy on thinking and doing, such as critical problem-solving, creating better designs, and testing their creations.</p>\n<p>Well, in recent times, we’ve been introduced to exactly that.</p>\n<p>The start of this year marked the dawn of a huge shift towards Artificial Intelligence (AI) as a means of completing tasks, saving time, and improving our systems. There is a whole new realm of use cases with the rise of AI and its potential to seriously impact our lives in a positive manner.</p>\n<p>While many have concerns swirling about AI taking over jobs (and yes, programmers have been <a href=\"https://www.theverge.com/2022/2/2/22914085/alphacode-ai-coding-program-automatic-deepmind-codeforce\">raised up</a>), I take an entirely different perspective. I believe that <strong>AI has the ability to skyrocket your productivity in programming like nothing before</strong>, and over the last couple of months, I have been able to reap the benefits of this growing wave.</p>\n<p>Today, I want to share this knowledge with you and the ways that I have been using AI to supersize my programming output and productivity so that you’ll be able to do the same.</p>\nCase Study: ChatGPT\n<p>If you have missed much of the recent news, let me get you up to speed and share with you the main inspiration for this guide. In late November 2022, OpenAI announced its latest chatbot — ChatGPT, which took the world by storm with over a million sign-ups in its first week.</p>\n<p>It was an extremely powerful tool that had never been seen before, blowing people away with its capabilities and responses. Want a 30-word summary of a 1000-word article? Throw it in, and in a few seconds, you’ve just saved yourself a long read. Need an email sales copy for a programming book that teaches you how to code in O(1) speed, written in the style of Kent Beck? Again, it will be back to you in a few seconds. The list of <a href=\"https://www.misaias.com/chatgpt-uses-cases/\">ChatGPT use cases</a> goes on.</p>\n<p><img src=\"https://files.smashing.media/articles/ai-tools-skyrocket-programming-productivity/3-chatgpt-uncaught-typeerror.png\" /></p>\n<p>However, as a programmer, what really got me excited was ChatGPT’s ability to understand and write code. GPT-3, the model that ChatGPT runs on, has been trained on a wide range of text, including programming languages and code excerpts. As a result, it can generate code snippets and explanations within a matter of seconds.</p>\n<p>While there are many AI tools <a href=\"https://samanthabrandon.com/chatgpt-alternatives\">other than ChatGPT</a> that can help programmers boost their productivity, such as <a href=\"https://youchat.com/\">Youchat</a> and <a href=\"https://www.cogram.com/\">Cogram</a>, I will be looking at ChatGPT as the main tool for this guide, due to the fact that it is publicly available for free at <a href=\"https://beta.openai.com/overview\">OpenAI’s website</a> and that it has a very <strong>gentle learning curve for a wide range of applications</strong>.</p>\n<p>And again, before we continue, I would like to re-emphasize that </p>\n<p>AI tools such as ChatGPT are meant to streamline your workflow, not take over and replace your thinking and problem-solving.</p>\n<p>That being said, let’s see how I used ChatGPT to skyrocket my programming productivity.</p>\nCommon Problems And How ChatGPT Can Help\n<p>To help shine a light on this topic, I have compiled five of the most common ways that I have used ChatGPT to overcome problems that any programmer would experience daily. Those five problems are the following:</p>\n<ol>\n<li>Programmer’s block,</li>\n<li>Long hours of debugging,</li>\n<li>Understanding long documentation,</li>\n<li>Developer testing,</li>\n<li>Code optimization.</li>\n</ol>\n<p>It’s a lot to cover, but I’ll give you real-life examples so that you will be able to take the knowledge from this guide and use it to your own advantage. Let’s jump straight in.</p>\n<h3>Programmer’s Block</h3>\n<p>Programmer’s block is the programmer’s equivalent of writer’s block and is one of the most common problems that many programmers, myself included, face regularly. When tasked with a significant programming job, such as getting started with building a multiple-page website in HTML, CSS, and JavaScript, it’s easy to get caught in the weeds of not knowing where to start. </p>\n<p>Or you could be knee-deep in a coding project and hit a roadblock in finding a solution for a problem. It’s often a frustrating scenario to be in.</p>\n<p>ChatGPT has been an excellent solution for that. Let’s look at the example above in having programmer’s block before embarking on a large programming task. Suppose I’m looking to start a new project. After surfing for <a href=\"https://themoneymaniac.com/saas-ideas\">software company ideas</a>, I decided to develop a sleek and modern online store in HTML, CSS, and JavaScript to sell my latest programming book.</p>\n<p>While ChatGPT won’t be able to hit the mark in producing the entire project, a great way to use it is to <strong>generate the skeleton</strong> for you to begin. Throwing in a detailed prompt for the task, this is what you get:</p>\n<p><strong>Prompt</strong>: <em>Can you provide a basic structure for a sleek and modern single online store landing page, with red as the main color, for my new programming book in HTML and CSS?</em></p>\n<h4><code>index.html</code></h4>\n<div>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\n  &lt;title&gt;Your Book Title&lt;/title&gt;\n  &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;ul&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;About&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main&gt;\n    &lt;section&gt;\n      &lt;h1&gt;Programming book title&lt;/h1&gt;\n      &lt;p&gt;A comprehensive guide to becoming a proficient programmer&lt;/p&gt;\n      &lt;button&gt;Learn More&lt;/button&gt;\n    &lt;/section&gt;\n    &lt;section&gt;\n      &lt;h2&gt;Features of the Book:&lt;/h2&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Step-by-step tutorials for learning core programming concepts&lt;/li&gt;\n        &lt;li&gt;In-depth explanations of commonly used programming languages&lt;/li&gt;\n        &lt;li&gt;Hands-on exercises and real-world projects to reinforce learning&lt;/li&gt;\n        &lt;li&gt;Case studies to illustrate the application of programming in various industries&lt;/li&gt;\n        &lt;li&gt;Tips and tricks for efficient and effective programming practices&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer&gt;\n    &lt;p&gt;Copyright 2023&lt;/p&gt;\n  &lt;/footer&gt;\n&lt;/body&gt;\n</code></pre>\n</div>\n\n<h4><code>style.css</code></h4>\n<pre><code>body {\n  font-family: Arial, sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n\nheader, footer {\n  background-color: red;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 50px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\n}\n\nnav ul {\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\nnav a {\n  color: white;\n  display: block;\n  padding: 10px 20px;\n  text-decoration: none;\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: calc(100vh - 100px);\n}\n\nsection {\n  max-width: 800px;\n  padding: 40px;\n  margin-top: 100px;\n  text-align: center;\n  background-color: white;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\nh2 {\n  margin-top: 40px;\n}\n\nul {\n  list-style: none;\n  margin-top: 20px;\n  padding-left: 0;\n}\n\nli {\n  margin-bottom: 10px;\n}\n</code></pre>\n\n<p>That gives us the following template to start our work with:</p>\n<p><img src=\"https://files.smashing.media/articles/ai-tools-skyrocket-programming-productivity/2-index-style-css.png\" /></p>\n<p>Nothing impressive, but it does provide a great starting point as opposed to a blank HTML file.</p>\n<p>Now, of course, I would highly recommend that the most you create with this is the barebones structure. We are using these tools to abstract away menial tasks like creating the HTML structure so that you can focus on more important things like implementing your own CSS styles and HTML features.</p>\n<p>HTML and CSS templates are already widely-used concepts. However, <strong>with AI, we can now create more personalized templates and basic code structures</strong>, getting us from staring at a blank HTML file to a workable skeleton in a matter of minutes.</p>\n<p>Use it to create a starting platform for you to get over your programmer’s block, but for the fine details and exact features, your programming knowledge will still be irreplaceable.</p>\n<p>Nevertheless, I have been using it to get numerous programming projects up and running. I had this <a href=\"https://shaneduggan.com/sentence-length-counter\">sentence-length counter</a> made from scratch easily within an hour by creating the base template and adding on what I wanted after. I find that being able to jump-start that process makes my programming workflow much more streamlined and enjoyable.</p>\n<h3>Long Hours Of Debugging</h3>\n<p>Another common frustration every programmer knows is debugging. Debugging is an extremely time-intensive aspect of programming that can often be very draining and leave programmers at roadblocks, which is detrimental to a productive programming session.</p>\n<p>Fortunately, AI is able to cut out a lot of the frustration of debugging, while at the same time, it does not replace the job of programmers in having strong fundamentals in knowing how to debug. At the current time, most AI tools are not able to spot every single flaw in your code and suggest the correct changes to make; hence, it is still essential that you are capable of debugging code.</p>\n<p>However, AI is a great supplementary tool to your debugging skills in two main ways:</p>\n<ol>\n<li>Understanding runtime errors;</li>\n<li>Providing context-aware suggestions.</li>\n</ol>\n<h4>Understanding Runtime Errors</h4>\n<p>When faced with errors that you have never seen before in your code, a common reaction would be to hit Google and spend the next chunk of your time surfing through forums and guides to try and find a specific answer for something like the following:</p>\n<pre><code>Uncaught TypeError: Cannot read property 'value' of undefined.\n</code></pre>\n\n<p>Rather than spending your time frantically searching the web, a simple prompt can provide everything you would need for the most part.</p>\n<h4>Providing Context-Aware Suggestions</h4>\n<p>The other way in which I’ve been able to get help from ChatGPT for debugging is through its context-aware suggestions for errors. Traditionally, even though we may find the answers for what our program’s bugs are online, it is oftentimes difficult to put the errors and solutions into context.</p>\n<p>Here is how ChatGPT handles both of these scenarios with a simple prompt.</p>\n<p><strong>Prompt</strong>: <em>I found the error “Uncaught TypeError: Cannot read property <code>value</code> of undefined.” in my Python code. How do I resolve it?</em></p>\n<p><img src=\"https://files.smashing.media/articles/ai-tools-skyrocket-programming-productivity/1-chatgpt.png\" /></p>\n<p>With this, I have been able to cut out a lot of time that I would have been spending surfing for answers and turn that time into producing error-free code. While you still have to have good knowledge in knowing how to implement these fixes, using AI as a supplementary tool in your debugging arsenal can provide a huge boost in your programming productivity.</p>\n<h3>Understanding Long Documentation</h3>\n<p>Another fantastic way to use AI tools to your advantage is by streamlining long documentation into digestible information that comes when having to use APIs or libraries. As a Natural Language Processing model, this is where ChatGPT excels.</p>\n<p>Imagine you’re working on a new web development project, but want to use Flask for the first time. Traditionally, you might spend hours scrolling through pages of dense documentation from Flask, trying to find the precise information you need. </p>\n<p>With a tool like ChatGPT, you’ll be able to streamline this problem and save an immense amount of time in the following ways:</p>\n<ul>\n<li><strong>Generate concise summaries</strong><br />You’ll be able to automatically summarize long code documentation, making it easier to quickly understand the key points without having to read through the entire document.</li>\n<li><strong>Answer specific questions</strong><br />ChatGPT can answer specific questions about the code documentation, allowing you to quickly find the information you need without having to search through the entire document.</li>\n<li><strong>Explain technical terms</strong><br />If you are having trouble understanding some terms in the documentation, rather than navigating back to extensive forum threads, ChatGPT can explain technical terms in simple language, making it easier for non-technical team members to understand the code documentation.</li>\n<li><strong>Provide examples</strong><br />Similarly to debugging, you can get relatable examples for each code concept in the documentation, making it easier for you to understand how the code works and how you can apply it to your own projects.</li>\n<li><strong>Generate code snippets</strong><br />ChatGPT can generate code snippets based on the code documentation, allowing you to experiment with use cases and tailor the examples to your specific needs.</li>\n</ul>\n<p>It’s like having a search engine that can understand the context of your query and provide the most relevant information. You’ll no longer be bogged down by pages of text, and you can focus on writing and testing your code. Personally, I have been able to blast through numerous libraries, understand and apply them for my own needs in a fraction of the time I normally would.</p>\n<h3>Developer Testing</h3>\n<p>Developer testing is one of the cornerstone skills that a programmer or developer must have in order to create bulletproof programs and applications. However, even for experienced programmers, a common problem in developer testing is that you won’t know what you don’t know.</p>\n<p>What that means is that in your created test cases, you might miss certain aspects of your program or application that could go unnoticed until it reaches a larger audience. Oftentimes, to avoid that scenario, we could spend hours on end trying to bulletproof our code to ensure that it covers all its bases.</p>\n<p>However, this is a great way that I’ve been able to incorporate AI into my workflow as well. </p>\n<p>Having AI suggest tests that cover all edge cases is a great way to provide an objective and well-rounded testing phase for your projects.</p>\n<p>It also does so in a fraction of the time you would spend.</p>\n<p>For example, you are working on the same product landing page for your programming book from earlier. Now, I’ve created a proper product page that involves a form with the following fields for you to process:</p>\n<p><img src=\"https://files.smashing.media/articles/ai-tools-skyrocket-programming-productivity/5-product-page-forms-input.png\" /></p>\n<h4><code>script.js</code></h4>\n<div>\n<pre><code>// Get references to the form elements.\nconst form = document.getElementById(\"payment-form\");\nconst cardNumber = document.getElementById(\"card-number\");\nconst expiryDate = document.getElementById(\"expiry-date\");\nconst cvv = document.getElementById(\"cvv\");\nconst submitButton = document.getElementById(\"submit-button\");\n\n// Handle form submission.\nform.addEventListener(\"submit\", (event) =&gt; {\n  event.preventDefault();\n\n  // Disable the submit button to prevent multiple submissions.\n  submitButton.disabled = true;\n\n  // Create an object to hold the form data.\n  const formData = {\n    cardNumber: cardNumber.value,\n    expiryDate: expiryDate.value,\n    cvv: cvv.value,\n  };\n\n  // Perform client-side validation on the form data\n  if (!validateFormData(formData)) {\n    // If the data is invalid, re-enable the submit button and return\n    submitButton.disabled = false;\n    return;\n  }\n\n  // Send the form data to the server.\n  // The following is just an example and should not be used in a real-world scenario\n  // as it lacks security measures and proper payment gateway integration.\n  fetch(\"/charge\", {\n    method: \"POST\",\n    body: JSON.stringify(formData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) =&gt; response.json())\n    .then((data) =&gt; {\n      // Handle the server response.\n      if (data.success) {\n        // Payment was successful.\n        alert(\"Payment successful!\");\n      } else {\n        // Payment failed.\n        alert(\"Payment failed. Please try again.\");\n        submitButton.disabled = false;\n      }\n    })\n    .catch((error) =&gt; {\n      console.error(error);\n      alert(\"An error occurred. Please try again.\");\n      submitButton.disabled = false;\n    });\n});\n\n// Perform client-side validation on the form data.\nfunction validateFormData(data) {\n  // Example validation checks.\n  if (!data.cardNumber || data.cardNumber.length !== 16) {\n    alert(\"Please enter a valid card number.\");\n    return false;\n  }\n  if (!data.expiryDate || data.expiryDate.length !== 5) {\n    alert(\"Please enter a valid expiry date in the format MM/YY.\");\n    return false;\n  }\n  if (!data.cvv || data.cvv.length !== 3) {\n    alert(\"Please enter a valid CVV.\");\n    return false;\n  }\n  return true;\n}\n</code></pre>\n</div>\n\n<p>Knowing that there are many invalid inputs that customers might use, you want to create some test cases to validate your form’s functionalities. Rather than spending copious amounts of time coming up with numerous test cases, let’s let AI identify any edge cases we missed to bulletproof our tests.</p>\n<p><strong>Prompt</strong>: <em>Can you help to come up with some edge cases to ensure that the form does not accept any invalid inputs in collecting payment details?</em></p>\n<h4><code>test.js</code></h4>\n<div>\n<pre><code>// Test Case 1: Check if form doesn't submit when fields are empty.\ndocument.querySelector(\"form\").addEventListener(\"submit\", function(e) {\n  e.preventDefault();\n  var name = document.querySelector(\"input[name='name']\").value;\n  var address = document.querySelector(\"input[name='address']\").value;\n  var cardNumber = document.querySelector(\"input[name='card-number']\").value;\n  var expiryDate = document.querySelector(\"input[name='expiry-date']\").value;\n  var cvv = document.querySelector(\"input[name='cvv']\").value;\n\n  if (!name || !address || !cardNumber || !expiryDate || !cvv) {\n    alert(\"All fields are required\");\n    return;\n  }\n\n  // Check if all the fields contain valid inputs.\n  if (!validateName(name) || !validateAddress(address) || !validateCardNumber(cardNumber) || !validateExpiryDate(expiryDate) || !validateCVV(cvv)) {\n    return;\n  }\n\n  // Continue with payment processing.\n});\n\n// Test Case 2: Check if name input is valid.\nfunction validateName(name) {\n  var nameRegEx = /^[a-zA-Z ]+$/;\n  if (!nameRegEx.test(name)) {\n    alert(\"Invalid name. Please enter a valid name\");\n    return false;\n  }\n  return true;\n}\n\n// Test Case 3: Check if address input is valid.\nfunction validateAddress(address) {\n  var addressRegEx = /^[a-zA-Z0-9\\s,'-]*$/;\n  if (!addressRegEx.test(address)) {\n    alert(\"Invalid address. Please enter a valid address\");\n    return false;\n  }\n  return true;\n}\n\n// Test Case 4: Check if card number input is valid.\nfunction validateCardNumber(cardNumber) {\n  var cardNumberRegEx = /^\\d{16}$/;\n  if (!cardNumberRegEx.test(cardNumber)) {\n    alert(\"Invalid card number. Please enter a valid card number\");\n    return false;\n  }\n  return true;\n}\n</code></pre>\n</div>\n\n<p>The need to create all sorts of test cases, which is usually a daunting and repetitive task, after a while of working on the same project, can make programming feel very menial. However, with the assistance of AI, this process can be streamlined and, at the same time, improved to cover more bases in your developer testing.</p>\n<h3>Code Optimization</h3>\n<p>As it stands, AI still has a long way to go in helping to optimize code and can’t actually do the optimization itself. However, it can still help to provide some useful insights and give some pointers to improving your programming. Here are the most common ways that I have used ChatGPT in optimizing my code for performance:</p>\n<ul>\n<li><strong>Code Suggestions</strong><br />Most simply, it can suggest code snippets or alternative solutions to improve the performance of your existing code.</li>\n<li><strong>Best Practices</strong><br />Having been trained on a wide range of code patterns, ChatGPT can help you follow best practices for coding and software design, leading to more efficient and optimized code.</li>\n<li><strong>Refactoring</strong><br />It helps to reorganize existing code to improve its efficiency and maintainability without affecting its functionality.</li>\n<li><strong>Knowledge Sharing</strong><br />There are many scenarios where your code can be implemented simply through a single import or with other programming languages, libraries, and frameworks. ChatGPT’s suggestions help ensure you are making informed decisions on the best implementations for your needs.</li>\n</ul>\n<p>Of course, the bulk of these still requires you to optimize your code manually. However, using AI to gain insights and suggestions for this can be a great way to improve your productivity and produce higher-quality code.</p>\nAI Is Amazing, But It Does Have Its Limitations\n<p>Now that we have seen what AI can do for you and your programming productivity, I would imagine you are bubbling with ideas on how you are going to start implementing these in your programming workflows.</p>\n<p>However, it is essential to keep in mind that these models are fairly new and still have a long way to go regarding <strong>reliability</strong> and <strong>accuracy</strong>. These are just some of the limitations that AI, specifically, ChatGPT, has:</p>\n<ul>\n<li><strong>Limited Understanding</strong><br />AI algorithms like ChatGPT have a limited understanding of code and may not fully understand the implications and trade-offs of certain programming decisions.</li>\n<li><strong>Training Data Limitations</strong><br />The quality and relevance of AI algorithms’ output depend on the quality and scope of the training data. For example, ChatGPT was only trained on data dating to 2021. Any updates in programming languages since then may not be reflected.</li>\n<li><strong>Bias</strong><br />AI algorithms can be biased towards specific patterns or solutions based on the data they were trained on, leading to suboptimal or incorrect code suggestions.</li>\n<li><strong>Lack of Context</strong><br />AI algorithms may struggle to understand the context and the desired outcome of a specific coding task, leading to generic or irrelevant advice. While this can be minimized with specific prompts, it is still difficult to generate solutions to more complicated problems.</li>\n</ul>\n<p>Nevertheless, these limitations are a small price for the multitude of benefits that AI tools provide. While I am an advocate of using AI to boost your programming productivity, keeping in mind these limitations are crucial when using AI in your workflows as it is important to ensure that the information or code you are producing is reliable, especially if you are using it in a professional setting.</p>\n<p>With the current limitations, <strong>AI should only be used as a means to assist your current skills, not to replace them</strong>. Hence, with that in mind, use it tactfully and sparingly to achieve a good balance in boosting your productivity but not detracting from your skills as a programmer.</p>\nHow Else Will AI Improve Programmers’ Lives?\n<p>While I have mainly talked about the technical aspects of programming that AI can help in, there are many other areas where AI can help to make your life as a programmer much easier.</p>\n<p>We are just at the tip of the iceberg in this incoming wave of AI. Many new use cases for AI appear every day with the potential to improve programmers’ lives even further. In the future, we are likely to see many new integrations of AI in many of our daily software uses as programmers.</p>\n<p>There already exists general <a href=\"https://www.demandsage.com/best-ai-writing-softwares/\">writing software</a>, which could be useful for programmers in creating code and API documentation. These have been around for a while and have become widely accepted as a tool that helps, not replaces.</p>\n<p>General productivity and notetaking tools that use AI have also been a big hit, especially for programming students who have to plow through large amounts of information every day. All in all, where there is a labor-intensive task that can be resolved, AI will likely be making headway in those areas.</p>\nWrapping Up\n<p>To wrap things up, I will end with a reminder from the opening of this guide. I believe that there is massive potential in becoming well-versed with AI, not as a means to replace our work, but as a means to improve it.</p>\n<p>With the right knowledge of what you can and, more importantly, cannot do, AI can be an extremely valuable skill to have in your programming arsenal and will undoubtedly save you copious amounts of time if used correctly.</p>\n<p>Hence, rather than fearing the incoming wave of new AI technology, I encourage you to embrace it. Take the knowledge you have learned from the guide and tailor it to your own needs and uses. Every programmer’s workflows are different, but with the right principles and a good knowledge of the limitations of AI, the benefits are equally available to everyone.</p>\n<p>So all that’s left for you to do is to reap the supersized benefits that come with integrating AI into your current workflows and see your programming productivity skyrocket as it has for me. And if there’s one thing to remember, it’s to <strong>use AI as your assistant, not your replacement</strong>.</p>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"b8e7b153e8be8c06795ee925449466acedbb8b4128757272d4ae3b11007db5b0","category":"Tech"}