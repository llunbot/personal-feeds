{"title":"Getting To The Bottom Of Minimum WCAG-Conformant Interactive Element Size","link":"https://smashingmagazine.com/2024/07/getting-bottom-minimum-wcag-conformant-interactive-element-size/","date":1721394000000,"content":"<p>There are many rumors and misconceptions about conforming to WCAG criteria for the minimum sizing of interactive elements. I’d like to use this post to demystify <strong>what is needed for baseline compliance</strong> and to point out an approach for making successful and inclusive interactive experiences using ample target sizes.</p>\nMinimum Conformant Pixel Size\n<p>Getting right to it: When it comes to pure Web Content Accessibility Guidelines (WCAG) conformance, <strong>the bare minimum</strong> <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#dfn-css-pixel\"><strong>pixel size</strong></a> <strong>for an interactive, non-inline element is 24×24 pixels</strong>. This is outlined in <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html\">Success Criterion 2.5.8: Target Size (Minimum)</a>.</p>\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/1-aa-compliant.png\" /></p>\n<p>Success Criterion 2.5.8 is <strong>level AA</strong>, which is the most commonly used level for public, mass-consumed websites. This Success Criterion (or SC for short) is sometimes confused for <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-enhancedhttps://www.w3.org/WAI/WCAG22/Understanding/target-size-enhanced\">SC 2.5.5 Target Size (Enhanced)</a>, which is level AAA. The two are distinct and provide separate guidance for properly sizing interactive elements, even if they appear similar at first glance.</p>\n<p>SC 2.5.8 is relatively new to WCAG, having been released as <a href=\"https://www.w3.org/WAI/standards-guidelines/wcag/new-in-22/#258-target-size-minimum-aa\">part of WCAG version 2.2</a>, which was published on October 5th, 2023. WCAG 2.2 is <strong>the most current version of the standard</strong>, but this newer release date means that knowledge of its existence isn’t as widespread as the older SC, especially outside of web accessibility circles. That said, <strong>WCAG 2.2 will remain the standard</strong> until WCAG 3.0 is released, something that is likely going to take 10–15 years or more to happen.</p>\n<p>SC 2.5.5 calls for larger interactive elements sizes that are at least <strong>44×44 pixels</strong> (compared to the SC 2.5.8 requirement of 24×24 pixels). At the same time, notice that SC 2.5.5 is <a href=\"https://tetralogical.com/blog/2021/11/26/understanding-wcag-level-aaa/\"><strong>level AAA</strong></a> (compared to SC 2.5.8, level AA) which is a level reserved for specialized support beyond level AA.</p>\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/2-aaa-compliant.png\" /></p>\n<p><strong>Sites that need to be fully <a href=\"https://www.w3.org/TR/WCAG22/#conformance-reqs\">WCAG Level AAA conformant</a> are rare</strong>. Chances are that if you are making a website or web app, you’ll only need to support level AA. Level AAA is often reserved for large or highly specialized institutions.</p>\n<h3>Making Interactive Elements Larger With CSS Padding</h3>\n<p>The family of <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/padding\"><code>padding</code>-related properties</a> in CSS can be used to extend the interactive area of an element to make it conformant. For example, declaring <code>padding: 4px;</code> on an element that measures 16×16 pixels invisibly increases its bounding box to a total of 24×24 pixels. This, in turn, means the interactive element satisfies SC 2.5.8.</p>\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/3-padding.png\" /></p>\n<p>This is a good trick for making smaller interactive elements easier to click and tap. If you want more information about this sort of thing, I enthusiastically recommend <a href=\"https://ishadeed.com/\">Ahmad Shadeed</a>’s post, “<a href=\"https://ishadeed.com/article/target-size/\">Designing better target sizes</a>”.</p>\n<p>I think it’s also worth noting that <strong>CSS <code>margin</code> could also hypothetically be used to achieve level AA conformance</strong> since the SC includes a spacing exception:</p>\n<blockquote>The size of the <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#dfn-target\">target</a> for <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#dfn-pointer-input\">pointer inputs</a> is at least 24×24 <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#dfn-css-pixel\">CSS pixels</a>, except where:<br /><br /><strong>Spacing:</strong> Undersized targets (those less than 24×24 CSS pixels) are positioned so that if a 24 CSS pixel diameter circle is centered on the <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#dfn-minimum-bounding-box\">bounding box</a> of each, the circles do not intersect another target or the circle for another undersized target;<br /><br />[…]</blockquote>\n\n<p>The difference here is that <strong>padding extends the interactive area, while margin does not</strong>. Through this lens, you’ll want to honor the spirit of the success criterion because <a href=\"https://adrianroselli.com/2023/12/2-5-8-adversarial-conformance.html#Adversarial\">partial conformance is adversarial conformance</a>. At the end of the day, we want to help people successfully click or tap interactive elements, such as buttons.</p>\n<h3>What About Inline Interactive Elements?</h3>\n<p>We tend to think of targets in terms of block elements — elements that are displayed on their own line, such as a button at the end of a call-to-action. However, interactive elements can be inline elements as well. Think of links in a paragraph of text.</p>\n<p>Inline interactive elements, such as text links in paragraphs, <strong>do not</strong> need to meet the 24×24 pixel minimum requirement. Just as <code>margin</code> is an exception in <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#exceptions\">SC 2.5.8: Target Size (Minimum)</a>, so are inline elements with an interactive target:</p>\n<blockquote>The size of the <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#dfn-target\">target</a> for <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#dfn-pointer-input\">pointer inputs</a> is at least 24×24 <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#dfn-css-pixel\">CSS pixels</a>, except where:<br /><br />[…]<br /><br /><strong>Inline:</strong> The target is in a sentence or its size is otherwise constrained×the line-height of non-target text;<br /><br />[…]</blockquote>\n\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/4-inline.png\" /></p>\nApple And Android: The Source Of More Confusion\n<p>If the differences between interactive elements that are inline and block are still confusing, that’s probably because the whole situation is even further muddied by third-party human interface guidelines requiring interactive sizes closer to what the level AAA Success Criterion 2.5.5 Target Size (Enhanced) demands.</p>\n<p>For example, Apple’s “<a href=\"https://developer.apple.com/design/human-interface-guidelines/\">Human Interface Guidelines</a>” and Google’s “<a href=\"https://m3.material.io\">Material Design</a>” are guidelines for how to design interfaces for their respective platforms. Apple’s guidelines recommend that <a href=\"https://developer.apple.com/design/human-interface-guidelines/accessibility#Buttons-and-controls\">interactive elements are 44×44 points</a>, whereas Google’s guides stipulate target sizes that are <a href=\"https://m3.material.io/foundations/designing/structure#b421e522-35a6-47cd-bfc6-bf94cbacf7bb\">at least 48×48 using density-independent pixels</a>.</p>\n<p>These may satisfy Apple and Google requirements for designing interfaces, but <em>are they WCAG-conformant</em> Apple and Google — not to mention any other organization with UI guidelines — can specify whatever interface requirements they want, but <em>are they copasetic with WCAG SC 2.5.5 and SC 2.5.8?</em> </p>\n<p>It’s important to ask this question because there is a hierarchy when it comes to accessibility compliance, and it contains legal levels:</p>\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/5-the-law.png\" /></p>\n<p>Human interface guidelines often inform design systems, which, in turn, influence the sites and apps that are built by authors like us. But they’re not the “authority” on accessibility compliance. Notice how everything is (and ought to be) influenced by WCAG at the very top of the chain.</p>\n<p>Even if these third-party interface guidelines conform to SC 2.5.5 and 2.5.8, it’s still tough to tell when they are expressed in “<a href=\"https://developer.apple.com/design/human-interface-guidelines/images#Resolution\">points</a>” and “<a href=\"https://developer.android.com/design/ui/mobile/guides/layout-and-content/grids-and-units\">density independent pixels</a>” which aren’t pixels, but often get conflated as such. I’d advise not getting too deep into researching <a href=\"https://www.oddbird.net/2024/07/09/zoomies/#what%E2%80%99s-a-(css\">what a pixel truly is</a>-pixel%3F). Trust me when I say it’s a road you don’t want to go down. But whatever the case, the inconsistent use of unit sizes exacerbates the issue.</p>\nCan’t We Just Use A Media Query?\n<p>I’ve also observed some developers attempting to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/pointer\">the <code>pointer</code> media feature</a> as a clever “trick” to <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/pointer#coarse\">detect when a touchscreen is present</a>, then conditionally adjust an interactive element’s size as a way to get around the WCAG requirement.</p>\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/6-media-query.png\" /></p>\n<p>After all, mouse cursors are for fine movements, and touchscreens are for more broad gestures, right? Not always. The thing is, <strong>devices are multimodal</strong>. They can support <a href=\"https://hacks.mozilla.org/2013/04/detecting-touch-its-the-why-not-the-how/\">many different kinds of input</a> and don’t require a special switch to flip or button to press to do so. A straightforward example of this is switching between a trackpad and a keyboard while you browse the web. A less considered example is a device with a touchscreen that also supports a trackpad, keyboard, mouse, and voice input.</p>\n<p>You might think that the combination of trackpad, keyboard, mouse, and voice inputs sounds like some sort of absurd, obscure Frankencomputer, but what I just described is a <a href=\"https://www.microsoft.com/en-us/surface/devices/surface-laptop-7th-edition\">Microsoft Surface laptop</a>, and guess what? They’re <a href=\"https://www.windowscentral.com/surface-windows-fy22-q2-revenue-report\">pretty popular</a>.</p>\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/7-microsoft-surface-laptop.png\" /></p>\nResponsive Design Vs. Inclusive Design\n<p>There is a difference between the two, even though they are often used interchangeably. Let’s delineate the two as clearly as possible:</p>\n<ul>\n<li>Responsive Design is about designing for an <strong>unknown device</strong>.</li>\n<li>Inclusive Design is about designing for an <strong>unknown user</strong>.</li>\n</ul>\n<p>The other end of this consideration is that people with <a href=\"https://www.w3.org/WAI/people-use-web/abilities-barriers/#physical\">motor control conditions</a> — like hand tremors or arthritis — can and do use mice inputs. This means that fine input actions may be painful and difficult, yet ultimately still possible to perform.</p>\n<p>People also use more precise input mechanisms for touchscreens all the time, including both <a href=\"https://www.apple.com/apple-pencil/\">official accessories</a> and <a href=\"https://www.amazon.com/s?k=stylus+pen+for+touchscreen\">aftermarket devices</a>. In other words, some devices designed to accommodate coarse input can also be used for <a href=\"https://procreate.com/\">fine detail work</a>.</p>\n<p>I’d be remiss if I didn’t also point out that people plug mice and keyboards into smartphones. We cannot automatically say that they only support coarse pointers:</p>\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/8-too-large-touch-target.png\" /> </p>\n<h3>Context Is King</h3>\n<p>Conformant and successful interactive areas — both large and small — require <strong>knowing the ultimate goals of your website or web app</strong>. When you arm yourself with this context, you are empowered to make informed decisions about the kinds of people <em>who</em> use your service, <em>why</em> they use the service, and <em>how</em> you can accommodate them.</p>\n<p>For example, the <a href=\"https://www.nngroup.com/articles/touch-target-size/#toc-when-bigger-is-better-4\">Glow Baby app uses larger interactive elements</a> because it knows the user is likely holding an adorable, albeit squirmy and fussy, baby while using the application. This allows Glow Baby to emphasize the interactive targets in the interface to accommodate parents who have their hands full.</p>\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/9-glowbaby-mobileapp-nursingtimer.png\" /></p>\n<p>In the same vein, <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#exceptions\">SC SC 2.5.8 acknowledges that smaller touch targets</a> — such as those used in map apps — <a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html#exceptions\">may contextually be exempt</a>: </p>\n<blockquote>For example, in digital maps, the position of pins is analogous to the position of places shown on the map. If there are many pins close together, the spacing between pins and neighboring pins will often be below 24 CSS pixels. It is essential to show the pins at the correct map location; therefore, the Essential exception applies.<br /><br />[…]<br /><br />When the \"Essential\" exception is applicable, authors are strongly encouraged to provide equivalent functionality through alternative means to the extent practical.</blockquote>\n\n<p>Note that <strong>this exemption language is not carte blanche to make your own work an exception to the rule</strong>. It is more of a mechanism, and an acknowledgment that broadly applied rules may have exceptions that are worth thinking through and documenting for future reference.</p>\nFurther Considerations\n<p>We also want to consider the larger context of the device itself as well as the environment the device will be used in. </p>\n<p><a href=\"https://www.nngroup.com/articles/very-large-touchscreen-ux-design/\">Larger, more fixed position touchscreens compel larger interactive areas</a>. Smaller devices that are moved around in space a lot (e.g., smartwatches) may benefit from alternate input mechanisms such as voice commands.</p>\n<p>What about people who are driving in a car? People in this context probably ought to be provided straightforward, simple interactions that are facilitated via large interactive areas to prevent them from taking their eyes off the road. The same could also be said for high-stress environments like hospitals and <a href=\"https://www.24a11y.com/2017/convince-company-tames-dinosaurs-design-inclusively/\">oil rigs</a>.</p>\n<p>Similarly, <a href=\"https://www.smashingmagazine.com/2024/02/practical-guide-design-children/\">devices and apps that are designed for children</a> may require interactive areas that are larger than WCAG requirements for interactive areas. So would experiences aimed at older demographics, where age-derived vision and motor control disability factors tend to be more present.</p>\n<p>Minimum conformant interactive area experiences may also make sense in their own contexts. Data-rich, information-dense experiences like <a href=\"https://www.bloomberg.com/professional/products/bloomberg-terminal/\">the Bloomberg terminal</a> come to mind here.</p>\nDesign Systems Are Also Worth Noting\n<p>While you can control what components you include in a <a href=\"https://www.figma.com/blog/design-systems-101-what-is-a-design-system/\">design system</a>, you cannot control where and how they’ll be used by those who adopt and use that design system. Because of this, I suggest <strong>defensively baking accessible defaults into your design systems</strong> because they can go a long way toward incorporating accessible practices when they’re integrated right out of the box.</p>\n<p>One option worth consideration is <strong>providing an accessible range of choices</strong>. Components, like buttons, can have size variants (e.g., small, medium, and large), and you can provide a minimally conformant interactive target on the smallest variant and then offer larger, equally conformant versions.</p>\n<p><img src=\"https://files.smashing.media/articles/getting-bottom-minimum-wcag-conformant-interactive-element-size/10-design-system-variants.png\" /></p>\nSo, How Do We Know When We’re Good?\n<p>There is no magic number or formula to get you that perfect Goldilocks “not too small, not too large, but just right” interactive area size. It requires knowledge of what the people who want to use your service want, and how they go about getting it.</p>\n<p>The best way to learn that? <strong>Ask people</strong>.</p>\n<p>Accessibility research includes more than just asking people who use screen readers what they think. It’s also a lot easier to conduct than you might think! For example, prototypes are a great way to quickly and inexpensively evaluate and de-risk your ideas before committing to writing production code. “<a href=\"https://www.smashingmagazine.com/2024/04/conducting-accessibility-research-inaccessible-ecosystem/\">Conducting Accessibility Research In An Inaccessible Ecosystem</a>” by <a href=\"https://mawconsultingllc.com/\">Dr. Michele A. Williams</a> is chock full of tips, strategies, and resources you can use to help you get started with accessibility research.</p>\nWrapping Up\n<p>The bottom line is that </p>\n<p>“Compliant” does not always equate to “usable.” But compliance does help set baseline requirements that benefit everyone.</p>\n<p>To sum things up:</p>\n<ul>\n<li>24×24 pixels is the bare minimum in terms of WCAG conformance.</li>\n<li>Inline interactive elements, such as links placed in paragraphs, are exempt.</li>\n<li>44×44 pixels is for WCAG level AAA support, and level AAA is reserved for specialized experiences.</li>\n<li>Human interface guidelines by the likes of Apple, Android, and other companies must ultimately confirm to WCAG.</li>\n<li>Devices are multimodal and can use different kinds of input concurrently. </li>\n<li>Baking sensible accessible defaults into design systems can go a long way to ensuring widespread compliance.</li>\n<li>Larger interactive element sizes may be helpful in many situations, but might not be recognized as an interactive element if they are too large.</li>\n<li>User research can help you learn about your audience.</li>\n</ul>\n<p>And, perhaps most importantly, all of this is about people and enabling them to get what they need.</p>\n<h3>Further Reading</h3>\n<ul>\n<li><a href=\"https://tetralogical.com/blog/2022/12/20/foundations-target-size/\">Foundations: target sizes</a> (TetraLogical)</li>\n<li><a href=\"https://www.w3.org/WAI/perspective-videos/controls/\">Large Links, Buttons, and Controls</a> (Web Accessibility Initiative)</li>\n<li><a href=\"https://css-tricks.com/interaction-media-features-and-their-potential-for-incorrect-assumptions/\">Interaction Media Features and Their Potential (for Incorrect Assumptions)</a> (CSS-Tricks)</li>\n<li><a href=\"https://tetralogical.com/blog/2023/04/21/meeting-wcag-level-aaa/#increased-text-color-contrast\">Meeting WCAG Level AAA</a> (TetraLogical)</li>\n</ul>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"82046dda4c3f774f424e26b43e42bb5d278aa351b6b3b0485a4a80104f104f08","category":"Tech"}