{"title":"Announcing the general availability of fully managed MLflow on Amazon SageMaker","link":"https://aws.amazon.com/blogs/aws/manage-ml-and-generative-ai-experiments-using-amazon-sagemaker-with-mlflow/","date":1718814711000,"content":"<p>Today, we are thrilled to announce the general availability of a <a href=\"https://aws.amazon.com/sagemaker/experiments/\">fully managed MLflow capability on Amazon SageMaker.</a> MLflow, a widely-used open-source tool, plays a crucial role in helping machine learning (ML) teams manage the entire ML lifecycle. With this new launch, customers can now effortlessly set up and manage MLflow Tracking Servers with just a few steps, streamlining the process and boosting productivity.</p> \n<p>Data Scientists and ML developers can leverage MLflow to track multiple attempts at training models as runs within experiments, compare these runs with visualizations, evaluate models, and register the best models to a Model Registry. Amazon SageMaker eliminates the undifferentiated heavy lifting required to set up and manage MLflow, providing ML administrators with a quick and efficient way to establish secure and scalable MLflow environments on AWS.</p> \n<p><strong><span>Core components of managed MLflow on SageMaker</span></strong></p> \n<p>The fully managed MLflow capability on SageMaker is built around three core components:</p> \n<ul> \n <li><strong>MLflow Tracking Server</strong> – With just a few steps, you can create an <a href=\"https://mlflow.org/docs/latest/tracking.html#mlflow-tracking-server-optional\">MLflow Tracking Server</a> through the SageMaker Studio UI. This stand-alone HTTP server serves multiple REST API endpoints for tracking runs and experiments, enabling you to begin monitoring your ML experiments efficiently. For more granular security customization, you can also use the <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface</a> (AWS CLI).</li> \n <li><strong>MLflow backend metadata store</strong> – The metadata store is a critical part of the MLflow Tracking Server, where all metadata related to experiments, runs, and artifacts is persisted. This includes experiment names, run IDs, parameter values, metrics, tags, and artifact locations, ensuring comprehensive tracking and management of your ML experiments.</li> \n <li><strong>MLflow artifact store</strong> – This component provides a storage location for all artifacts generated during ML experiments, such as trained models, datasets, logs, and plots. Utilizing an <a href=\"https://aws.amazon.com/s3/\">Amazon Simple Storage Service</a> (Amazon S3) bucket, it offers a customer-managed AWS account for storing these artifacts securely and efficiently.</li> \n</ul> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/11/image-141.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/11/image-141.png\" width=\"841\" height=\"620\" /></a></p> \n<p><span><strong>Benefits of Amazon SageMaker with MLflow</strong></span></p> \n<p>Using Amazon SageMaker with MLflow can streamline and enhance your machine learning workflows:</p> \n<ul> \n <li><strong>Comprehensive Experiment Tracking:</strong> Track experiments in MLflow across local integrated development environments (IDEs), managed IDEs in SageMaker Studio, SageMaker training jobs, SageMaker processing jobs, and SageMaker Pipelines.</li> \n <li><strong>Full MLflow Capabilities:</strong> Use all MLflow experimentation capabilities such as MLflow Tracking, MLflow Evaluations, and MLflow Model Registry, are available to easily compare and evaluate the results of training iterations.</li> \n <li><strong>Unified Model Governance:</strong> Models registered in MLflow automatically appear in the SageMaker Model Registry, offering a unified model governance experience that helps you deploy MLflow models to SageMaker inference without building custom containers.</li> \n <li><strong>Efficient Server Management:</strong> Provision, remove, and upgrade MLflow Tracking Servers as desired using SageMaker APIs or the SageMaker Studio UI. SageMaker manages the scaling, patching, and ongoing maintenance of your tracking servers, without customers needing to manage the underlying infrastructure.</li> \n <li><strong>Enhanced Security:</strong> Secure access to MLflow Tracking Servers using <a href=\"https://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a>. Write IAM policies to grant or deny access to specific MLflow APIs, ensuring robust security for your ML environments.</li> \n <li><strong>Effective Monitoring and Governance:</strong> Monitor the activity on an MLflow Tracking Server using <a href=\"https://aws.amazon.com/eventbridge/\">Amazon EventBridge</a> and <a href=\"https://aws.amazon.com/cloudtrail/\">AWS CloudTrail</a> to support effective governance of their Tracking Servers.</li> \n</ul> \n<p><strong><span>MLflow Tracking Server prerequisites (environment setup)<br /> </span></strong></p> \n<ol> \n <li><strong>Create a SageMaker Studio domain</strong><br /> You can create a SageMaker Studio domain using the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/studio-updated.html\">new SageMaker Studio experience</a>.<a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/domain.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/domain.png\" width=\"3822\" height=\"882\" /></a></li> \n <li><strong>Configure the IAM execution role<br /> </strong>The MLflow Tracking Server needs an IAM execution role to read and write artifacts to Amazon S3 and register models in SageMaker. You can use the Studio domain execution role as the Tracking Server execution role or you can create a separate role for the Tracking Server execution role. If you choose to create a new role for this, refer to the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow.html\">SageMaker Developer Guide</a> for more details on the IAM role. If you choose to update the Studio domain execution role, refer to the SageMaker Developer Guide for details on what IAM policy the role needs.</li> \n</ol> \n<p><span><strong>Create the MLflow Tracking Server<br /> </strong></span>In the walkthrough, I use the default settings for creating an MLflow Tracking Server, which include the Tracking Server <strong>version</strong> (2.13.2), the Tracking Server <strong>size</strong> (Small), and the Tracking Server <strong>execution role</strong> (Studio domain execution role). The Tracking Server size determines how much usage a Tracking Server will support, and we recommend using a Small Tracking Server for teams of up to 25 users. For more details on Tracking Server configurations, read the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow.html\">SageMaker Developer Guide</a>.<em><br /> </em></p> \n<p>To get started, in your SageMaker Studio domain created during your environment set up detailed earlier, select MLflow under Applications and choose <strong>Create</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/Screenshot-2024-06-12-at-9.05.11-AM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/Screenshot-2024-06-12-at-9.05.11-AM.png\" width=\"2740\" height=\"1262\" /></a></p> \n<p>Next, provide a <strong>Name</strong> and <strong>Artifact storage location (S3 URI)</strong> for the Tracking Server.</p> \n<p>Creating an MLflow Tracking Server can take up to 25 minutes.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/Screenshot-2024-06-12-at-9.06.26-AM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/Screenshot-2024-06-12-at-9.06.26-AM.png\" width=\"2760\" height=\"1386\" /></a><br /> <span><strong>Track and compare training runs</strong></span><br /> To get started with logging metrics, parameters, and artifacts to MLflow, you need a Jupyter Notebook and your Tracking Server ARN that was assigned during the creation step. You can use the MLflow SDK to keep track of training runs and compare them using the MLflow UI.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/Image-8-copy.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/Image-8-copy.png\" width=\"2706\" height=\"1856\" /></a><br /> To register models from MLflow Model Registry to SageMaker Model Registry, you need the <code>sagemaker-mlflow</code> plugin to authenticate all MLflow API requests made by the MLflow SDK using <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\">AWS Signature V4</a>.</p> \n<ol> \n <li><strong>Install the MLflow SDK and <code>sagemaker-mlflow</code> plugin</strong><br /> In your notebook, first install the MLflow SDK and sagemaker-mlflow Python plugin.<br /> <code>pip install mlflow==2.13.2 sagemaker-mlflow==0.1.0</code></li> \n <li><strong>Track a run in an experiment</strong><br /> To track a run in an experiment, copy the following code into your Jupyter notebook.<p></p> <pre><code>import mlflow\nimport mlflow.sklearn\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n\n# Replace this with the ARN of the Tracking Server you just created\narn = 'YOUR-TRACKING-SERVER-ARN'\n\nmlflow.set_tracking_uri(arn)\n\n# Load the Iris dataset\niris = load_iris()\nX, y = iris.data, iris.target\n\n# Split the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Train a Random Forest classifier\nrf_model = RandomForestClassifier(n_estimators=100, random_state=42)\nrf_model.fit(X_train, y_train)\n\n# Make predictions on the test set\ny_pred = rf_model.predict(X_test)\n\n# Calculate evaluation metrics\naccuracy = accuracy_score(y_test, y_pred)\nprecision = precision_score(y_test, y_pred, average='weighted')\nrecall = recall_score(y_test, y_pred, average='weighted')\nf1 = f1_score(y_test, y_pred, average='weighted')\n\n# Start an MLflow run\nwith mlflow.start_run():\n# Log the model\nmlflow.sklearn.log_model(rf_model, \"random_forest_model\")\n\n# Log the evaluation metrics\nmlflow.log_metric(\"accuracy\", accuracy)\nmlflow.log_metric(\"precision\", precision)\nmlflow.log_metric(\"recall\", recall)\nmlflow.log_metric(\"f1_score\", f1)</code></pre> </li> \n <li><strong>View your run in the MLflow UI</strong><br /> Once you run the notebook shown in Step 2, you will see a new run in the MLflow UI.<br /> <a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/Screenshot-2024-06-10-at-4.05.35-PM-1.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/Screenshot-2024-06-10-at-4.05.35-PM-1.png\" width=\"2698\" height=\"768\" /></a></li> \n <li><strong>Compare runs</strong><br /> You can run this notebook multiple times by changing the <code>random_state</code> to generate different metric values for each training run.</li> \n</ol> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/compare.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/compare.png\" width=\"2706\" height=\"1434\" /></a></p> \n<p><span><strong>Register candidate models</strong></span><br /> Once you’ve compared the multiple runs as detailed in Step 4, you can register the model whose metrics best meet your requirements in the MLflow Model Registry. Registering a model indicates potential suitability for production deployment and there will be further testing to validate this suitability. Once a model is registered in MLflow it automatically appears in the SageMaker Model Registry for a unified model governance experience so you can deploy MLflow models to SageMaker inference. This enables data scientists who primarily use MLflow for experimentation to hand off their models to ML engineers who govern and manage production deployments of models using the SageMaker Model Registry.</p> \n<p>Here is the model registered in the MLflow Model Registry.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/production.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/production.png\" width=\"2430\" height=\"1325\" /></a><br /> Here is the model registered in the SageMaker Model Registry.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/sagemakerregistry.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/sagemakerregistry.png\" width=\"2740\" height=\"1300\" /></a></p> \n<p><span><strong>Clean up</strong></span><br /> Once created, an MLflow Tracking Server will incur costs until you delete or stop it. Billing for Tracking Servers is based on the duration the servers have been running, the size selected, and the amount of data logged to the Tracking Servers. You can stop Tracking Servers when they are not in use to save costs or delete them using API or the SageMaker Studio UI. For more details on pricing, see the <a href=\"https://aws.amazon.com/sagemaker/pricing?p=pm&amp;c=sm&amp;z=4\">Amazon SageMaker pricing</a>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/12/Screenshot-2024-06-10-at-1.51.14-PM.png\" width=\"2625\" height=\"1737\" /></p> \n<p><span><strong>Now available</strong></span><br /> SageMaker with MLflow is generally available in all <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/\">AWS Regions</a> where SageMaker Studio is available, except China and US GovCloud Regions. We invite you to explore this new capability and experience the enhanced efficiency and control it brings to your machine learning projects. To learn more, visit the SageMaker with MLflow <a href=\"https://aws.amazon.com/sagemaker/experiments/\">product detail page</a>.</p> \n<p>For more information, visit the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/mlflow.html\">SageMaker Developer Guide</a> and send feedback to <a href=\"https://repost.aws/tags/TAT80swPyVRPKPcA0rsJYPuA\">AWS re:Post for SageMaker</a> or through your usual AWS support contacts.</p> \n<p>— <a href=\"https://www.linkedin.com/in/veliswa-boya/\">Veliswa</a></p>","author":"Veliswa Boya","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"77b2e93c3f6be15979935d917b63e6b426cd30cc2bf85ed8e495e95a83a6803a","category":"Tech"}