{"title":"Nomad 1.9 adds NVIDIA MIG support, golden job versions, and more","link":"https://www.hashicorp.com/blog/nomad-1-9-adds-nvidia-mig-support-golden-job-versions-and-more","date":1728995400000,"content":"<p><a href=\"https://www.nomadproject.io/\">HashiCorp Nomad</a> is a simple and flexible orchestrator used to deploy and manage containers and non-containerized applications across multiple cloud, on-premises, and edge environments. It is widely adopted and used in production by organizations such as <a href=\"https://www.hashicorp.com/resources/accelerating-bt-s-migration-from-on-prem-to-cloud-with-hashicorp\">BT Group</a> and <a href=\"https://www.hashicorp.com/resources/cooking-with-nomad-powering-the-fortnite-creator-ecosystem\">Epic Games</a>. Today, we are excited to announce that Nomad 1.9 is now generally available.</p>\n\n<p>Here’s what’s new in Nomad 1.9:</p>\n\n<ul>\n<li>Updated NVIDIA device driver for Multi-Instance GPU support</li>\n<li>Quotas for device resources (Enterprise)</li>\n<li>NUMA awareness for device resources (Enterprise)</li>\n<li>exec2 task driver general availability</li>\n<li>Golden job versions</li>\n<li>libvirt task driver beta</li>\n<li>Improved IPv6 support</li>\n</ul>\n\n<h2>Updated NVIDIA device driver for Multi-Instance GPU support</h2>\n\n<p>Nomad has supported the NVIDIA device driver for several years and we are excited to add support for <a href=\"https://www.nvidia.com/en-us/technologies/multi-instance-gpu/\">Multi-Instance GPU (MIG)</a>. This will enhance Nomad’s ability to schedule workloads across your NVIDIA hardware and make full use of your GPU investment.</p>\n\n<p>The NVIDIA device plugin uses <a href=\"https://www.github.com/NVIDIA/go-nvml\">NVML</a> bindings to get data regarding available NVIDIA devices and will expose them via <a href=\"https://developer.hashicorp.com/nomad/docs/concepts/plugins/devices#fingerprint-context-context-chan-fingerprintresponse-error\"><code>Fingerprint</code></a> RPC. GPUs can be excluded from fingerprinting by setting the <code>ignored_gpu_ids</code> field (see below).</p>\n\n<p>The plugin now detects whether the GPU has <code>MIG</code> enabled. When enabled, all instances will be fingerprinted as individual GPUs that can be addressed accordingly.</p>\n\n<p>The plugin is configured in the Nomad client's <a href=\"https://developer.hashicorp.com/nomad/docs/configuration/plugin\"><code>plugin</code></a> block:</p>\n<pre><code>plugin \"nvidia\" {\n  config {\n    ignored_gpu_ids    = [\"uuid1\", \"uuid2\"]\n    fingerprint_period = \"5s\"\n  }\n}</code></pre><h2>Quotas for device resources (Enterprise)</h2>\n\n<p>Nomad has supported resource quotas since version 0.7 as a mechanism to let users specify CPU, memory, or network resource limits for their tasks. Quotas are namespace- and region-scoped, and are an Enterprise-only feature. We are excited to extend the quotas to allow limiting <a href=\"https://developer.hashicorp.com/nomad/docs/job-specification/device\">device resources</a>. </p>\n\n<p>The quota is applied to a region and the quota limit now supports a device block.</p>\n<pre><code>name        = \"default-quota\"\ndescription = \"Limit the shared default namespace\"\n\n# Create a limit for the global region. Additional limits may\n# be specified in-order to limit other regions.\nlimit {\n  region = \"global\"\n  region_limit {\n    cores      = 0\n    cpu        = 2500\n    memory     = 1000\n    memory_max = 1000\n    device \"nvidia/gpu/1080ti\" {\n      count = 1\n    }\n  }\n  variables_limit = 1000\n}</code></pre><h2>NUMA awareness for device resources (Enterprise)</h2>\n\n<p>Introduced in Nomad 1.7, non-uniform memory access (NUMA) allowed for multi-core, latency-sensitive workloads to be scheduled by Nomad Enterprise. The NUMA-aware scheduling can greatly increase the performance of your Nomad tasks (For more information, see the <a href=\"https://developer.hashicorp.com/nomad/docs/concepts/cpu\">Nomad CPU concepts documentation</a>).</p>\n\n<p>Nomad is able to correlate CPU cores with memory nodes and assign tasks to run on specific CPU cores so as to minimize any cross-memory node access patterns. With Nomad 1.9, we are expanding this functionality to also correlate <a href=\"https://developer.hashicorp.com/nomad/docs/concepts/plugins/devices\">devices</a> to memory nodes and enable NUMA-aware scheduling to take device associativity into account when making scheduling decisions.</p>\n\n<p>This jobspec block has been expanded to support listing a set of devices that must be scheduled with NUMA awareness.</p>\n<pre><code>resources {\n  cores  = 8\n  memory = 16384\n\n  device \"nvidia/gpu/H100\" { count = 2 }\n\n  device \"intel/net/XXVDA2\" { count = 1 }\n\n  device \"xilinx/fpga/X7\" { count = 1 }\n\n  numa {\n\taffinity = \"require\"\n\tdevices = [\n  \t\"nvidia/gpu/H100\",\n  \t\"intel/net/XXVDA2\"\n\t]\n  }\n}</code></pre><img src=\"https://www.datocms-assets.com/2885/1728595813-numa_devices.png\" alt=\"This\" /><h2>exec2 task driver (GA)</h2>\n\n<p>Nomad has always provided support for heterogeneous workloads. The first Nomad <code>exec</code> task driver provided a simple and relatively easy way to run binary workloads in a sandboxed environment. Then Nomad 1.8 introduced <a href=\"https://www.hashicorp.com/blog/nomad-1-8-adds-exec2-task-driver-support-consul-api-gateway-transparent-proxy\">a new exec2 task</a> driver in beta. Today, the <code>exec2</code> task driver becomes generally available with full support in Nomad 1.9.</p>\n\n<p>Similar to the exec driver, the new exec2 driver is used to execute a command for a task. However, it offers a security model optimized for running “ordinary” processes with very short startup times and minimal overhead in terms of CPU, disk, and memory utilization. The <code>exec2</code> driver leverages kernel features such as the <a href=\"https://github.com/shoenig/go-landlock\">Landlock LSM</a>, <code>cgroups</code> v2, and the <a href=\"https://www.man7.org/linux/man-pages/man1/unshare.1.html\">unshare system utility</a>. With the <code>exec2</code> driver, tasks are no longer required to use filesystem isolation based on <code>chroot</code>, which enhances security and improves performance for the Nomad operator.</p>\n\n<p>Below is a task that uses the new <code>exec2</code> driver. It must be <a href=\"https://developer.hashicorp.com/nomad/plugins/v1.8.x/drivers/exec2#installation\">installed</a> on the Nomad client host prior to executing the task:</p>\n<pre><code>job \"http\" {\n group \"web\" {\n   task \"python\" {\n     driver = \"exec2\"\n     config {\n       command = \"python3\"\n       args    = [\"-m\", \"http.server\", \"8080\", \"--directory\", \"${NOMAD_TASK_DIR}\"]\n       unveil  = [\"r:/etc/mime.types\"]\n     }\n   }\n }\n}</code></pre><h2>Golden job versions</h2>\n\n<p>Nomad 1.9 introduces a way to preserve and compare historical versions of a job. Prior to this, any change to a job would push older versions into garbage collection. Now, users can add a tag to versions of their jobs to prevent this. These tags also allow job versions to be compared by tag name, letting users see differences that may have taken place over time.</p>\n\n<p>We’ve added new CLI commands <code>nomad job tag apply</code> and <code>nomad job tag unset</code> to add and remove <code>VersionTag</code>s from job versions. They’re used like this:</p>\n<pre><code>nomad job tag apply -name=\"high-throughput\" -description=\"Increased CPU and MEM settings\" $jobID</code></pre><pre><code>nomad job tag unset -name=\"high-throughput\" $jobID</code></pre><p>We’ve also added <code>-diff-version</code> and <code>-diff-name</code> params to our <code>nomad job revert</code> command, letting users roll back a specified version:</p>\n<pre><code>nomad job revert difftester \"high-throughput\"</code></pre><p>These same params have been added to the <code>nomad job history</code> command, making it possible to compare multiple versions to a version other than their predecessor.</p>\n<pre><code>nomad job history -p -diff-tag=$tagName $jobID</code></pre><p>These CLI updates also have equivalent HTTP API endpoint changes and are reflected in the web UI.</p>\n<img src=\"https://www.datocms-assets.com/2885/1728596014-image-2.png\" alt=\"Golden\" /><p>We hope this feature gives users more confidence about prospective changes to a job and lets them observe the amount of “drift” that takes place among their long-running jobs.</p>\n\n<h2>Virt task driver (beta)</h2>\n\n<p>Nomad 1.9 introduces a new task driver for managing virtual machines based on the <a href=\"https://libvirt.org/\">libvirt</a> API, an <a href=\"https://en.wikipedia.org/wiki/Open-source_software\">open source</a> <a href=\"https://en.wikipedia.org/wiki/Application_programming_interface\">API</a>, <a href=\"https://en.wikipedia.org/wiki/Daemon_(computing)\">daemon</a>, and management tool for managing <a href=\"https://en.wikipedia.org/wiki/Platform_virtualization\">platform virtualization</a>. It can be used to manage <a href=\"https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine\">KVM</a>, <a href=\"https://en.wikipedia.org/wiki/Xen\">Xen</a>, <a href=\"https://en.wikipedia.org/wiki/VMware_ESXi\">VMware ESXi</a>, <a href=\"https://en.wikipedia.org/wiki/QEMU\">QEMU</a>, and other virtualization technologies. This new capability expands Nomad’s ability to run any workload anywhere, including virtual machines. </p>\n\n<p>The new Virt task driver offers the following capabilities:</p>\n\n<ul>\n<li>Start and stop a virtual machine and run a process on it</li>\n<li>Assign a workload identity to the running task inside the virtual machine</li>\n<li>Pass configuration values from Vault or other services using <a href=\"https://github.com/hashicorp/consul-template\">consul-template</a></li>\n<li>Mount host directories into virtual machines to procure the allocation and task directories inside them</li>\n<li>Configure port forwarding from the Nomad node to the virtual machine</li>\n<li>Access the running task through the task API</li>\n</ul>\n\n<p>This new task driver is in beta and we are actively seeking feedback. We’d like to hear more about your use cases.</p>\n\n<h2>Improved IPv6 support</h2>\n\n<p>Improvements have been made to support Nomad’s IPv6 capabilities. We have tested and resolved some known issues with server-to-server and server-to-client communications. Additionally, we have tested the Nomad CLI and UI service integrations with Consul and Vault, workload identity, service registration, host networking, bridge networking, and the Docker driver. More work will likely need to be done with IPv6 support as we explore integrations with Consul service mesh.</p>\n\n<h2>Deprecations</h2>\n\n<p>Nomad 1.9 deprecates the following:</p>\n\n<ul>\n<li>Nomad has removed support for HCL1 job specifications and the <code>-hcl1</code> flag on <code>nomad job run</code> and other commands. Refer to <a href=\"https://github.com/hashicorp/nomad/issues/20195\">GH-20195</a> for more details.</li>\n<li>Nomad has removed the <code>tls_prefer_server_cipher_suites</code> agent configuration from the <a href=\"https://developer.hashicorp.com/nomad/docs/configuration/tls\">TLS block</a>.</li>\n<li>Nomad has removed support for Nomad client agents older than 1.6.0. Older nodes will fail heartbeats. Nomad servers will mark the workloads on Nomad client agents older than 1.6.0 as lost and reschedule them normally according to the job's <a href=\"https://developer.hashicorp.com/nomad/docs/job-specification/reschedule\">reschedule</a> block.</li>\n<li>The <a href=\"https://github.com/hashicorp/nomad-driver-lxc\">LXC task driver</a> and <a href=\"https://github.com/hashicorp/nomad-driver-ecs\">ECS task driver</a> projects have been archived with the release of Nomad 1.9 and are no longer supported.  Both plug-ins are maintained separately from the Nomad core project and are not subject to the <a href=\"https://www.hashicorp.com/long-term-support\">LTS program</a>. </li>\n</ul>\n\n<h2>Getting started with Nomad 1.9</h2>\n\n<p>Nomad 1.9 adds a variety of new features and enhancements. We encourage you to try them out:</p>\n\n<ul>\n<li><a href=\"https://developer.hashicorp.com/nomad/install\">Download Nomad 1.9</a> from the project website.</li>\n<li>Learn more about Nomad with <a href=\"https://developer.hashicorp.com/nomad/tutorials\">tutorials on the HashiCorp Developer site</a>.</li>\n<li>Contribute to Nomad by submitting a pull request for a GitHub issue with the “<a href=\"https://github.com/hashicorp/nomad/issues?q=is%3Aopen+is%3Aissue+label%3Ahelp-wanted\">help wanted</a>” or “<a href=\"https://github.com/hashicorp/nomad/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22\">good first issue</a>” label.</li>\n<li><a href=\"https://www.nomadproject.io/community\">Participate in our community</a> forums, office hours, and other events.</li>\n<li>To learn more about how Nomad can solve your business-critical workload orchestration needs, <a href=\"https://www.hashicorp.com/contact-sales\">talk to our sales team and solutions engineers</a> about test-driving Nomad Enterprise.</li>\n</ul>\n","author":"Matt McQuillan","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"6286b7926ed3458f2b5843c18175762477381f13f0b5176f7c0eca6f2f8b95f0","category":"Tech"}