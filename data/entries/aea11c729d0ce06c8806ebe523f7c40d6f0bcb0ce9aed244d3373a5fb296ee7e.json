{"title":"Highly invasive backdoor snuck into open source packages targets developers","link":"https://arstechnica.com/?p=1982281","date":1699468067000,"content":"<div>\n<figure>\n  <img src=\"https://cdn.arstechnica.net/wp-content/uploads/2023/06/malware-800x451.jpg\" alt=\"Highly invasive backdoor snuck into open source packages targets developers\" />\n      <p><a href=\"https://cdn.arstechnica.net/wp-content/uploads/2023/06/malware.jpg\">Enlarge</a> (credit: Getty Images)</p>  </figure>\n\n\n\n\n\n\n<div><a name=\"page-1\"></a></div>\n<p>Highly invasive malware targeting software developers is once again circulating in Trojanized code libraries, with the latest ones downloaded thousands of times in the last eight months, researchers said Wednesday.</p>\n<p>Since January, eight separate developer tools have contained hidden payloads with various nefarious capabilities, security firm Checkmarx <a href=\"https://checkmarx.com/blog/python-obfuscation-traps/\">reported</a>. The most recent one was released last month under the name \"pyobfgood.\" Like the seven packages that preceded it, pyobfgood posed as a legitimate obfuscation tool that developers could use to deter reverse engineering and tampering with their code. Once executed, it installed a payload, giving the attacker almost complete control of the developerâ€™s machine. Capabilities include:</p>\n<ul>\n<li>Exfiltrate detailed host information</li>\n<li>Steal passwords from the Chrome web browser</li>\n<li>Set up a keylogger</li>\n<li>Download files from the victim's system</li>\n<li>Capture screenshots and record both screen and audio</li>\n<li>Render the computer inoperative by ramping up CPU usage, inserting a batch script in the startup directory to shut down the PC, or forcing a BSOD error with a Python script</li>\n<li>Encrypt files, potentially for ransom</li>\n<li>Deactivate Windows Defender and Task Manager</li>\n<li>Execute any command on the compromised host</li>\n</ul>\n<p>In all, pyobfgood and the previous seven tools were installed 2,348 times. They targeted developers using the Python programming language. As obfuscators, the tools targeted Python developers with reason to keep their code secret because it had hidden capabilities, trade secrets, or otherwise sensitive functions. The malicious payloads varied from tool to tool, but they all were remarkable for their level of intrusiveness.</p></div><p><a href=\"https://arstechnica.com/?p=1982281#p3\">Read 10 remaining paragraphs</a> | <a href=\"https://arstechnica.com/?p=1982281&amp;comments=1\">Comments</a></p>","author":"Dan Goodin","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"aea11c729d0ce06c8806ebe523f7c40d6f0bcb0ce9aed244d3373a5fb296ee7e","category":"Tech"}