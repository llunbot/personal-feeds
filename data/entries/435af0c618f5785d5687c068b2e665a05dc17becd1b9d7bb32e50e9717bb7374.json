{"title":"★ Disambiguating iPhone Model Names That Have the ‘S’ Suffix","link":"https://daringfireball.net/2024/11/disambiguating_iphone_model_names_that_have_the_s_suffix","date":1731453127000,"content":"\n<p>Here’s the Apple support page <a href=\"https://support.apple.com/guide/iphone/iphone-models-compatible-with-ios-18-iphe3fa5df43/ios\">listing the devices compatible with iOS 18</a>. They’re listed in chronological order, oldest to newest, and the list begins with the iPhone XR and iPhone XS from 2018. But on this support page, Apple styles the “R” and “S” suffixes as small caps. Screenshot:</p>\n\n<p><img src=\"https://daringfireball.net/misc/2024/11/ios-18-compatible-models.png\" alt=\"Screenshot from the linked Apple support page, showing the S in “iPhone XS” and R in “iPhone XR” styled with small caps.\" width=\"525\" /></p>\n\n<p>Earlier today <a href=\"https://daringfireball.net/linked/2024/11/12/find-my-airtags-airlines\">I linked</a> to <a href=\"https://www.apple.com/newsroom/2024/11/apples-find-my-enables-sharing-location-of-lost-items-with-third-parties/\">this Apple Newsroom post</a>, regarding the new “Share Location” feature in Find My in iOS 18.2 beta 3. The Apple Newsroom post contains this sentence on iOS 18 compatibility:</p>\n\n<blockquote>\n  <p>Share Item Location is available now in most regions worldwide as\npart of the public beta of iOS 18.2, which will soon be available\nto all users as a free software update for iPhone Xs and later.</p>\n</blockquote>\n\n<p>Is that the iPhone XS, styled with a lowercase <em>s</em>? Or are they referring to 2017’s iPhone X, and pluralizing it with the lowercase <em>s</em>? By nature of my work, I know that Apple’s internal style is never to pluralize a product name like “iPhone X” by adding an <em>s</em>; they would write something like “iPhone X models” or “iPhone X devices”. But to the casual reader, it’s ambiguous. I wound up double-checking on Apple’s aforelinked support page for iOS 18 device compatibility, just to be sure. And even there it’s only clear because a small caps <em>R</em> has a distinctive uppercase letterform.</p>\n\n<p>Apple’s S suffix for certain iPhone models — 3GS, 4S, 5S, 6S, XS — has always been problematic in this regard. It’s a particular problem for publications with an all-caps headline style, such as posts here on Daring Fireball. <a href=\"https://daringfireball.net/linked/2008/07/18/iphone-supply\">This post from July 2008</a>, shortly after the iPhone 3G came out, is headlined “iPhone 3Gs in Short Supply”, but when you see it styled on DF itself, <a href=\"https://daringfireball.net/misc/2024/11/iphone-3g-plural-s-2008.png\">it looks like</a> “IPHONE 3GS IN SHORT SUPPLY”. At the time I wrote that, it wasn’t confusing at all — the iPhone 3G had only started shipping a few weeks prior, so the iPhone 3GS didn’t even exist yet (and with the 3G being the second-ever iPhone model, there wasn’t yet any history of Apple applying an S suffix to a model name). If I had it to do all over again, I’d have used an apostrophe (“iPhone 3G’s in Short Supply”) or just omitted pluralizing it in the first place (“iPhone 3G in Short Supply”).<sup><a href=\"#fn1-2024-11-12\">1</a></sup></p>\n\n<p>But the letter S has a second ambiguity problem, in addition to pluralization: its upper and lowercase letterforms are distinguished only by size, not shape, in most roman fonts. That means if you try to distinguish it via the use of small caps, it’s to no avail, because a small caps uppercase <em>S</em> looks nearly (if not completely) identical to a lowercase <em>s</em>. And in fact, that’s exactly how Apple tends to style the <em>S</em> and <em>R</em> in “iPhone XS” and “iPhone XR”, as evidenced by the screenshot above showing the device compatibility list for iOS 18.</p>\n\n<p>Viewing the HTML source on Apple Newsroom shows that that’s how they’ve styled “XS” in today’s post:</p>\n\n<pre><code>iPhone X&lt;span class=\"all-small-caps\"&gt;s&lt;/span&gt; and later\n</code></pre>\n\n<p>The <code>all-small-caps</code> class is a simple one-rule style defined <a href=\"https://www.apple.com/newsroom/styles/site.built.css\">in the Apple Newsroom CSS</a>:<sup><a href=\"#fn2-2024-11-12\">2</a></sup></p>\n\n<pre><code>.all-small-caps {\n    font-variant-caps:all-small-caps\n}\n</code></pre>\n\n<p>Here’s where I think Apple could do better. In their HTML markup, they should use an uppercase <em>S</em> inside the <code>span</code> tag delineating the small caps. They should do this:</p>\n\n<pre><code>&lt;span class=\"all-small-caps\"&gt;S&lt;/span&gt;\n</code></pre>\n\n<p>instead of this:</p>\n\n<pre><code>&lt;span class=\"all-small-caps\"&gt;s&lt;/span&gt;\n</code></pre>\n\n<p>Both of those will render the <em>s</em> in small caps in the browser. But when a user copies and pastes the text from the rendered output in their browser, they’ll get the <em>S</em> or <em>s</em> in the same case it is in the HTML, because small-caps styling doesn’t carry across copy-and-pasting. Whether the original HTML markup uses an uppercase <em>S</em> or lowercase <em>s</em> inside the <code>all-small-caps</code> span, the rendered output users see in their web browser will be a small caps <em>S</em>. But what the user gets when copying and pasting will fall back to the actual case of the <em>S</em> in the HTML code.</p>\n\n<p>Ideally, Apple wants us to see that <em>S</em> in small caps. But it’s inevitably going to fall back to simple upper or lowercase after copying and pasting, and in that situation (yes, I was tempted mightily to write <em>case</em> there), it’s clearly better to fall back on uppercase, giving copy-and-pasters the unambiguous “iPhone XS”.</p>\n\n<p>Anyway, I’m glad Apple has seemingly abandoned these S-suffixed iPhone names. Next year when the XS and XR age out of support for iOS 19, we might be done writing about them in the present tense.</p>\n\n<div>\n<hr />\n<ol>\n\n<li>\n<p>It’s a mistake, and a suggestion of low literacy, to erroneously use the apostrophe-s sequence to pluralize words or names where the proper way to spell the plural is to just add <em>s</em>. E.g., Apple employees are said to <em>bleed six colors</em>, not <em>bleed six color’s</em>. You surely know this. For chrissake you’re reading a footnote in a persnickety post regarding best practices in HTML markup for disambiguating product names in uncommon edge cases. But it’s not true that one should never form plurals using apostrophes. Per <a href=\"https://www.amazon.com/York-Times-Manual-Style-Usage-dp-1101905441/dp/1101905441/?tag=df-amzn-20\">The New York Times Manual of Style and Usage</a>: “Use apostrophes for plurals formed from single letters: <em>He received A’s and B’s on his report card. Mind your p’s and q’s.</em>” <a href=\"https://daringfireball.net/misc/df-style-guide.text\">My own style guide</a> goes further, and endorses apostrophes for plurals of initialisms in headlines (because of DF’s all-caps headline style for short posts), to make clear that in a headline such as, say, “Truckers Are Still Buying CB’s”, that they’re buying two-way radios, not the television network. <a href=\"#fnr1-2024-11-12\">↩︎</a></p>\n</li>\n\n<li>\n<p>I, for one, do not care for Apple’s CSS coding style that <a href=\"https://stackoverflow.com/questions/11939595/leaving-out-the-last-semicolon-of-a-css-block\">omits the optional trailing semicolon</a> from the last rule in a block. Makes me just a tad itchy when I see that. <a href=\"#fnr2-2024-11-12\">↩︎︎</a></p>\n</li>\n\n</ol>\n</div>\n\n\n\n    ","author":"John Gruber","siteTitle":"Daring Fireball","siteHash":"fc569638025dadf22a867470f8215f38855cf50e975782a6c989909474292a36","entryHash":"435af0c618f5785d5687c068b2e665a05dc17becd1b9d7bb32e50e9717bb7374","category":"Tech"}