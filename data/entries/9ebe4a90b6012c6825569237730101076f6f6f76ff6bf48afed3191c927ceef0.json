{"title":"From Beta to Bedrock: Build Products that Stick.","link":"https://alistapart.com/article/from-beta-to-bedrock-build-products-that-stick/","date":1745431471000,"content":"\n<p>As a product builder over too many years to mention, I've lost count of the number of times I've seen promising ideas go from zero to hero in a few weeks, only to fizzle out within months.</p>\n\n\n\n<p>Financial products, which is the field I work in, are no exception. With people’s real hard-earned money on the line, user expectations running high, and a crowded market, it's tempting to throw as many features at the wall as possible and hope something sticks. But this approach is a recipe for disaster. Here's why:</p>\n\n\n\n<h2>The pitfalls of feature-first development</h2>\n\n\n\n<p>When you start building a financial product from the ground up, or are migrating existing customer journeys from paper or telephony channels onto online banking or mobile apps, it's easy to get caught up in the excitement of creating new features. You might think, \"If I can just add one more thing that solves this particular user problem, they'll love me!\" But what happens when you inevitably hit a roadblock because the narcs (your security team!) don’t like it? When a hard-fought feature isn't as popular as you thought, or it breaks due to unforeseen complexity?</p>\n\n\n\n<p>This is where the concept of Minimum Viable Product (MVP) comes in. Jason Fried's book <a href=\"https://basecamp.com/gettingreal\"><em>Getting Real</em></a> and his podcast <a href=\"https://37signals.com/podcast/\">Rework</a> often touch on this idea, even if he doesn’t always call it that. An MVP is a product that provides just enough value to your users to keep them engaged, but not so much that it becomes overwhelming or difficult to maintain. It sounds like an easy concept but it requires a razor sharp eye, a ruthless edge and having the courage to stick by your opinion because it is easy to be seduced by “the Columbo Effect”… when there’s always “<a href=\"https://www.youtube.com/watch?v=vYgUPD2khtw\">just one more thing…</a>” that someone wants to add.</p>\n\n\n\n<p>The problem with most finance apps, however, is that they often become a reflection of the internal politics of the business rather than an experience solely designed around the customer. This means that the focus is on delivering as many features and functionalities as possible to satisfy the needs and desires of competing internal departments, rather than providing a clear value proposition that is focused on what the people out there in the real world want. As a result, these products can very easily bloat to become a mixed bag of confusing, unrelated and ultimately unlovable customer experiences—a feature salad, you might say.</p>\n\n\n\n<h2>The importance of bedrock</h2>\n\n\n\n<p>So what's a better approach? How can we build products that are stable, user-friendly, and—most importantly—stick?</p>\n\n\n\n<p>That's where the concept of \"bedrock\" comes in. Bedrock is the core element of your product that truly matters to users. It's the fundamental building block that provides value and stays relevant over time.</p>\n\n\n\n<p>In the world of retail banking, which is where I work, the bedrock has got to be in and around the regular servicing journeys. People open their current account once in a blue moon but they look at it every day. They sign up for a credit card every year or two, but they check their balance and pay their bill at least once a month.</p>\n\n\n\n<p>Identifying the core tasks that people want to do and then relentlessly striving to make them easy to do, dependable, and trustworthy is where the gravy’s at.</p>\n\n\n\n<p>But how do you get to bedrock? By focusing on the \"MVP\" approach, prioritizing simplicity, and iterating towards a clear value proposition. This means cutting out unnecessary features and focusing on delivering real value to your users.</p>\n\n\n\n<p>It also means having some guts, because your colleagues might not always instantly share your vision to start with. And controversially, sometimes it can even mean making it clear to customers that you’re not going to come to their house and make their dinner. The occasional “opinionated user interface design” (i.e. clunky workaround for edge cases) might sometimes be what you need to use to test a concept or buy you space to work on something more important.</p>\n\n\n\n<h2>Practical strategies for building financial products that stick</h2>\n\n\n\n<p>So what are the key strategies I've learned from my own experience and research?</p>\n\n\n\n<ol>\n<li>Start with a clear \"why\": What problem are you trying to solve? For whom? Make sure your mission is crystal clear before building anything. Make sure it aligns with your company’s objectives, too.</li>\n\n\n\n<li>Focus on a single, core feature and obsess on getting that right before moving on to something else: Resist the temptation to add too many features at once. Instead, choose one that delivers real value and iterate from there.</li>\n\n\n\n<li>Prioritize simplicity over complexity: Less is often more when it comes to financial products. Cut out unnecessary bells and whistles and keep the focus on what matters most.</li>\n\n\n\n<li>Embrace continuous iteration: Bedrock isn't a fixed destination—it's a dynamic process. Continuously gather user feedback, refine your product, and iterate towards that bedrock state.</li>\n\n\n\n<li>Stop, look and listen: Don't just test your product as part of your delivery process—test it repeatedly in the field. Use it yourself. Run A/B tests. Gather user feedback. Talk to people who use it, and refine accordingly.</li>\n</ol>\n\n\n\n<h2>The bedrock paradox</h2>\n\n\n\n<p>There's an interesting paradox at play here: building towards bedrock means sacrificing some short-term growth potential in favour of long-term stability. But the payoff is worth it—products built with a focus on bedrock will outlast and outperform their competitors, and deliver sustained value to users over time.</p>\n\n\n\n<p>So, how do you start your journey towards bedrock? Take it one step at a time. Start by identifying those core elements that truly matter to your users. Focus on building and refining a single, powerful feature that delivers real value. And above all, test obsessively—for, in the words of Abraham Lincoln, Alan Kay, or Peter Drucker (whomever you believe!!), “The best way to predict the future is to create it.”</p>\n","author":"","siteTitle":"A List Apart: The Full Feed","siteHash":"09b09f389b84b264a6ebab120b6208479961d3fe7df4850a75b103b2b9c8a950","entryHash":"9ebe4a90b6012c6825569237730101076f6f6f76ff6bf48afed3191c927ceef0","category":"Tech"}