{"title":"EC2 Image Builder now supports building and testing macOS images","link":"https://aws.amazon.com/blogs/aws/ec2-image-builder-now-supports-building-and-testing-macos-images/","date":1729705939000,"content":"<p>I’m thrilled to announce <a href=\"https://en.wikipedia.org/wiki/MacOS\">macOS</a> support in <a href=\"https://aws.amazon.com/image-builder/\">EC2 Image Builder</a>. This new capability allows you to create and manage machine images for your macOS workloads in addition to the existing support for Windows and Linux.</p> \n<p>A golden image is a bootable disk image, also called an <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html\">Amazon Machine Image (AMI)</a>, pre-installed with the operating system and all the tools required for your workloads. In the context of a continuous integration and continuous deployment (CI/CD) pipeline, your golden image most probably contains the specific version of your operating system (macOS) and all required development tools and libraries to build and test your applications (<a href=\"https://developer.apple.com/xcode/\">Xcode</a>, <a href=\"https://fastlane.tools/\">Fastlane</a>, and so on.)</p> \n<p>Developing and manually managing pipelines to build macOS golden images is time-consuming and diverts talented resources from other tasks. And when you have existing pipelines to build Linux or Windows images, you need to use different tools for creating macOS images, leading to a disjointed workflow.</p> \n<p>For these reasons, many of you have been asking for the ability to manage your macOS images using EC2 Image Builder. You want to consolidate your image pipelines across operating systems and take advantage of the automation and cloud-centered integrations that EC2 Image Builder provides.</p> \n<p>By adding macOS support to EC2 Image Builder, you can now streamline your image management processes and reduce the operational overhead of maintaining macOS images. EC2 Image Builder takes care of testing, versioning, and validating the base images at scale, saving you the costs associated with maintaining your preferred macOS versions.</p> \n<p><span><strong>Let’s see it in action<br /> </strong></span>Let’s create a pipeline to create a macOS AMI with Xcode 16. You can follow a similar process to install Fastlane on your AMIs.</p> \n<p>At a high level, there are four main steps.</p> \n<ol> \n <li>I define a component for each tool I want to install. A component is a <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/userguide/toe-use-documents.html\">YAML document</a> that tells EC2 Image Builder what application to install and how. In this example, I create a custom component to install Xcode. If you want to install Fastlane, you create a second component. I use the <code>ExecuteBash</code> action to enter the shell commands required to install Xcode.</li> \n <li>I define a <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/userguide/manage-recipes.html\">recipe</a>. A recipe starts from a base image and lists the components I want to install on it.</li> \n <li>I define the <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/userguide/manage-infra-config.html\">infrastructure configuration</a> I want to use to build my image. This defines the pool of <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a> instances to build the image. In my case, I allocate an EC2 Mac Dedicated Host in my account and reference it in the infrastructure configuration.</li> \n <li>I create a pipeline and a schedule to run on the infrastructure with the given recipes and an <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/userguide/manage-image-workflows.html\">image workflow</a>. I test the output AMI and deliver it at the chosen destination (my account or another account)</li> \n</ol> \n<p>It’s much easier than it sounds. I’ll show you the steps in the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>. I can also configure EC2 Image Builder with the <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface (AWS CLI)</a> or write code using one of our <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a>.</p> \n<p><span><strong>Step 1: Create a component<br /> </strong></span>I open the console and select <strong>EC2 Image Builder</strong>, then <strong>Components</strong>, and finally <strong>Create component</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_08-51-09.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_08-51-09.png\" alt=\"Image Builder - Create component\" width=\"800\" height=\"554\" /></a></p> \n<p>I select a base <strong>Image operating system </strong>and the <strong>Compatible OS Versions</strong>. Then, I enter a <strong>Component name</strong> and <strong>Component version</strong>. I select <strong>Define document content</strong> and enter this YAML as <strong>Content</strong>.</p> \n<pre><code>name: InstallXCodeDocument\ndescription: This downloads and installs Xcode. Be sure to run `xcodeinstall authenticate -s us-east-1` from your laptop first.\nschemaVersion: 1.0\n\nphases:\n  - name: build\n    steps:\n      - name: InstallXcode\n        action: ExecuteBash\n        inputs:\n          commands:\n             - sudo -u ec2-user /opt/homebrew/bin/brew tap sebsto/macos\n             - sudo -u ec2-user /opt/homebrew/bin/brew install xcodeinstall\n             - sudo -u ec2-user /opt/homebrew/bin/xcodeinstall download -s us-east-1 --name \"Xcode 16.xip\"\n             - sudo -u ec2-user /opt/homebrew/bin/xcodeinstall install --name \"Xcode 16.xip\"\n  \n  - name: validate\n    steps:\n      - name: TestXcode\n        action: ExecuteBash\n        inputs:\n          commands:\n            -  xcodebuild -version &amp;&amp; xcode-select -p   </code></pre> \n<p>I use a tool I wrote to download and install Xcode from the command line. <a href=\"https://github.com/sebsto/xcodeinstall\">xcodeinstall</a> integrates with <a href=\"https://aws.amazon.com/secrets-manager/\">AWS Secrets Manager</a> to securely store authentication web tokens. Before running the pipeline, I authenticate <strong>from my laptop</strong> with the command <code>xcodeinstall authenticate -s us-east-1</code>. This command starts a session with Apple server’s and stores the session token in Secrets Manager. xcodeinstall uses this token during the image creation pipeline to download Xcode.</p> \n<p>When you use xcodeinstall with Secrets Manager, you must give permission to your pipeline to access the secrets. Here is the policy document I added to the role attached to the EC2 instance used by EC2 Image Builder (in the following infrastructure configuration).</p> \n<pre><code>{\n\t\"Sid\": \"xcodeinstall\",\n\t\"Effect\": \"Allow\",\n\t\"Action\": [\n            \"secretsmanager:GetSecretValue\"\n            \"secretsmanager:PutSecretValue\"\n        ],\n\t\"Resource\": \"arn:aws:secretsmanager:us-east-1:&lt;YOUR ACCOUNT ID&gt;:secret:xcodeinstall*\"\n}</code></pre> \n<p>To test and debug these components locally, without having to wait for long cycle to start and recycle the EC2 Mac instance, you can use the <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/userguide/toe-get-started.html\">AWS Task Orchestrator and Executor (AWSTOE) command</a>.</p> \n<p><span><strong>Step 2: Create a recipe<br /> </strong></span>The next step is to create a recipe. On the console, I select <strong>Image recipes</strong> and <strong>Create image recipe</strong>.</p> \n<p>I select macOS as the base <strong>Image Operating System</strong>. I choose macOS Sonoma ARM64 as <strong>Image name</strong>.</p> \n<p>In the <strong>Build components</strong> section, I select the Xcode 16 component I just created during step 1.</p> \n<p>Finally, I make sure the volume is large enough to store the operating system, Xcode, and my builds. I usually select a 500 Gb <code>gp3</code> volume.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-36-20.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-36-20.png\" alt=\"Image Builder - Create a recipe\" width=\"800\" height=\"2883\" /></a></p> \n<p><span><strong>Steps 3 and 4: Create the pipeline (and the infrastructure configuration)<br /> </strong></span>On the <strong>EC2 Image Builder</strong> page, I select <strong>Image pipelines</strong> and <strong>Create image pipeline</strong>. I give my pipeline a name and select a <strong>Build schedule</strong>. For this demo, I select a manual trigger.<a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-40-32-2.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-40-32-2.png\" alt=\"Image Builder - Create Pipeline 1\" width=\"1287\" height=\"1040\" /></a></p> \n<p>Then, I select the recipe I just created (Sonoma-Xcode).</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-41-15.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-41-15.png\" alt=\"Image Builder - Create Pipeline 2\" width=\"1329\" height=\"1187\" /></a></p> \n<p>I chose <strong>Default workflows</strong> for <strong>Define image creation process</strong> (not shown for brevity).</p> \n<p>I create or select an existing <strong>infrastructure configuration</strong>. In the context of building macOS images, you have to allocate <a href=\"https://aws.amazon.com/ec2/dedicated-hosts/getting-started/\">Amazon EC2 Dedicated Hosts</a> first. This is where I choose the instance type that EC2 Image Builder will use to create the AMI. I may also optionally select my virtual private cloud (VPC), security group, <a href=\"https://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a> roles with permissions required during the preparation of the image, key pair, and all the parameters I usually select when I start an EC2 instance.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-51-49.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-51-49.png\" alt=\"Image Builder - Create Pipeline 4\" width=\"1319\" height=\"988\" /></a></p> \n<p>Finally, I select where I want to distribute the output AMI. By default, it stays on my account. But I can also share or copy it to other accounts.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-52-08.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-52-08.png\" alt=\"Image Builder - Create Pipeline 5\" width=\"1337\" height=\"776\" /></a></p> \n<p><span><strong>Run the pipeline<br /> </strong></span>Now I’m ready to run the pipeline. I select <strong>Image pipelines</strong>, then I select the pipeline I just created (<strong>Sonoma-Xcode</strong>). From the <strong>Actions</strong> menu, I select <strong>Run pipeline</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-55-22.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/01/2024-10-01_10-55-22.png\" alt=\"Image Builder - launch pipeline\" width=\"800\" height=\"392\" /></a></p> \n<p>I can observe the progress and the detailed logs from <a href=\"https://aws.amazon.com/cloudwatch/\">Amazon CloudWatch</a>.</p> \n<p>After a while, the AMI is created and ready to use.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/02/2024-10-02_08-36-51.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/02/2024-10-02_08-36-51.png\" alt=\"Image Builder - AMI build succeeded\" width=\"800\" height=\"409\" /></a></p> \n<p><span><strong>Testing my AMI</strong></span><br /> To finish the demo, I start an EC2 Mac instance with the AMI I just created (remember to allocate a Dedicated Host first or to reuse the one you used for EC2 Image Builder).</p> \n<p>Once the instance is started, I connect to it using secure shell (SSH) and verify that Xcode is correctly installed.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/02/2024-10-02_10-50-39.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/10/02/2024-10-02_10-50-39.png\" alt=\"Image Builder - Connect to new AMI\" width=\"1674\" height=\"692\" /></a></p> \n<p><span><strong>Pricing and availability<br /> </strong></span>EC2 Image Builder for macOS is now available in all AWS Regions <a href=\"https://docs.aws.amazon.com/ec2/latest/instancetypes/ec2-instance-regions.html\">where EC2 Mac instances are available</a>: US East (Ohio, N. Virginia), US West (Oregon), Asia Pacific (Mumbai, Seoul, Singapore, Sydney, Tokyo), and Europe (Frankfurt, Ireland, London, Stockholm) (not all Mac instance types are available in all Regions).</p> \n<p>It comes at no additional cost, and you’re only charged for the resources in use during the pipeline execution, namely the time your EC2 Mac Dedicated Host is allocated, with a minimum of 24 hours.</p> \n<p>The preview of macOS support in EC2 Image Builder allows you to consolidate your image pipelines, automate your golden image creation processes, and use the benefits of cloud-focused integrations on AWS. As the EC2 Mac platform continues to expand with more instance types, this new capability positions EC2 Image Builder as a comprehensive solution for image management across Windows, Linux, and macOS.</p> \n<p><strong><a href=\"https://console.aws.amazon.com/imagebuilder/home\">Create your first pipeline today! </a></strong></p> \n<a href=\"https://twitter.com/sebsto\">-- seb</a>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"0be7c640346aefa3b1f4e5b91f04bf520ce5fc451f0a2312b1da9b0d0fe39c13","category":"Tech"}