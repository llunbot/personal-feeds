{"title":"Use AWS Fault Injection Service to demonstrate multi-region and multi-AZ application resilience","link":"https://aws.amazon.com/blogs/aws/use-aws-fault-injection-service-to-demonstrate-multi-region-and-multi-az-application-resilience/","date":1701370394000,"content":"<p><a href=\"http://aws.amazon.com/fis\">AWS Fault Injection Service (FIS)</a> helps you to put chaos engineering into practice at scale. Today we are launching new <a href=\"https://aws.amazon.com/about-aws/whats-new/2023/11/aws-fault-injection-simulator-scenarios-scheduled-experiments/\">scenarios</a> that will let you demonstrate that your applications perform as intended if an AWS Availability Zone experiences a full power interruption or connectivity from one AWS region to another is lost.</p> \n<p>You can use the scenarios to conduct experiments that will build confidence that your application (whether single-region or multi-region) works as expected when something goes wrong, help you to gain a better understanding of direct and indirect dependencies, and test recovery time. After you have put your application through its paces and know that it works as expected, you can use the results of the experiment for compliance purposes. When used in conjunction with other parts of <a href=\"https://aws.amazon.com/resilience-hub/\">AWS Resilience Hub</a>, <span>FIS</span> can help you to fully understand the overall <a href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/resilience-lifecycle-framework/introduction.html\">resilience posture</a> of your applications.</p> \n<p><span><strong>Intro to Scenarios</strong></span><br /> We launched FIS in 2021 to help you perform controlled experiments on your AWS applications. In the <a href=\"https://aws.amazon.com/blogs/aws/aws-fault-injection-simulator-use-controlled-experiments-to-boost-resilience/\">post that I wrote</a> to announce that launch, I showed you how to create experiment templates and to use them to conduct experiments. The experiments are built using powerful, low-level actions that affect specified groups of AWS resources of a particular type. For example, the following actions operate on EC2 instances and Auto Scaling Groups:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/09/fis_ec2_actions_2.png\" width=\"505\" height=\"416\" /></p> \n<p>With these actions as building blocks, we recently launched the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/scenario-library.html\">AWS FIS Scenario Library</a>. Each scenario in the library defines events or conditions that you can use to test the resilience of your applications:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/18/fis_scenarios_2.png\" width=\"900\" height=\"828\" /></p> \n<p>Each scenario is used to create an experiment template. You can use the scenarios as-is, or you can take any template as a starting point and customize or enhance it as desired.</p> \n<p>The scenarios can target resources in the same AWS account or in other AWS accounts:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/18/fis_acct_targeting_1-1.png\" width=\"601\" height=\"200\" /></p> \n<p><span><strong>New Scenarios</strong></span><br /> With all of that as background, let’s take a look at the new scenarios.</p> \n<p><strong>AZ Availability: Power Interruption</strong> – This scenario temporarily “pulls the plug” on a targeted set of your resources in a single Availability Zone including EC2 instances (including those in EKS and ECS clusters), EBS volumes, Auto Scaling Groups, VPC subnets, <a href=\"https://aws.amazon.com/elasticache/redis/\">Amazon ElastiCache for Redis</a> clusters, and <a href=\"https://aws.amazon.com/rds/\">Amazon Relational Database Service (RDS)</a> clusters. In most cases you will run it on an application that has resources in more than one Availability Zone, but you can run it on a single-AZ app with an outage as the expected outcome. It targets a single AZ, and also allows you to disallow a specified set of IAM roles or Auto Scaling Groups from being able to launch fresh instances or start stopped instances during the experiment.</p> \n<p>The <strong>New actions and targets experience</strong> makes it easy to see everything at a glance — the actions in the scenario and the types of AWS resources that they affect:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/18/fis_az_scenario_2.png\" width=\"700\" height=\"1058\" /></p> \n<p>The scenarios include parameters that are used to customize the experiment template:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/18/fis_az_params_2.png\" width=\"700\" height=\"588\" /></p> \n<p>The <strong>Advanced parameters – targeting tags</strong> lets you control the tag keys and values that will be used to locate the resources targeted by experiments:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/09/fis_az_tags_1.png\" width=\"800\" height=\"538\" /></p> \n<p><strong>Cross-Region: Connectivity</strong> – This scenario prevents your application in a test region from being able to access resources in a target region. This includes traffic from EC2 instances, ECS tasks, EKS pods, and Lambda functions attached to a VPC. It also includes traffic flowing across <a href=\"https://aws.amazon.com/transit-gateway/\">Transit Gateways</a> and <a href=\"https://aws.amazon.com/blogs/aws/new-vpc-peering-for-the-amazon-virtual-private-cloud/\">VPC peering</a> connections, as well as cross-region S3 and DynamoDB replication. The scenario looks like this out of the box:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/18/fis_reg_scenario_1.png\" width=\"600\" height=\"947\" /></p> \n<p>This scenario runs for 3 hours (unless you change the <strong>disruptionDuration</strong> parameter), and isolates the test region from the target region in the specified ways, with advanced parameters to control the tags that are used to select the affected AWS resources in the isolated region:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/18/fis_reg_scenario_parmesan_1.png\" width=\"774\" height=\"989\" /></p> \n<p>You might also find that the <strong>Disrupt</strong> and <strong>Pause</strong> actions used in this scenario useful on their own:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/18/fis_disrupt_1.png\" width=\"423\" height=\"304\" /></p> \n<p>For example, the <strong>aws:s3:bucket-pause-replication</strong> action can be used to pause replication within a region.</p> \n<p><span><strong>Things to Know</strong></span><br /> Here are a couple of things to know about the new scenarios:</p> \n<p><strong>Regions</strong> – The new scenarios are available in all commercial AWS Regions where FIS is available, at no additional cost.</p> \n<p><strong>Pricing</strong> – You pay for the action-minutes consumed by the experiments that you run; see the <a href=\"https://aws.amazon.com/fis/pricing/\">AWS Fault Injection Service Pricing</a> Page for more info.<strong><br /> </strong></p> \n<p><strong>Naming</strong> – This service was formerly called AWS Fault Injection Simulator.</p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"f1f9da6f77126e2b84af8bff6cc0284a5bb92833a69ec3c575e2fb7606e921cc","category":"Tech"}