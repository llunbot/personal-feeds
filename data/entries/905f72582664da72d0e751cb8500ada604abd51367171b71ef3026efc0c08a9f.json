{"title":"The Big Difference Between Digital Product And Web Design","link":"https://smashingmagazine.com/2024/09/big-difference-between-digital-product-and-web-design/","date":1725354000000,"content":"<p>In the early days of the web, I remember how annoying it was when print designers would claim they could design websites, too. They assumed that just because they could design for one medium, they could design for the other.</p>\n<p>That assumption often led to bad user experiences. The skills for effective web design are quite different from those for print design.</p>\n<p>A similar thing happens today. Designers know how to design traditional marketing and e-commerce sites. They, therefore, presume they have the skills to work on SaaS apps and other digital projects.</p>\n<p>But when it comes to design, there’s <strong>a big distinction between traditional websites and digital products</strong>. If we want to work on digital products, we need to understand those differences and adopt a different approach to our work.</p>\nPeople Interact with Digital Products More Regularly\n<p>The biggest difference is that users interact with digital products <em>more</em> than most websites.</p>\n<p>Think about your own web use. What are the sites you visit most often? If you listed your top ten, well over half would be some form of digital product, from a social media application to a productivity tool.</p>\n<p>So, with that in mind, let’s dive into the specifics of <em>how</em> the frequency of usage impacts our design approach and what we can do about it.</p>\nWhy Frequency of Use Matters So Much\n<p>The more we interact with a web app or website, the more important the overall user experience becomes. Users develop <strong>deeper connections</strong> with digital products. They also form <strong>more complex mental models of products</strong> they use often. This changes how they see the app in two fundamental ways.</p>\n<h3>Friction Becomes Significantly More Irritating</h3>\n<p>First, friction points become increasingly annoying. Users interact with a digital product many times per day. Any small problem in the interface compounds quickly.</p>\n<p>When you encounter a clunky UI or confusing workflow on a website you only visit once in a while, it’s frustrating but easy to overlook. But, when that same friction occurs in an app you use multiple times per day, it becomes a major source of irritation.</p>\n<h3>Change Undermines Our Procedural Knowledge</h3>\n<p>Second, the more we use an app, the more familiar we become with it and how it works. We end up using the app automatically, without even thinking, much like when you’ve been driving a car for years, you don’t think about the process. This is known as <a href=\"https://en.wikipedia.org/wiki/Procedural_knowledge\">procedural knowledge</a>.</p>\n<p>This is great news for digital product designers, as it means we can create interfaces that become <strong>second nature</strong> to our users. But, if we break their mental models or introduce unexpected changes, we risk causing frustration and disruption.</p>\n<p>So, knowing these two things, how does this affect our approach to digital product design? Well, let’s start by considering the problem of friction.</p>\nFixing Friction Points\n<p>As digital product designers, we need to become obsessed with removing friction from the user experience. Failure to do so will alienate users over time and ultimately lead to churn.</p>\n<p>To mitigate friction, we need to constantly seek out friction points. We need to diagnose the exact problem and then test any solution to ensure it does, in fact, make things better.</p>\n<p>So, how exactly do we find friction points?</p>\n<h3>Finding Friction</h3>\n<p>The most obvious way is to <strong>listen to customers</strong>. User feedback is crucial in identifying friction points in the user experience. However, we can’t simply rely on that. Analytics can be your friend, too.</p>\n<p><img src=\"https://files.smashing.media/articles/big-difference-between-digital-product-and-web-design/1-microsoft-clarity-insights.png\" /></p>\n<p>Microsoft Clarity offers essential insights to pinpoint issues on your app.</p>\n<p>I would highly recommend using a tool like <a href=\"https://clarity.microsoft.com/projects\">Microsoft Clarity</a>. It gives detailed insights into user behavior. They help find points of friction. These include the following:</p>\n<ul>\n<li><strong>Rage clicks</strong>: Where individuals continuously click on something due to frustration.</li>\n<li><strong>Dead clicks</strong>: Where people click on something that is not clickable.</li>\n<li><strong>Excessive scrolling</strong>: Where users scroll up and down looking for something.</li>\n<li><strong>Quick backs</strong>: Where a person accidentally lands on a screen and promptly navigates back to the previous one.</li>\n<li><strong>Error messages</strong>: Where the user is triggering an error in the system.</li>\n</ul>\n<p>These will help you identify potential friction points that you can then investigate further.</p>\n<h3>Diagnosing Friction</h3>\n<p>Once you know where things are going wrong, you can use heat maps and session recordings in Clarity. They will help you understand the problem. Why are people excessively scrolling or rage-clicking, for example?</p>\n<p><img src=\"https://files.smashing.media/articles/big-difference-between-digital-product-and-web-design/2-clarity-session-recordings.png\" /></p>\n<p>Session recordings are valuable for pinpointing particular problems in the interface.</p>\n<p>If the heat maps or session recordings don’t make things clear, that is where you would need to consider <strong>usability testing</strong>. </p>\n<p>Once you understand the problem, you can then begin exploring solutions and testing them rigorously to ensure they effectively reduce friction.</p>\n<h3>Testing Your Friction Busting Solutions</h3>\n<p>How you test your solution to the point of friction will depend on the size and complexity of the changes you need to make.</p>\n<p>For small changes, such as tweaking the UI or changing some text, A/B testing is often the best approach. You show the new solution to a subset of your users and measure the impact on those indicators of frustration.</p>\n<p>But A/B testing isn’t always the right approach. If your app has lower levels of traffic, getting results from a statistically significant A/B test can be time-consuming.</p>\n<p>Also, when your solution involves big changes, like adding new features or redesigning many screens, A/B testing can be expensive. That is because you need to first fully develop the solution before you can test it, meaning that it can prove costly if that solution turns out not to work.</p>\n<p>Your best approach in such situations is to <strong>create a prototype for remote testing</strong>.</p>\n<p>Initially, I usually conduct unfacilitated testing with a tool such as <a href=\"https://maze.co/\">Maze</a>. Unfacilitated testing is easy to set up. It requires minimal time investment, and Maze offers analytics, so you don’t necessarily need to watch every session back.</p>\n<p><img src=\"https://files.smashing.media/articles/big-difference-between-digital-product-and-web-design/3-maze-remote-testing.png\" /></p>\n<p>Maze serves as a valuable resource for conducting remote testing, offering both test data and recordings for each test.</p>\n<p>If testing uncovers issues you can’t fix, then try <strong>facilitated testing</strong>. Facilitated testing enables you to delve into any arising issues by asking questions.</p>\n<p>Once you have a solution that works, it’s time to roll that feature out. But you need to be careful at this point because of the procedural knowledge I mentioned earlier.</p>\nDealing With the Dangers of Procedural Knowledge\n<p>Introducing fixes to a user interface has a good chance of breaking a user’s procedural knowledge. Interface elements are often moved and so are no longer where users expect to find them, or they look different, and so users miss them.</p>\n<p>This can upset many existing customers. That can panic stakeholders and lead to rash decisions.</p>\n<p>To some extent, you need to accept that this is inevitable and prepare stakeholders for this eventuality. Users will normally adapt in a couple of weeks of regular use, and so there is no immediate need to panic.</p>\n<p>That said, there are things you can do to mitigate the reaction.</p>\n<ol>\n<li>To start with, you can <strong>let people know that change is coming</strong>. This allows people to mentally adapt to the change before it occurs.</li>\n<li>Secondly, if the change is significant, you may wish to <strong>give people the ability to opt out of it</strong>, at least in the short term. That is why some apps roll out features in beta and give users the option to opt in or out. This provides a sense of control that reduces people’s reactions.</li>\n<li>Finally, you can also <strong>provide guidance within the user interface itself</strong>. Tooltips and overlays can show users where features have been moved so new interface elements can be highlighted.</li>\n</ol>\n<p><img src=\"https://files.smashing.media/articles/big-difference-between-digital-product-and-web-design/4-slack-tooltips.png\" /></p>\n<p>Slack use tooltips to explain how their interface works.</p>\n<p>The key is to strike a balance. You must add needed improvements while causing minimal disruption to users’ workflows. You will also need to carefully monitor adoption and adapt accordingly.</p>\nChange The Way We Work\n<p>That constant monitoring and adaptation lies at the heart of digital product design. You cannot rely solely on the initial solution but must be prepared to continuously refine and iterate as user behavior and needs evolve.</p>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"905f72582664da72d0e751cb8500ada604abd51367171b71ef3026efc0c08a9f","category":"Tech"}