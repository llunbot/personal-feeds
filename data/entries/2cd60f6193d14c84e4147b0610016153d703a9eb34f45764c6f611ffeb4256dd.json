{"title":"Scale and deliver game streaming experiences with Amazon GameLift Streams","link":"https://aws.amazon.com/blogs/aws/scale-and-deliver-game-streaming-experiences-with-amazon-gamelift-streams/","date":1741280582000,"content":"<p>Since 2016, game developers have been using Amazon GameLift to power games with dedicated, scalable server hosting capable of supporting 100M concurrent users (CCU) in a single game. Responding to customer requests for additional managed compute capabilities beyond game servers, we’re announcing <a href=\"https://aws.amazon.com/gamelift/streams\">Amazon GameLift Streams</a> — a new capability in Amazon GameLift to help game publishers build and deliver global, direct-to-player game streaming experiences. As part of this announcement, existing capabilities in Amazon GameLift are now known as Amazon Gamelift Servers, continuing to serve hundreds of developers including industry leaders Ubisoft, Zynga, WB Games, and Meta.</p> \n<p>Amazon GameLift Streams helps you deliver game streaming experiences at up to 1080p resolution and 60 frames per second across devices including iOS, Android, and PCs. In just a few clicks, you can deploy games built with a variety of 3D engines, without modifications, onto fully-managed cloud-based GPU instances and stream games through the AWS Network Backbone directly to any device with a web browser.</p> \n<p>Amazon GameLift Streams helps you distribute your games direct-to-players, without having to invest millions of dollars in infrastructure and software development to build your own service. Players can start gaming in just a few seconds, without waiting for downloads or installs.</p> \n<p>Here’s a quick look at Amazon GameLift Streams:</p> \n<p><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/04/2025-news-gamelift-1-2.png\" alt=\"\" width=\"3782\" height=\"2631\" /></p> \n<p>You can use the Amazon GameLift Streams SDK to integrate with your existing identity services, storefronts, game launchers, websites, or newly created experiences such as playable demos, and begin streaming to players. You can monitor active streams and usage from within the AWS console, and seamlessly scale your streaming infrastructure across multiple regions on the AWS global network to reach more players around the world with low-latency gameplay. Amazon GameLift Streams is the only solution that enables you to upload your game content onto fully-managed GPU instances in the cloud and start streaming in minutes, with little or no modification of your code.</p> \n<p>Players can access AAA, AA, and indie games on PCs, phones, tablets, smart TVs, or any device with a WebRTC-enabled browser. Amazon GameLift Streams allows you to dynamically scale streaming capacity to match player demand, ensuring you only pay for what you need. You can choose from a selection of GPU instances that offer a range of price performance, and rely on the built-in security of AWS to protect your intellectual property.</p> \n<p><span><strong>Let’s get started</strong></span><br /> To begin using Amazon GameLift Streams, I need an existing Amazon GameLift Streams implementation. I prepare my game files by following the <a href=\"https://docs.aws.amazon.com/gameliftstreams/\">Amazon GameLift Streams documentation</a>.</p> \n<p>Then, I’ll upload my files to <a href=\"https://aws.amazon.com/s3/\">Amazon Simple Storage Service</a> (Amazon S3). I can use the <a href=\"https://aws.amazon.com/console/\">AWS Management Console</a> or this <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface</a> (AWS CLI) command to upload my game files:</p> \n<pre><code>aws s3 sync my-game-folder s3://my-bucket/my-game-path\n</code></pre> \n<p>The next step is to create an Amazon GameLift Streams application. I navigate to the Amazon GameLift Streams console. This is how the new AWS GameLift Streams console looks:</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/05/2025-gameliftstreams-rev-1-2.png\" alt=\"\" width=\"1786\" height=\"996\" /></p> \n<p>On the Amazon GameLift Streams console, I choose <strong>Create application</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/01/news-2025-gamelift-rev-2.png\" alt=\"\" width=\"3600\" height=\"1027\" /></p> \n<p>In the <strong>Runtime settings</strong>, I select the runtime environment for my game application.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/05/2025-gameliftstreams-rev-1-3.png\" alt=\"\" width=\"1786\" height=\"689\" /></p> \n<p>Then, I need to select my S3 bucket and folder from the previous step, then set the path to my game’s main executable.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/05/news-2025-gamelift-rev-5-1.png\" alt=\"\" width=\"3600\" height=\"1875\" /></p> \n<p>I also have the option to configure the automatic transfer of application-generated log files into a S3 bucket. After I’m done with this configuration, I choose <strong>Create application</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/01/news-2025-gamelift-rev-4.png\" alt=\"\" width=\"3600\" height=\"1828\" /></p> \n<p>After my application setup is completed, I need to create a stream group, a collection of compute resources to run and stream the application. I navigate to <strong>Stream groups</strong> in the left navigation pane of the Amazon GameLift Streams console.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/01/news-2025-gamelift-rev-6.png\" alt=\"\" width=\"3600\" height=\"1037\" /></p> \n<p>On this page, I define a description for my new stream group.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/01/news-2025-gamelift-rev-7.png\" alt=\"\" width=\"3600\" height=\"1151\" /></p> \n<p>Here, I select the capabilities and pricing of my stream group. Since my application is using Microsoft Windows Server 2022 Base, I make sure to select one of the compatible stream classes.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/05/2025-gameliftstreams-rev-1-4.png\" alt=\"\" width=\"1786\" height=\"706\" /></p> \n<p>Next, I need to link with the application I created in the previous step.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/01/news-2025-gamelift-rev-9.png\" alt=\"\" width=\"3600\" height=\"881\" /></p> \n<p>On the <strong>Configure stream settings</strong> page, I can configure additional locations for my stream group, bringing in additional capacity from other AWS Regions. There are two capacity options that I can choose, <strong>always-on capacity</strong> and <strong>on-demand capacity</strong>. The default capacity setting provides one streaming slot, which is sufficient for initial testing.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/05/2025-gameliftstreams-rev-1-5.png\" alt=\"\" width=\"1786\" height=\"748\" /></p> \n<p>Then, I need to review my configuration and choose <strong>Create stream group</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/05/2025-gameliftstreams-rev-1-6.png\" alt=\"\" width=\"2071\" height=\"1087\" /></p> \n<p>With stream groups configured, I can test my game streaming. I navigate to the Test stream page on the console to launch my application as a stream. I select this stream group and select <strong>Choose</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/05/news-2025-gamelift-rev-13-1.png\" alt=\"\" width=\"3600\" height=\"1061\" /></p> \n<p>On the next page, I can configure any command line arguments or environment variables to run my application. I don’t need any extra configurations and choose <strong>Test stream</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/05/2025-gameliftstreams-rev-1-8.png\" alt=\"\" width=\"1721\" height=\"782\" /></p> \n<p>Then, I can see that my application is running as expected. I can also interact with my game. This test helps me verify that my game works properly in streaming mode and serves as an initial proof of concept.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/05/2025-gameliftstreams-rev-1-7.jpg\" alt=\"\" width=\"1836\" height=\"1167\" /></p> \n<p>After I’ve confirmed everything works, I can integrate the Web SDK into my own website. The Web SDK and AWS Software Development Kit (AWS SDK) with Amazon GameLift Streams APIs help me to embed game streams, similar to what I tested in the console, into any web page I manage.</p> \n<p><span><strong>Additional things to know</strong></span></p> \n<ul> \n <li><strong>Availability –</strong> Amazon GameLift Streams is currently available in the following AWS Regions: US East (Ohio), US West (Oregon), Asia Pacific (Tokyo), Europe (Frankfurt). Additional streaming capacity can also be configured in US East (N. Virginia) and Europe (Ireland).</li> \n <li><strong>Supported operating systems – </strong>Amazon GameLift Streams supports games running on Windows, Linux, or Proton, offering easy onboarding and compatibility with game binaries. Learn more on <a href=\"https://docs.aws.amazon.com/gameliftstreams/latest/developerguide/draft-choosing-configuration-gameliftstreams.html#draft-choosing-configuration-gameliftstreams-starting-point\">Choosing a configuration in Amazon GameLift Streams</a> documentation page.</li> \n <li><strong>Programmatic access –</strong> This new capability provides comprehensive tools including service APIs, client streaming SDKs, and AWS CLI for content packaging.</li> \n</ul> \n<p><span><strong>Now available<br /> </strong></span>Explore how to streamline your game distribution using Amazon GameLift Streams. Learn more about getting started on the <a href=\"https://aws.amazon.com/gamelift/streams\">Amazon GameLift Streams</a> page.</p> \n<p>Happy streaming!</p> \n<p>— <a href=\"https://www.linkedin.com/in/donnieprakoso/\">Donnie</a></p> \n<p>—</p> \n<p>How is the News Blog doing? Take this <a href=\"https://amazonmr.au1.qualtrics.com/jfe/form/SV_eyD5tC5xNGCdCmi\">1 minute survey</a>!</p> \n<p><em>(This <a href=\"https://amazonmr.au1.qualtrics.com/jfe/form/SV_eyD5tC5xNGCdCmi\">survey</a> is hosted by an external company. AWS handles your information as described in the <a href=\"https://aws.amazon.com/privacy/\">AWS Privacy Notice</a>. AWS will own the data gathered via this survey and will not share the information collected with survey respondents.)</em></p>","author":"Donnie Prakoso","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"2cd60f6193d14c84e4147b0610016153d703a9eb34f45764c6f611ffeb4256dd","category":"Tech"}