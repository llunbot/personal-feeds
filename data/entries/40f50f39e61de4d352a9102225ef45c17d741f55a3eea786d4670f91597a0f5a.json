{"title":"New for AWS Control Tower – Region Deny and Guardrails to Help You Meet Data Residency Requirements","link":"https://aws.amazon.com/blogs/aws/new-for-aws-control-tower-region-deny-and-guardrails-to-help-you-meet-data-residency-requirements/","date":1638297571000,"content":"<p>Many customers, such as those in highly regulated industries and the public sector, want to have control over where their data is stored and processed. AWS already offers many tools and features to comply with local laws and regulations, but we want to provide a simplified way to translate <strong>data residency</strong> requirements into controls that can be applied to single- and multi-account environments.</p> \n<p>Starting today, you can use <a href=\"https://aws.amazon.com/controltower/\">AWS Control Tower</a> to deploy data residency <strong>preventive</strong> and <strong>detective</strong> controls, referred to as <a href=\"https://docs.aws.amazon.com/controltower/latest/userguide/guardrails.html\">guardrails</a>. These guardrails will prevent provisioning resources in unwanted AWS Regions by restricting access to AWS APIs through <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html\">service control policies (SCPs)</a> built and managed by AWS Control Tower. In this way, content cannot be created or transferred outside of your selected Regions at the infrastructure level. In this context, content can be software (including machine images), data, text, audio, video, or images hosted on AWS for processing or storage. For example, AWS customers in Germany can deny access to AWS services in Regions outside of Frankfurt with the exception of global services such as <a href=\"https://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a> and <a href=\"https://aws.amazon.com/organizations/\">AWS Organizations</a>.</p> \n<p>AWS Control Tower also offers guardrails to further control data residency in underlying AWS service options, for example, blocking <a href=\"https://aws.amazon.com/s3/\">Amazon Simple Storage Service (Amazon S3)</a> cross-region replication or blocking the creation of internet gateways.</p> \n<p>The AWS account used for managing AWS Control Tower is not restricted by the new Region deny settings. That account can be used for remediation if you have data in an unwanted Region before enabling Region deny.</p> \n<p>Detective guardrails are implemented via <a href=\"https://aws.amazon.com/config/\">AWS Config</a> rules and can further detect unexpected configuration changes that should not be allowed.</p> \n<p>You still retain a shared responsibility model for data residency at the application level, but these controls can help you restrict what infrastructure and application teams can do on AWS.</p> \n<p><span><strong>Using Data Residency Guardrails in AWS Control Tower<br /> </strong></span>To use the new data residency guardrails, you need to have created a landing zone using AWS Control Tower. See <a href=\"https://docs.aws.amazon.com/controltower/latest/userguide/planning-your-deployment.html\">Plan your AWS Control Tower landing zone</a> for more information.</p> \n<p>To see all the new controls that are available, I select <strong>Guardrails</strong> on the left pane of the <a href=\"https://console.aws.amazon.com/controltower/\">AWS Control Tower console</a> and then find those in the <strong>Data Residency</strong> category. I sort results by <strong>Behavior</strong>. Guardrails that have a <strong>Prevention</strong> behavior are implemented as SCPs. Those that have a <strong>Detection</strong> behavior are implemented as AWS Config rules.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/19/control-tower-data-residency-guardrails.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/19/control-tower-data-residency-guardrails-1024x641.png\" /></a></p> \n<p>The most interesting guardrail is probably the one denying access to AWS based on the requested AWS Region. I choose it from the list and find that it is different from the other guardrails because it affects all <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_ous.html\">Organizational Units (OUs)</a> and cannot be activated here but must be activated in the landing zone settings.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-region-deny-guardrail.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-region-deny-guardrail-1024x160.png\" /></a></p> \n<p>Below the <strong>Overview</strong>, in the <strong>Guardrail components</strong>, there is a link to the full SCP for this guardrail, and I can see the list of the AWS APIs that, when this setting is enabled, are still going to be allowed towards non-governed Regions. Depending on your requirements, some of those services, such as <a href=\"https://aws.amazon.com/cloudfront/\">Amazon CloudFront</a> or <a href=\"https://aws.amazon.com/global-accelerator/\">AWS Global Accelerator</a>, can be further limited by a custom SCP.</p> \n<p>In the <strong>Landing zone settings</strong>, the Region deny guardrail is currently not enabled. I choose <strong>Modify settings </strong>and then enable the <strong>Region deny settings.</strong></p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/23/control-tower-region-deny-settings-1.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/23/control-tower-region-deny-settings-1-1024x758.png\" /></a></p> \n<p>Below the Region deny settings, there is the list of AWS Regions governed by the landing zone. Those will be the regions allowed when I enable Region deny.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-governed-regions.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-governed-regions-1024x697.png\" /></a></p> \n<p>In my case, I have four governed Regions, two in the US and two in Europe:</p> \n<ul> \n <li>US East (N. Virginia), which is also the home Region for the landing zone</li> \n <li>US West (Oregon)</li> \n <li>Europe (Ireland)</li> \n <li>Europe (Frankfurt)</li> \n</ul> \n<p>I choose <strong>Update landing zone</strong> at the bottom. The update of the landing zone takes a few minutes to complete. Now, the vast majority of the AWS APIs are blocked if they are not directed to one of those governed Regions. Let’s do a few tests.</p> \n<p><span><strong>Testing Region Deny in a Sandbox Account<br /> </strong></span>I follow the instructions to <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html\">configure the AWS CLI to use AWS Single Sign-On</a>. Now, I can use the the sandbox account with <code>AWSAdministratorAccess</code> permissions to run commands with the AWS CLI.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-sso-sandbox-account.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-sso-sandbox-account-1024x649.png\" /></a></p> \n<p>I try to start a new <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a> instance in US East (Ohio), one of the non-governed Regions. In a landing zone, <a href=\"https://docs.aws.amazon.com/controltower/latest/userguide/vpc-concepts.html\">the default VPC is replaced by a VPC managed by AWS Control Tower</a>. To start the instance, I need to specify a VPC subnet. Let’s find a subnet ID that I can use.</p> \n<div> \n <pre><code>aws ec2 describe-subnets --query 'Subnets[0].SubnetId' --region us-east-2\n\nAn error occurred (UnauthorizedOperation) when calling the DescribeSubnets operation:\nYou are not authorized to perform this operation.</code></pre> \n</div> \n<p>As expected, I am not authorized to perform this operation in US East (Ohio). Let’s try to start an EC2 instance without passing the subnet ID.</p> \n<div> \n <pre><code>aws ec2 run-instances --image-id ami-0dd0ccab7e2801812 --region us-east-2 \\\n    --instance-type t3.small                                     \n\nAn error occurred (UnauthorizedOperation) when calling the RunInstances operation:\nYou are not authorized to perform this operation.\nEncoded authorization failure message: &lt;ENCODED MESSAGE&gt;</code></pre> \n</div> \n<p>Again, I am not authorized. More information is included in the encoded authorization failure message that I can decode as <a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/ec2-not-auth-launch/\">described in this article</a>:</p> \n<div> \n <pre><code>aws sts decode-authorization-message --encoded-message &lt;ENCODED MESSAGE&gt;</code></pre> \n</div> \n<p>The decoded message (that I have omitted for brevity) tells me that there was an explicit deny to my request and includes the full SCP that caused the deny. This information is really useful for debugging these kind of errors.</p> \n<p>Now, let’s try in US East (N. Virginia), one of the four governed regions.</p> \n<div> \n <pre><code>aws ec2 describe-subnets --query 'Subnets[0].SubnetId' --region us-east-1\n\"subnet-0f3580c0c5e56c210\"</code></pre> \n</div> \n<p>This time, the command returns the subnet ID of the first subnet returned by the request. Let’s start an instance in US East (N. Virginia) using this subnet.</p> \n<div> \n <pre><code>aws ec2 run-instances --image-id  ami-04ad2567c9e3d7893 --region us-east-1 \\\n    --instance-type t3.small --subnet-id subnet-0f3580c0c5e56c210</code></pre> \n</div> \n<p>As expected, it works, and I can see the EC2 instance running in the console.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-ec2-instance-running.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-ec2-instance-running-1024x144.png\" /></a></p> \n<p>Similarly, APIs for other AWS services are limited by the Region deny settings. For example, I can’t create an S3 bucket in a non-governed Region.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-s3-create-not-governed.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-s3-create-not-governed-1024x557.png\" /></a></p> \n<p>When I try to create the bucket, I get an access denied error.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-s3-access-denied.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-s3-access-denied-1024x304.png\" /></a></p> \n<p>As expected, the creation of an S3 bucket works in a governed Region.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-s3-create-governed.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-s3-create-governed-1024x233.png\" /></a></p> \n<p>Even if someone gives this account access to a bucket in a non-governed Region, I would not be able to copy any data into that bucket.</p> \n<p>Other preventive guardrails can enforce data residency, for example:</p> \n<ul> \n <li>Disallow cross-region networking for Amazon EC2, Amazon CloudFront, and AWS Global Accelerator</li> \n <li>Disallow internet access for an Amazon VPC instance managed by a customer</li> \n <li>Disallow Amazon Virtual Private Network (VPN) connections</li> \n</ul> \n<p>Now, let’s see how detective guardrails work.</p> \n<p><span><strong>Testing Detective Guardrails in a Sandbox Account</strong></span><br /> I enable the following guardrails for all accounts in the sandbox OU:</p> \n<ul> \n <li>Detect whether Amazon EBS snapshots are restorable by all AWS accounts</li> \n <li>Detect whether public routes exist in the route table for an internet gateway</li> \n</ul> \n<p>Now, I want to see what happens if I go against these guardrails. In the <a href=\"https://console.aws.amazon.com/ec2/\">EC2 console</a>, I create an EBS snapshot for the volume of the EC2 instance I started before. Then, I modify permissions to share it with all AWS accounts.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-ebs-snaphot-public.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-ebs-snaphot-public-1024x798.png\" /></a></p> \n<p>Then, in the <a href=\"https://console.aws.amazon.com/vpc\">VPC console</a>, I create an internet gateway, attach it to the AWS Control Tower managed VPC, and update the route table of one of the private subnets to use the internet gateway.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-igw-route-table.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-igw-route-table-1024x344.png\" /></a></p> \n<p>After a few minutes, the noncompliant resources in the sandbox account are found by the detective guardrails.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-noncompliant-resources.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/11/18/control-tower-noncompliant-resources-1024x408.png\" /></a></p> \n<p>I look at the information provided by the guardrails and update my configuration to fix the issues. In a multi-account setup I’d contact the account owner and ask for remediation.</p> \n<p><span><strong>Availability and Pricing<br /> </strong></span>You can use data-residency guardrails to control resources in any AWS Region. To create a landing zone, you should start from one of the Regions where <a href=\"https://aws.amazon.com/controltower/\">AWS Control Tower</a> is offered. For more information, see the <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/\">AWS Regional Services List</a>. There is no additional cost for this feature. You pay the costs of other services used, such as <a href=\"https://aws.amazon.com/config/\">AWS Config</a>.</p> \n<p>This feature provides you with a framework of controls and guidance for setting up a multi-account environment that addresses data residency requirements. Depending on your use case, you may use any subset of the new data residency guardrails.</p> \n<p><strong><a href=\"https://docs.aws.amazon.com/controltower/latest/userguide/getting-started-with-control-tower.html\">Set up guardrails based on your data residency requirements with AWS Control Tower.</a></strong></p> \n<p>— <a href=\"https://twitter.com/danilop\">Danilo</a></p>","author":"Danilo Poccia","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"40f50f39e61de4d352a9102225ef45c17d741f55a3eea786d4670f91597a0f5a","category":"Tech"}