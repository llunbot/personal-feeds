{"title":"สรุปจากการแบ่งปันเรื่อง Postman in the right way #1","link":"https://www.somkiat.cc/course-postman-in-the-right-way-1/","date":1695575093000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2023/09/postman-in-the-right-way-150x150.jpg\" alt loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2023/09/postman-in-the-right-way-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2023/09/postman-in-the-right-way-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/09/postman-in-the-right-way.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/09/postman-in-the-right-way.jpg\" alt width=\"661\" height=\"371\" /></a></figure>\n\n\n\n<p>ช่วงเสาร์และอาทิตย์ที่ผ่านมา<br />มีโอกาสแบ่งปันเรื่อง <strong><a href=\"https://www.facebook.com/beSkilledSoftwareTester\" target=\"_blank\">Postman in the right way ที่ SCK Dojo</a></strong><br />โดยมีเป้าหมายเพื่อแนะนำการใช้งาน Postman<br />ซึ่งเป็นเครื่องมือสำหรับการทดสอบระบบงาน<br />แต่จากเท่าที่เจอมาหลาย ๆ ทีมพบว่า<br />ใช้ Postman ไม่เต็มความสามารถมากนัก<br />แทนที่จะช่วยลดงาน กลับเพิ่มงานอีก<br />ดังนั้นจึงเป็นที่มาของการแบ่งปันครั้งนี้</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>เริ่มต้นจากเป้าหมายของการทดสอบ ประกอบไปด้วย</strong></p>\n\n\n\n<ul>\n<li><strong>Fast feedback loop</strong> เพื่อให้เรารู้ปัญหาจากทุก ๆ การเปลี่ยนแปลง</li>\n\n\n\n<li><strong>High quality</strong> คือคุณภาพที่สูงขึ้น ไม่สามารถต่อรองได้ </li>\n\n\n\n<li>เพิ่มความเชื่อมั่นให้สูงขึ้น</li>\n</ul>\n\n\n\n<p>สิ่งที่สำคัญมาก ๆ คือ <strong>regression test</strong><br />ดังนั้นถ้าเราใช้ Postman แล้ว จะช่วยให้เราเข้าถึงเป้าหมายเหล่านี้หรือไม่ ?<br />ถ้าไม่ใช่ น่าจะใช้เครื่องมือผิดวิธีแน่นอน<br />มาเริ่มกัน</p>\n\n\n\n<p><strong>Postman นั้นมีความสามารถเยอะมาก ๆ </strong></p>\n\n\n\n<p>ยกตัวอย่างเช่น</p>\n\n\n\n<ul>\n<li>ทดสอบผ่าน protocol ต่าง ๆ เช่น HTTP, MQTT (beta), WebSocket, Socket.io, GraphQL, gRPC</li>\n\n\n\n<li>เขียน test script สำหรับตรวจสอบ response ว่าเป้นไปตามที่คาดหวังหรือไม่ และจัดการ request ต่าง ๆ ก่อนส่ง request ด้วย pre-request script โดยเขียนในรูปแบบของภาษา JavaScript</li>\n\n\n\n<li>ทำการจัดการสร้าง request สำหรับทดสอบ protocol ต่าง ๆ ด้วย Collection และ folder</li>\n\n\n\n<li>โดยปกติจะให้แต่ละ collection มีจำนวน request ไม่เยอะ หรือ แยกตาม flow หรือ scenario เลย ทำให้จัดการง่ายขึ้น</li>\n\n\n\n<li>อีกอย่าง Postman นั้นมี workspace ให้อีกด้วย</li>\n\n\n\n<li>การใช้งาน variables สำหรับการจัดการข้อมูลต่าง ๆ ใน Postman ซึ่งมีทั้ง request variable, collection variable และ global variable</li>\n\n\n\n<li>ชนิดของ variable มีทั้ง plain text และ secret</li>\n\n\n\n<li>การใช้งาน environment สำหรับจัดการ variable ตาม environment ต่าง ๆ ของระบบที่จะทดสอบเช่น dev, test, staging และ prod เป็นต้น</li>\n\n\n\n<li>สามารถทำการออกแบบ HTTP Request API ก่อนที่จะพัฒนาได้ รวมทั้งสามารถเขียนเอกสารในรูปแบบ markdown ของ collection และ request ได้เลย ดังนั้นทำให้เราพัฒนาในรูปแบบของ API-first ได้</li>\n\n\n\n<li>ในส่วนของการออกแบบ API นั้น สามารถกำหนดในส่วนของ response ตามแต่ละรูปแบบ เช่น success และ fail ด้วยการเพิ่ม example เข้าไปในแต่ละ request ได้เลย</li>\n\n\n\n<li>การกำหนด <a href=\"https://learning.postman.com/docs/getting-started/installation/settings/#working-directory\">working directory</a> สำหรับ postman ในการจัดการเกี่ยวกับ data file ต่าง ๆ ที่ใช้ใน postman เพื่อให้ทุกคนในทีมสามารถใช้งานได้เหมือนกัน เพื่อตัดปัญหาเรื่อง path ของ file</li>\n\n\n\n<li>หลังจากการออกแบบแล้วนั้น สามารถทำการสร้าง Mock Server ผ่าน collection (จะมี request  อยู่ใน collection) ที่เราสร้างขึ้นมาได้</li>\n\n\n\n<li>สิ่งที่เจอปัญหาคือ Mock Server ทำงานแปลก ๆ เรื่องของการ matching example ซึ่งมีแนวคิดและขั้นตอนใน <a href=\"https://learning.postman.com/docs/designing-and-developing-your-api/mocking-data/matching-algorithm/\" target=\"_blank\">Understanding example matching</a></li>\n\n\n\n<li>สามารถ export collection ต่าง ๆ ออกมาเป็นไฟล์ แล้วจัดเก็บใน version control system เพื่อ share กันในทีม (ใช้เมื่อไม่ต้องการใช้งานผ่าน postman team)</li>\n\n\n\n<li>ในการทดสอบนั้น จะใช้ <a href=\"https://github.com/postmanlabs/newman\">newman</a> เข้ามาใช้งาน เพื่อ run collection ผ่าน command line ได้ เพื่อให้สามารถทดสอบได้บ่อย และ ง่ายขึ้น รวมทั้งไป integrate เข้ากับ CI/CD ได้อีกด้วย</li>\n\n\n\n<li>มี API platform สามารถทำงานร่วมกับ Swagger หรือ Open API Specification ได้เลย</li>\n\n\n\n<li>คร่าว ๆ น่าจะประมาณนี้</li>\n</ul>\n\n\n\n<p><strong>รูปแบบของการทดสอบนั้นสำคัญมาก ๆ</strong></p>\n\n\n\n<p>ประกอบไปด้วย</p>\n\n\n\n<ul>\n<li>Integration test</li>\n\n\n\n<li>Component test (mock/fake dependencies)</li>\n\n\n\n<li>Contract test ทั้ง Postman และ <a href=\"https://docs.pact.io/\" target=\"_blank\">Pact</a></li>\n</ul>\n\n\n\n<p>ซึ่งต้องรุปตั้งแต่ architecture ของระบบงาน<br />เพื่อวาง test strategy ต่าง ๆ ออกมา<br />เพื่อให้ออกแบบระบบให้รองรับกับแนวทางในการทดสอบต่อไป<br /><strong><em>มันคือ กระบวนการคิดก่อนทำ</em></strong></p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/09/architecture-testing.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/09/architecture-testing.jpg\" alt width=\"454\" height=\"280\" /></a></figure>\n\n\n\n<p><strong>ในการทดสอบจะทำทั้ง functional test และ non-functional test</strong></p>\n\n\n\n<p>โดย non-functional test คือ performance test<br />ซึ่ง postman สนับสนุนด้วย<br />แต่ถ้าอยากทดสอบด้วยเรื่องมืออื่น ๆ <br />ก็สามารถทำการ convert จาก postman collection ไปยัง script ของเครื่องมืออื่น ๆ ได้<br />ยกตัวอย่างเช่น</p>\n\n\n\n<ul>\n<li><a href=\"https://github.com/apideck-libraries/postman-to-k6\" target=\"_blank\">Postman to K6</a></li>\n\n\n\n<li><a href=\"https://github.com/kevinswiber/postmanctl/\">Postman to Apache JMeter</a></li>\n</ul>\n\n\n\n<p>สิ่งที่สำคัญคือ <a href=\"https://k6.io/docs/test-types/load-test-types/\" target=\"_blank\">load type</a> ของการทดสอบว่าต้องการอย่างไรบ้าง</p>\n\n\n\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2023/09/k6-load-type.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2023/09/k6-load-type.jpg\" alt width=\"829\" height=\"230\" /></a></figure>\n\n\n\n<p>ไว้เจอกันการ sharing ต่อ ๆ ไป</p>\n\n\n\n<p><strong><em>ปล. เครื่องมือช่วยให้เราสะดวกขึ้น แต่ถ้ามาทำให้ยุ่งยาก<br />เราต้องกลับมาดูว่า เราใช้งานเครื่องมือถูกต้องหรือไม่</em></strong></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"e90abafe8050511a17c3e1f6273786cc75f24b8feed48c78038eb5c63876baeb","category":"Thai"}