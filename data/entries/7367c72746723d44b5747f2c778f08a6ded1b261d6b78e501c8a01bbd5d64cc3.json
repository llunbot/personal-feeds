{"title":"บันทึกการใช้งาน Detox สำหรับทดสอบ app ที่พัฒนาด้วย React Native","link":"https://www.somkiat.cc/testing-react-native-with-detox/","date":1632231546000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/09/detox-150x150.jpg\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/09/detox-1024x576.jpg\" /></figure>\n\n\n\n<p>ในการพัฒนา Mobile app ด้วย React Native นั้น<br />ปกติก็จะมีการทดสอบด้วย Jest + React Testing มาให้ด้วย<br />เป็นการทดสอบในระดับ unit test เท่านั้น<br />แต่ปัญหาคือ เราจะมั่นใจได้อย่างไรว่า<br />เมื่อถูก build เป็น App แล้ว ยังสามารถทำงานได้ตามที่คาดหวัง<br />หนึ่งในวิธีการคือ การทดสอบ App แบบอัตโนมัติ</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>โดยแนวทางการทดสอบจะประกอบไปด้วย</strong></p>\n\n\n\n<ul><li>Black box testing (ไม่รู้ process การทำงานภายใน app เลย) ด้วย <a href=\"https://appium.io/\" target=\"_blank\">Appium</a></li><li>Gray box testing ด้วย <a href=\"https://github.com/wix/Detox\" target=\"_blank\">Detox</a></li><li></li></ul>\n\n\n\n<p><strong>ในบทความนี้จะพูดถึง Detox ซึ่งเป็น Gray box testing</strong></p>\n\n\n\n<p>มีเป้าหมาย เพื่อให้ขั้นตอนการพัฒนา App รวดเร็วและมีคุณภาพมากยิ่งขึ้น<br />รวมทั้งสามารถนำไปไว้ใน pipeline ของ Continuous integration ได้<br /></p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/09/graybox.png\" /></figure>\n\n\n\n<p>อีกทั้งช่วยลดปัญหาของ flaky test ที่เกิดจาก Appium ลงไป<br />สามารถแก้ไขหรือเปลี่ยนแปลงไปตาม App ได้เร็วขึ้น<br />และยังทำการเพิ่ม attribute/prop <strong>testID</strong> เข้าไปยัง element ต่าง ๆ ใน component <br />เพื่อให้สามารถเข้าถึง element ต่าง ๆ ได้ง่าย ๆ สำหรับการทดสอบ</p>\n\n\n\n<p><strong>การติดตั้งและใช้งานนั้นไม่ยากอะไร</strong><br />ทำตาม<a href=\"https://github.com/wix/Detox/blob/master/docs/Introduction.GettingStarted.md\" target=\"_blank\">เอกสาร</a>ก็ได้ แต่ ....</p>\n\n\n\n<p>ในการ run นั้นทั้ง React Native และ Detox <br />จำเป็นต้องทำการ build app และ run test<br />มักทำให้เกิดปัญหาการ build ได้<br />จึงสรุปปัญหาไว้นิดหน่อย</p>\n\n\n\n<p><strong>Software Requirement</strong></p>\n\n\n\n<ul><li>XCode 12.5</li><li>React Native 0.65.1</li><li><a href=\"https://github.com/nvm-sh/nvm\" target=\"_blank\">NVM</a> (Node Version Manager)</li><li><a href=\"https://github.com/wix/AppleSimulatorUtils\" target=\"_blank\">AppleSemulatorUtils</a> สำหรับการจัดการ simulator ใน ios</li></ul>\n\n\n\n<p><strong>ปัญหาที่พบเจอ ::<a href=\"https://github.com/facebook/react-native/issues/31480\" target=\"_blank\"> เรื่องของ Flipper dependency ใน Podfile ของ iOS</a></strong></p>\n\n\n\n<p>โดยจะเกิด error ตอน build นั่นเอง<br />ดังนั้นจำเป็นต้องแก้ไข Podfile และทำการลบ cached ทั้งหมด<br />จากนั้นจึงทำการ install Pod ใหม่<br />โดย Podfile เป็นดังนี้</p>\n\n\n\n[gist id=\"ca5370c92a8dd73ac4e7b1b60d97f5ee\" file=\"Podfile\"]\n\n\n\n<p>จากนั้นทำการ run ดังนี้</p>\n\n\n\n[gist id=\"ca5370c92a8dd73ac4e7b1b60d97f5ee\" file=\"1.txt\"]\n\n\n\n<p><strong>เพียงเท่านี้ก็สามารถ build และ เริ่มเขียน test ได้แล้ว</strong><br />โดยชุดการทดสอบ ก็เขียนด้วย JavaScript นี่เอง</p>\n\n\n\n[gist id=\"ca5370c92a8dd73ac4e7b1b60d97f5ee\" file=\"first-test.js\"]\n\n\n\n<p><strong>โดยใน Component นั้น ๆ ถ้าต้องการเข้าถึง element ใด ๆ</strong><br />เราสามารถกำหนด prop/attribute ชื่อว่า testID เข้าไปได้เลย</p>\n\n\n\n[gist id=\"ca5370c92a8dd73ac4e7b1b60d97f5ee\" file=\"App.js\"]\n\n\n\n<p><strong><em>เป็นอันเริ่มต้นของการพัฒนาและทดสอบ React Native App ด้วย Detox กันแล้ว</em></strong></p>\n\n\n\n<p><strong>Reference Websites</strong></p>\n\n\n\n<ul><li><a href=\"https://medium.com/reactive-hub/detox-vs-appium-ui-tests-in-react-native-2d07bf1e244f\" target=\"_blank\">Appium vs Detox</a></li><li><a href=\"https://github.com/up1/demo-reactnative-testing-with-detox\" target=\"_blank\">Demo project</a></li></ul>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"7367c72746723d44b5747f2c778f08a6ded1b261d6b78e501c8a01bbd5d64cc3","category":"Thai"}