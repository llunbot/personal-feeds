{"title":"AWS adds passkey multi-factor authentication (MFA) for root and IAM users","link":"https://aws.amazon.com/blogs/aws/aws-adds-passkey-multi-factor-authentication-mfa-for-root-and-iam-users/","date":1718113742000,"content":"<p>Security is our top priority at <a href=\"https://aws.amazon.com/\" target=\"_blank\">Amazon Web Services (AWS)</a>, and today, we’re launching two capabilities to help you strengthen the security posture of your AWS accounts:</p> \n<ul> \n <li>First, we’re adding <strong>passkeys</strong> to the list of supported <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa.html\">multi-factor authentication (MFA)</a> for your root and <a href=\"https://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a> users.</li> \n <li>Second, we started to <strong>enforce MFA</strong> on your root users, starting with the most sensitive one: the root user of your <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html\">management account</a> in an AWS Organization. We will continue to roll out this change on your other accounts during the rest of the year.</li> \n</ul> \n<p>MFA is one of the simplest and most effective ways to enhance account security, offering an additional layer of protection to help prevent unauthorized individuals from gaining access to systems or data.</p> \n<p><span><strong>MFA with passkey for your root and IAM users<br /> </strong></span>Passkey is a general term used for the credentials created for <a href=\"https://fidoalliance.org/fido2/\">FIDO2</a> authentication.</p> \n<p>A passkey is a pair of cryptographic keys generated on your client device when you register for a service or a website. The key pair is bound to the web service domain and unique for each one.</p> \n<p>The public part of the key is sent to the service and stored on their end. The private part of the key is either stored in a secured device, such as a <a href=\"https://en.wikipedia.org/wiki/Security_token\">security key</a>, or securely shared across your devices connected to your user account when you use cloud services, such as <a href=\"https://support.apple.com/en-us/109016\">iCloud Keychain</a>, <a href=\"https://www.google.com/account/about/\">Google accounts</a>, or a password manager such as <a href=\"https://1password.com/product/passkeys\">1Password</a>.</p> \n<p>Typically, the access to the private part of the key is protected by a PIN code or a biometric authentication, such as Apple <a href=\"https://support.apple.com/en-us/102381\">Face ID</a> or <a href=\"https://support.apple.com/en-us/105095\">Touch ID</a> or <a href=\"https://support.microsoft.com/en-us/windows/learn-about-windows-hello-and-set-it-up-dae28983-8242-bb2a-d3d1-87c9d265a5f0\">Microsoft Hello</a>, depending on your devices.</p> \n<p>When I try to authenticate on a service protected with passkeys, the service sends a challenge to my browser. The browser then requests my device sign the challenge with my private key. This triggers a PIN or biometric authentication to access the secured storage where the private key is stored. The browser returns the signature to the service. When the signature is valid, it confirms I own the private key that matches the public key stored on the service, and the authentication succeeds.</p> \n<p>You can read more about this process and the various standards at work (<a href=\"https://fidoalliance.org/specs/fido-v2.0-ps-20190130/fido-client-to-authenticator-protocol-v2.0-ps-20190130.html\">FIDO2</a>, <a href=\"https://fidoalliance.org/specs/fido-v2.0-ps-20190130/fido-client-to-authenticator-protocol-v2.0-ps-20190130.html\">CTAP</a>, <a href=\"https://www.w3.org/TR/2019/REC-webauthn-1-20190304/\">WebAuthn</a>) in <a href=\"https://aws.amazon.com/blogs/aws/multi-factor-authentication-with-webauthn-for-aws-sso/\">the post I wrote when AWS launched support for passkeys in AWS IAM Identity Center back in November 2020</a>.</p> \n<p>Passkeys can be used to replace passwords. However, for this initial release, we choose to use passkeys as a second factor authentication, in addition to your password. The password is something you know, and the passkey is something you have.</p> \n<p>Passkeys are more resistant to phishing attacks than passwords. First, it’s much harder to gain access to a private key protected by your fingerprint, face, or a PIN code. Second, passkeys are bound to a specific web domain, reducing the scope in case of unintentional disclosure.</p> \n<p>As an end user, you will benefit from the convenience of use and easy recoverability. You can use the built-in authenticators in your phones and laptops to unlock a cryptographically secured credential to your AWS sign-in experience. And when using a cloud service to store the passkey (such as iCloud keychain, Google accounts, or 1Password), the passkey can be accessed from any of your devices connected to your passkey provider account. This helps you to recover your passkey in the unfortunate case of losing a device.</p> \n<p><span><strong>How to enable passkey MFA for an IAM user<br /> </strong></span>To enable passkey MFA, I navigate to the <a href=\"https://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a> section of the console. I select a user, and I scroll down the page to the <strong>Multi-factor authentication (MFA)</strong> section. Then, I select <strong>Assign MFA device</strong>.</p> \n<p>Note that to help you increase resilience and account recovery, <a href=\"https://aws.amazon.com/blogs/security/you-can-now-assign-multiple-mfa-devices-in-iam/\">you can have multiple MFA devices enabled for a user</a>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/24/2024-05-23_14-34-47.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/24/2024-05-23_14-34-47.png\" alt=\"Enable MFA in AM console\" width=\"800\" height=\"538\" /></a></p> \n<p>On the next page, I enter an <strong>MFA device name</strong>, and I select <strong>Passkey or security key</strong>. Then, I select next.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/24/2024-05-23_14-35-13.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/24/2024-05-23_14-35-13.png\" alt=\"enable MFA : select passkey\" width=\"600\" height=\"650\" /></a></p> \n<p>When using a password manager application that supports passkeys, it will pop up and ask if you want to generate and store a passkey using that application. Otherwise, your browser will present you with a couple of options. The exact layout of the screen depends on the operating system (macOS or Windows) and the browser you use. Here is the screen I see on macOS with a Chromium-based browser.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/07/2024-06-07_18-55-25.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/07/2024-06-07_18-55-25.png\" alt=\"Enable passkey : choose method\" width=\"400\" height=\"423\" /></a></p> \n<p>The rest of the experience depends on your selection. <strong>iCloud Keychain</strong> will prompt you for a Touch ID to generate and store the passkey.</p> \n<p>In the context of this demo, I want to show you how to bootstrap the passkey on another device, such as a phone. I therefore select <strong>Use a phone, tablet, or security key</strong> instead. The browser presents me with a QR code. Then, I use my phone to scan the QR code. The phone authenticates me with Face ID and generates and stores the passkey.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/07/2024-05-23_14-35-48.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/06/07/2024-05-23_14-35-48.png\" alt=\"Passkey : scan a QR code\" width=\"400\" height=\"463\" /></a></p> \n<p>This QR code-based flow allows a passkey from one device to be used to sign in on another device (a phone and my laptop in my demo). It is defined by the FIDO specification and known as <a href=\"https://passkeys.dev/docs/reference/terms/#cross-device-authentication-cda\">cross device authentication (CDA)</a>.</p> \n<p>When everything goes well, the passkey is now registered with the IAM user.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/24/2024-05-23_14-37-48.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/24/2024-05-23_14-37-48.png\" alt=\"Enable passkey : success\" width=\"800\" height=\"422\" /></a></p> \n<p>Note that we don’t recommend using IAM users to authenticate human beings to the AWS console. We recommend configuring single sign-on (SSO) with <a href=\"https://aws.amazon.com/iam/identity-center/\">AWS IAM Identity Center</a> instead.</p> \n<p><span><strong>What’s the sign-in experience?<br /> </strong></span>Once MFA is enabled and configured with a passkey, I try to sign in to my account.</p> \n<p>The user experience differs based on the operating system, browser, and device you use.</p> \n<p>For example, on macOS with iCloud Keychain enabled, the system prompts me for a touch on the Touch ID key. For this demo, I registered the passkey on my phone using CDA. Therefore, the system asks me to scan a QR code with my phone. Once scanned, the phone authenticates me with Face ID to unlock the passkey, and the AWS console terminates the sign-in procedure.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/24/2024-05-23_14-41-47.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/24/2024-05-23_14-41-47.png\" alt=\"Authenticate with MFA and passkey\" width=\"800\" height=\"469\" /></a></p> \n<p><span><strong>Enforcing MFA for root users<br /> </strong></span>The second announcement today is that we have started to enforce the use of MFA for the root user on some AWS accounts. This change was announced last year <a href=\"https://aws.amazon.com/blogs/security/security-by-design-aws-to-enhance-mfa-requirements-in-2024/\">in a blog post from Stephen Schmidt, Chief Security Officer at Amazon</a>.</p> \n<p>To quote Stephen:</p> \n<p><em>Verifying that the most privileged users in AWS are protected with MFA is just the latest step in our commitment to continuously enhance the security posture of AWS customers.</em></p> \n<p>We started with your most sensitive account: your management account for <a href=\"https://aws.amazon.com/organizations/\">AWS Organizations</a>. The deployment of the policy is progressive, with just a few thousand accounts at a time. Over the coming months, we will progressively deploy the MFA enforcement policy on root users for the majority of the AWS accounts.</p> \n<p>When you don’t have MFA enabled on your root user account, and your account is updated, a new message will pop up when you sign in, asking you to enable MFA. You will have a grace period, after which the MFA becomes mandatory.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/29/2024-05-29_14-06-24.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/05/29/2024-05-29_14-06-24.png\" alt=\"Enable MFA on root account\" width=\"800\" height=\"937\" /></a></p> \n<p>You can start to use passkeys for multi-factor authentication today in all AWS Regions, except in China.</p> \n<p>We’re enforcing the use of multi-factor authentication in all AWS Regions, except for the two regions in China (Beijing, Ningxia) and for <a href=\"https://aws.amazon.com/govcloud-us/\">AWS GovCloud (US)</a>, because the AWS accounts in these Regions have no root user.</p> \n<p>Now <a href=\"https://console.aws.amazon.com/iam/home#/users\">go activate passkey MFA for your root user in your accounts</a>.</p> \n<a href=\"https://twitter.com/sebsto\">-- seb</a>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"810eab1f5e1a03dbc56a018bdb26fa3ac734fd975a8165d18bf0079801abc979","category":"Tech"}