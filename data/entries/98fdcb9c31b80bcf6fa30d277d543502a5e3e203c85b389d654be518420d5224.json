{"title":"WebKit Features in Safari 16.5","link":"https://webkit.org/blog/14154/webkit-features-in-safari-16-5/","date":1684432768000,"content":"<p>Today we are pleased to share what new’s in WebKit for Safari 16.5.</p>\n<p>After the massive, web-developer-feature-packed release of <a href=\"https://webkit.org/blog/13966/webkit-features-in-safari-16-4/\">Safari 16.4</a>, this version focuses predominately on polishing existing features and fixing bugs. Safari 16.5 does contain a handful of new features including CSS Nesting, <code>:user-valid</code> and <code>:user-invalid</code>, support for pre-orders and deferred payments with Apple Pay, and an update to Lockdown Mode.</p>\n<h2>CSS Nesting</h2>\n<p>Safari 16.5 includes support for CSS Nesting. A long-time favorite feature of pre-processors, nesting allows web developers to write code like this:</p>\n<pre><code><span>.foo</span> {\n  <span>color</span>: <span>green</span>;\n .<span>bar</span> {\n    <span>font-size</span>: <span>1.4</span><span>rem</span>;\n  }\n}\n</code></pre>\n<p>Learn all about CSS Nesting — including the current limitation that prevents the use of an element selector (like <code>article</code>) without including a symbol (like <code>&amp;</code>) before the element — in <em><a href=\"https://webkit.org/blog/13813/try-css-nesting-today-in-safari-technology-preview/\">Try out CSS Nesting today</a>.</em></p>\n<p>The CSS Working Group is currently working on a very promising idea for removing the requirement that every nested selector begin with a symbol. Hopefully sometime in the future, that limitation will no longer exist.</p>\n<h2>CSS user valid and invalid pseudo-classes</h2>\n<p>The pseudo-classes <a href=\"https://developer.mozilla.org/docs/Web/CSS/:user-valid\"><code>:user-valid</code></a> and <a href=\"https://developer.mozilla.org/docs/Web/CSS/:user-invalid\"><code>:user-invalid</code></a> are now supported in Safari 16.5.</p>\n<p>For years, <code>:valid</code> and <code>:invalid</code> could be used to target an <code>input</code> field or other form field based on whether it is in a valid or invalid state. But there’s been one problem — as soon as a user starts typing, the content is evaluated and declared invalid if it doesn’t match. For example, an email address is marked <code>:invalid</code> as the first half is typed, before the <code>@</code> is present. This has led to developers using JavaScript for this use case instead.</p>\n<p>The new <code>:user-invalid</code> and <code>:user-valid</code> pseudo-classes are much smarter about when they are triggered, removing the need for JS. Compare <code>:invalid</code> to <code>:user-invalid</code> in a browser <a href=\"https://caniuse.com/mdn-css_selectors_user-invalid\">with support</a> to see the difference.</p>\n<figure>\n<p>\n</p><p></p><figcaption>Compare <code>:invalid</code> to <code>:user-invalid</code> in Safari 16.5 or Firefox 88 or later.</figcaption></figure>\n<p>These new pseudo-classes are especially helpful when combined with <code>:has()</code> to provide powerful tools for styling anything on the page, like the label of a form field.</p>\n<h2>Apple Pay</h2>\n<p>Apple Pay on the web now supports pre-orders and deferred payments.</p>\n<h2>Lockdown mode</h2>\n<p><a href=\"https://support.apple.com/en-us/HT212650\">Lockdown mode</a> now disables <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebCodecs_API\">WebCodecs API</a>.</p>\n<p>Lockdown mode is an optional, extreme protection that’s designed for the very few individuals who, because of who they are or what they do, might be personally targeted by some of the most sophisticated digital threats. Most people are never targeted by attacks of this nature.</p>\n<h2>Bug Fixes</h2>\n<p>WebKit for Safari 16.5 provides multiple bug fixes and feature polish.</p>\n<h3>CSS</h3>\n<ul>\n<li>Fixed Scroll to Text Fragment sometimes scrolling to the top after reloading the page.</li>\n<li>Fixed support for <code>x</code> resolution unit in <code>calc()</code>.</li>\n<li>Fixed reflecting trimmed <code>block-start</code>, <code>block-end</code>, <code>inline-start</code>, and <code>inline-end</code> margins for grid or flex items in computed styles.</li>\n<li>Fixed the top offset of self collapsing children at the end of a block container with <code>block-end</code> margin trim.</li>\n<li>Fixed triggering layout when changing <code>margin-trim</code> value.</li>\n<li>Fixed increasing <code>column-count</code> above 2 not updating the layout.</li>\n<li>Fixed CSS custom properties not applying to an SVG <code>use</code> element’s shadow tree.</li>\n<li>Fixed new CSS property unexpectedly dropped from an empty CSS rule when tabbing through or editing a selector.</li>\n<li>Made <code>-webkit-image-set()</code> an alias of <code>image-set()</code>.</li>\n</ul>\n<h3>Editing &amp; Forms</h3>\n<ul>\n<li>Fixed hairline on the selection of bidi text.</li>\n<li>Fixed photo library picker showing videos for <code>accept=\"image/*\"</code>.</li>\n</ul>\n<h3>JavaScript</h3>\n<ul>\n<li>Updated digital display in <code>Intl.DurationFormat</code> to match spec changes.</li>\n</ul>\n<h3>Layout</h3>\n<ul>\n<li>Fixed text wrapping for bidi text when line-breaking.</li>\n</ul>\n<h3>Media</h3>\n<ul>\n<li>Fixed non-audible AudioContext preventing the audio session to change from play-and-record after stopping capture.</li>\n<li>Fixed handling video streams containing a <code>CodecDelay</code> value that caused an audible pop at the beginning of video playback.</li>\n<li>Fixed video freezing in a video conference when removing AirPods Pro during the call.</li>\n</ul>\n<h3>Scrolling</h3>\n<ul>\n<li>Fixed snapping to the last snap position when performing layout when scroll snapping occurs with a physical mouse wheel.</li>\n<li>Fixed pinch-to-zoom when toggling on and off scroll snapping.</li>\n<li>Fixed scroll snapping jumping to the previous page when swiping to the next page.</li>\n<li>Fixed scroll snapping to work with a physical scroll wheel on a mouse.</li>\n</ul>\n<h3>Rendering</h3>\n<ul>\n<li>Fixed form controls rendering.</li>\n<li>Fixed visual updates for <code>content: counter()</code> when <code>position: absolute</code> is set.</li>\n<li>Fixed an unexpected visible first frame of a <code>transform</code> animation when <code>!important</code> style overrides the animated value.</li>\n</ul>\n<h3>Web API</h3>\n<ul>\n<li>Fixed filling metadata headers for preflight requests.</li>\n<li>Fixed OffscreenCanvas WebGL to fire the context lost event.</li>\n<li>Fixed <code>getFileHandle()</code> to return a TypeMismatchError on unexpected entry type.</li>\n</ul>\n<h3>Web Apps</h3>\n<ul>\n<li>Fixed “Untitled” label on the back to previous app button when opening a web app via a link.</li>\n</ul>\n<h3>Web Assembly</h3>\n<ul>\n<li>Fixed WASM SIMD breaking WebP decoding applications.</li>\n</ul>\n<h3>Web Inspector</h3>\n<ul>\n<li>Added initial support for <code>color-mix</code> CSS values.</li>\n<li>Fixed element <code>::backdrop</code> rules showing up without a backdrop.</li>\n<li>Fixed “Selected element” console entry filling an entire row.</li>\n<li>Fixed an issue causing the mini console to always opens when choosing “Inspect Element”, even if it was previously closed.</li>\n</ul>\n<h2>Feedback</h2>\n<p>We love hearing from you. Send a tweet to <a href=\"https://twitter.com/webkit\">@webkit</a> to share your thoughts on Safari 16.5. Find us on Mastodon at <a href=\"https://front-end.social/@jensimmons\">@jensimmons@front-end.social</a> and <a href=\"https://mastodon.social/@jondavis\">@jondavis@mastodon.social</a>. If you run into any issues, we welcome your <a href=\"https://feedbackassistant.apple.com/\">feedback</a> on Safari UI, or your <a href=\"https://bugs.webkit.org/\">WebKit bug report</a> about web technologies or Web Inspector. Filing issues really does make a difference.</p>\n<p>Download the latest <a href=\"https://developer.apple.com/safari/download/\">Safari Technology Preview</a> to stay at the forefront of the web platform and to use the latest Web Inspector features. You can also read the <a href=\"https://developer.apple.com/documentation/safari-release-notes\">Safari 16.5 release notes</a>.</p>\n<h2>Updating to Safari 16.5</h2>\n<p>Safari 16.5 is available for <a href=\"https://www.apple.com/macos/ventura/\">macOS Ventura</a>, macOS Big Sur, macOS Catalina, <a href=\"https://www.apple.com/ipados/ipados-16/\">iPadOS 16</a>, and <a href=\"https://www.apple.com/ios/ios-16/\">iOS 16</a>. You can update to Safari 16.5 on macOS Monterey or macOS Big Sur by going to System Preferences → Software Update → More info, and choosing to update Safari. To update macOS Ventura, iOS or iPadOS, go to Settings → General → Software Update.</p>","author":"","siteTitle":"Blog – WebKit","siteHash":"7f8dbea0b8f53db2e11a2faa08c6dca9954c01638d09a2ce585b77a60d10f7a1","entryHash":"98fdcb9c31b80bcf6fa30d277d543502a5e3e203c85b389d654be518420d5224","category":"Tech"}