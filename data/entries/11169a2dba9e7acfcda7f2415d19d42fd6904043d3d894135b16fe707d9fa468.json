{"title":"Google plans RISC-V Android tools in 2024, wants developers to “be ready”","link":"https://arstechnica.com/?p=1980141","date":1698778537000,"content":"<div>\n<figure>\n  <img src=\"https://cdn.arstechnica.net/wp-content/uploads/2023/10/14-1-800x450.jpg\" alt=\"Google plans RISC-V Android tools in 2024, wants developers to “be ready”\" />\n      <p><a href=\"https://cdn.arstechnica.net/wp-content/uploads/2023/10/14-1.jpg\">Enlarge</a> (credit: Google)</p>  </figure>\n\n\n\n\n\n\n<div><a name=\"page-1\"></a></div>\n<p>Android is slowly entering the RISC-V era. So far we've seen Google say it wants to give the up-and-coming CPU architecture <a href=\"https://arstechnica.com/gadgets/2023/01/google-announces-official-android-support-for-risc-v/\">\"tier-1\" support</a> in Android, putting RISC-V on equal footing with Arm. Qualcomm has announced the first <a href=\"https://arstechnica.com/gadgets/2023/10/qualcomm-announces-first-ever-mass-market-risc-v-android-soc/\">mass-market RISC-V Android chip</a>, a still-untitled Snapdragon Wear chip for smartwatches. Now Google has announced a timeline for developer tools via the Google Open Source Blog. The last post is titled \"<a href=\"https://opensource.googleblog.com/2023/10/android-and-risc-v-what-you-need-to-know.html\">Android and RISC-V: What you need to know to be ready</a>.\"</p>\n<p>Getting the Android OS and app ecosystem to support a brand-new architecture is going to take an incredible amount of work from both Google and developers, and these tools are laying the foundation for that work. First up Google already has the \"Cuttlefish\" virtual device emulator running, including a gif of it booting up. This isn't the official \"Android Emulator\"—which is targeted at app developers doing app development—Cuttlefish is a hardware emulator for <em>Android OS development</em>. It's the same idea as the Android Emulator but for the bottom half of the tech stack—the kernel, framework, and hardware bits. Cuttlefish lets Google and other Android OS contributors work on a RISC-V Android build without actually having to mess with an individual RISC-V device. Google says it's working well enough now that you can <a href=\"https://github.com/google/android-riscv64\">download and emulate</a> a RISC-V device today, though the company warns that nothing is optimized yet.</p>\n<p>The next step is getting the Android Emulator (for app developers) up and running, and Google says: \"By 2024, the plan is to have emulators available publicly, with a full feature set to test applications for various device form factors!\" The nice thing about Android is that the vast majority of app code is written with no architecture in mind—it's all just Java/Kotlin. So once the Android RunTime starts spitting out RISC-V code, a lot of app code should Just Work. That means most of the porting work will need to go into things written in the NDK, the Native Developer Kit, like libraries and games. The emulator will still be great for testing, though.</p></div><p><a href=\"https://arstechnica.com/?p=1980141#p3\">Read 1 remaining paragraphs</a> | <a href=\"https://arstechnica.com/?p=1980141&amp;comments=1\">Comments</a></p>","author":"Ron Amadeo","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"11169a2dba9e7acfcda7f2415d19d42fd6904043d3d894135b16fe707d9fa468","category":"Tech"}