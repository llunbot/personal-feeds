{"title":"Announcing throughput increase and dead letter queue redrive support for Amazon SQS FIFO queues","link":"https://aws.amazon.com/blogs/aws/announcing-throughput-increase-and-dead-letter-queue-redrive-support-for-amazon-sqs-fifo-queues/","date":1701112665000,"content":"<p>With <a href=\"https://aws.amazon.com/sqs/\">Amazon Simple Queue Service (Amazon SQS)</a>, you can send, store, and receive messages between software components at any volume. Today, Amazon SQS has introduced two new capabilities for first-in, first-out (FIFO) queues:</p> \n<ul> \n <li>Maximum throughput has been increased up to 70,000 transactions per second (TPS) per API action in selected <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regions_az/\">AWS Regions</a>, supporting sending or receiving up to 700,000 messages per second with batching.</li> \n <li>Dead letter queue (DLQ) redrive support to handle messages that are not consumed after a specific number of retries in a way similar to what was already available for standard queues.</li> \n</ul> \n<p>Letâ€™s take a more in-depth look at how these work in practice.</p> \n<p><span><strong>FIFO queues throughput increase up to 70K TPS<br /> </strong></span>FIFO queues are designed for applications that require messages to be processed exactly once and in the order in which they are sent. While standard queues have an unlimited throughput, FIFO queues have an upper quota in the number of TPS per API action.</p> \n<p>Standard and FIFO queues support batch actions that can send and receive up to 10 messages with a single API call (up to a maximum total payload of 256 KB). This means that a FIFO queue can process up to 10 times more messages per second than its maximum throughput.</p> \n<p><a href=\"https://aws.amazon.com/about-aws/whats-new/2016/11/amazon-sqs-introduces-fifo-queues-with-exactly-once-processing-and-lower-prices-for-standard-queues/\">At launch in 2016</a>, FIFO queues supported up to 300 TPS per API action (3,000 messages per second with batching). This was enough for many use cases, but some customers asked for more throughput.</p> \n<p>With <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html\">high throughput mode</a> launched in 2021, FIFO queues <a href=\"https://aws.amazon.com/about-aws/whats-new/2021/05/amazon-sqs-now-supports-a-high-throughput-mode-for-fifo-queues/\">introduced a tenfold increase of the maximum throughput</a> and could process up to 3,000 TPS per API action, depending on the Region. <a href=\"https://aws.amazon.com/about-aws/whats-new/2022/10/amazon-sqs-increased-throughput-quota-fifo-high-throughput-ht-mode-6000-transactions-per-second-tps/\">One year later, that quota was doubled</a> to up to 6,000 TPS per API action.</p> \n<p>This year, Amazon SQS has already increased FIFO queue throughput quota two times, to up to 9,000 TPS per API action <a href=\"https://aws.amazon.com/about-aws/whats-new/2023/08/amazon-sqs-increased-throughput-quota-fifo-high-throughput-mode/\">in August</a> and up to 18,000 TPS per API action <a href=\"https://aws.amazon.com/about-aws/whats-new/2023/10/amazon-sqs-increased-throughput-quota-fifo-high-throughput-mode/\">in October</a> (depending on the Region).</p> \n<p>Today, the Amazon SQS team has been able to increase the FIFO queue throughput quota again, allowing you to process up to 70,000 TPS per API action (up to 700,000 messages per second with batching) in the US East (N. Virginia), US West (Oregon), and Europe (Ireland) Regions. This is more than two hundred times the maximum throughput at launch.</p> \n<p><span><strong>DLQ redrive support for FIFO queues<br /> </strong></span>With Amazon SQS, messages that are not consumed after a specific number of retries can automatically be moved to a DLQ. There, messages can be analyzed to understand the reason why they have not been processed correctly. Sometimes there is a bug or a misconfiguration in the consumer application. Other times the messages contain invalid data from the source applications that needs to be fixed to allow the messages to be processed again.</p> \n<p>Either way, you can define a plan to reprocess these messages. For example, you can fix the consumer application and redrive all messages to the source queue. Or you can create a dedicated queue where a custom application receives the messages, fixes their content, and then sends them to the source queue.</p> \n<p>To simplify moving the messages back to the source queue or to a different queue, Amazon SQS allows you to create a redrive task. Redrive tasks are already available for standard queues. Starting today, you can also start a redrive task for FIFO queues.</p> \n<p>Using the <a href=\"https://console.aws.amazon.com/sqs\">Amazon SQS console</a>, I create a first queue (<code>my-dlq.fifo</code>) to be used as a DLQ. To redrive messages back to the source FIFO queue, the queue type must match, so this is also a FIFO queue.</p> \n<p>Then, I create a source FIFO queue (<code>my-source-queue.fifo</code>) to handle messages as usual. When I create the source queue, I configure the first queue (<code>my-dlq.fifo</code>) as the DLQ and specify 3 as the <strong>Maximum receives</strong> condition under which messages are moved from the source queue to the DLQ.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/sqs-fifo-dlq.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/17/sqs-fifo-dlq.png\" alt=\"Console screenshot.\" width=\"2138\" height=\"828\" /></a></p> \n<p>When a message has been received by a consumer for more than the number of times specified by this condition, Amazon SQS moves the message to the DLQ. The original message ID is retained and can be used to uniquely track the message.</p> \n<p>To test this setup, I use the console to send a message to the source queue. Then, I use the <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface (AWS CLI)</a> to receive the message multiple times without deleting it.</p> \n<div> \n <pre><code>aws sqs receive-message --queue-url https://sqs.eu-west-1.amazonaws.com/123412341234/my-source-queue.fifo</code></pre> \n</div> \n<pre><code>{\n    \"Messages\": [\n        {\n            \"MessageId\": \"ef2f1c72-4bfe-4093-a451-03fe2dbd4d0f\",\n            \"ReceiptHandle\": \"...\",\n            \"MD5OfBody\": \"0f445a578fbcb0c06ca8aeb90a36fcfb\",\n            \"Body\": \"My important message.\"\n        }\n    ]\n}</code></pre> \n<p>To receive the same message more than once, I wait for the time specified in the queue visibility timeout to pass (30 seconds by default).</p> \n<p>After the third time, the message is not in the source queue because it has been moved to the DLQ. When I try to receive messages from the source queue, the list is empty.</p> \n<div> \n <pre><code>aws sqs receive-message --queue-url https://sqs.eu-west-1.amazonaws.com/123412341234/my-source-queue.fifo</code></pre> \n</div> \n<pre><code>{\n    \"Messages\": []\n}</code></pre> \n<p>To confirm that the message has been moved, I poll the DLQ to see if the message is there.</p> \n<div> \n <pre><code>aws sqs receive-message --queue-url https://sqs.eu-west-1.amazonaws.com/123412341234/my-dlq.fifo  </code></pre> \n</div> \n<pre><code>{\n    \"Messages\": [\n        {\n            \"MessageId\": \"ef2f1c72-4bfe-4093-a451-03fe2dbd4d0f\",\n            \"ReceiptHandle\": \"...\",\n            \"MD5OfBody\": \"0f445a578fbcb0c06ca8aeb90a36fcfb\",\n            \"Body\": \"My important message.\"\n        }\n    ]\n}</code></pre> \n<p>Now that the message is in the DLQ, I can investigate why the message has not been processed (well, I know the reason this time) and decide whether to <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-dead-letter-queue-redrive.html\">redrive messages from the DLQ using the Amazon SQS console or the new redrive API</a> that was <a href=\"https://aws.amazon.com/blogs/aws/a-new-set-of-apis-for-amazon-sqs-dead-letter-queue-redrive/\">introduced a few months ago</a>. For this example, I use the console. Back on the <a href=\"https://console.aws.amazon.com/sqs\">Amazon SQS console</a>, I select the DLQ queue and choose <strong>Start DLQ redrive</strong>.</p> \n<p>In <strong>Redrive configuration</strong>, I choose to redrive the messages to the source queue. Optionally, I can specify another FIFO queue as a custom destination. I use <strong>System optimized</strong> in <strong>Velocity control settings</strong> to redrive messages with the maximum number of messages per second optimized by Amazon SQS. Optionally, if there is a large number of messages in the DLQ, I can configure a custom maximum rate of messages per second to avoid overloading consumers.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/sqs-fifo-redrive.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/sqs-fifo-redrive.png\" alt=\"Console screenshot.\" width=\"2008\" height=\"1062\" /></a></p> \n<p>Before starting the redrive task, I can use the <strong>Inspect messages</strong> section to poll and check messages. I already decided what to do, so I choose <strong>DLQ redrive</strong> to start the task. I have only one message to process, so the redrive task completes very quickly.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/sqs-fifo-redrive-task.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/sqs-fifo-redrive-task.png\" alt=\"Console screenshot.\" width=\"2002\" height=\"602\" /></a></p> \n<p>As expected, the message is back in the source queue and is ready to be processed again.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/sqs-fifo-redrive-result.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/11/21/sqs-fifo-redrive-result.png\" alt=\"Console screenshot.\" width=\"1930\" height=\"544\" /></a></p> \n<p><span><strong>Things to know<br /> </strong></span>Dead letter queue (DLQ) support for FIFO queues is available today in all <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regions_az/\">AWS Regions</a> where Amazon SQS is offered with the exception of GovCloud Regions and those based in China.</p> \n<p>In the DLQ configuration, the maximum number of receives should be between 1 and 1,000.</p> \n<p>There is no additional cost for using high throughput mode or a DLQ. Every Amazon SQS action counts as a request. A single request can send or receive from 1 to 10 messages, up to a maximum total payload of 256 KB. You pay based on the number of requests, and requests are priced differently between standard and FIFO queues.</p> \n<p>As part of the <a href=\"https://aws.amazon.com/free\">AWS Free Tier</a>, there is no cost for the first million requests per month for standard queues and for the first million requests per month for FIFO queues. For more information, see <a href=\"https://aws.amazon.com/sqs/pricing/\">Amazon SQS pricing</a>.</p> \n<p>With these updates and the increased throughput, you can cover the vast majority of use cases with FIFO queues.</p> \n<p><a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-fifo-queues.html\"><strong>Use Amazon SQS FIFO queues to have high throughput, exactly-once processing, and first-in-first-out delivery.</strong></a></p> \n<p>â€” <a href=\"https://twitter.com/danilop\">Danilo</a></p>","author":"Danilo Poccia","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"4fcc8429977f96d93c747185eea4f64ec04673e166520ebc7a648910e9a90a6f","category":"Tech"}