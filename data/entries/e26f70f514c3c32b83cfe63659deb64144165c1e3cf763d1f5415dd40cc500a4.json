{"title":"[AWS-IoT] Manage Greengrass ผ่าน Secure Tunneling Component","link":"https://thanapon.info/aws-iot-secure-tunneling/?utm_source=rss&utm_medium=rss&utm_campaign=aws-iot-secure-tunneling","date":1664026079000,"content":"<h3>AWS IoT secure tunneling ?</h3>\n\n\n\n<p>คือ Component ตัวหนึ่งของ Greengrass service ที่ทำให้เราสามารถ Remote เข้าไปเชื่อมต่อกับ Greengrass device นั้นๆได้ โดยที่ไม่ต้องคอยกังวลเกี่ยวกับ Firewall ของระบบ Network ที่รันอยู่ ซึ่งข้อดีของ <strong>AWS IoT Secure Tunneling</strong> นั้น เราจะเอาไว้สำหรับแก้ไขปัญหาการตั้งค่าอุปกรณ์ที่อยู่คนละที่กับเราได้เลย ทำให้เราลดเวลาที่จะลงไปดูหน้างานจริงๆและสามารถแก้ไขปัญหาได้ทันท่วงที</p>\n\n\n\n<blockquote><p>AWS IoT Greengrass คือ service ตัวหนึ่งที่เราสามารถเอามาใช้ในการสร้าง Edge service หรือ Gateway ในการส่งข้อมูลไปยัง AWS IoT Core</p></blockquote>\n\n\n\n<h3>Secure tunneling concepts</h3>\n\n\n\n<ul><li><strong>Client access token (CAT)</strong>: Token ที่ AWS IoT Secure Tunneling สร้างขึ้นมาเอาไว้ใช้ในการเชื่อมต่อระหว่างเครื่อง Source กับ Destination</li><li><strong>Destination application</strong>: Service ที่รันอยู่บนเครื่องที่เราต้องการจะ Remote เช่น SSH, HTTP</li><li><strong>Destination device</strong>: เครื่องที่เราต้องการจะ Remote</li><li><strong>Device agent</strong>: Agent ที่ Subscribe topic “<code>$aws/things/thing-name/tunnels/notify</code>” สำหรับรับ Token ที่สร้างมาจาก Secure Tunneling ซึ่งจะใช้ Token ในการสร้าง Tunnel</li><li><strong>Local proxy</strong>: Software ที่รันบนเครื่อง Source ที่ใช้ในการ Relay message จาก Secure Tunneling กับ Application ที่รันอยู่บนเครื่อง Remote</li><li><strong>Source device</strong>: Computer/Laptop ของเรา</li><li><strong>Tunnel</strong>: Logical pathway ที่ AWS IoT สร้างให้ระหว่างเครื่อง Source กับ Destination</li></ul>\n\n\n\n<h3>How secure tunneling works</h3>\n\n\n\n<ul><li>เริ่มต้นเราต้องสร้าง Tunnel ใน AWS Console ก่อน โดยเข้าไปที่ <strong>AWS IoT &gt; Manage &gt; Tunnels</strong></li></ul>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"1024\" height=\"506\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-1024x506.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-1024x506.png 1024w, https://thanapon.info/wp-content/uploads/2022/09/image-300x148.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-768x380.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-1536x759.png 1536w, https://thanapon.info/wp-content/uploads/2022/09/image-2048x1012.png 2048w, https://thanapon.info/wp-content/uploads/2022/09/image-600x297.png 600w\" /></figure></div>\n\n\n<ul><li>พวก Description ก็ใส่อะไรก็ได้ที่มันสื่อความหมายกับ Tunnel ของเรานะครับ ซึ่ง Service ผมจะใช้เป็น SSH เข้าไปที่อุปกรณ์ “iot-gg-rpi-dev-5” ส่วนสุดท้ายจะเป็น Timeout ก็แล้วแต่เรากำหนดเลย โดยปกติผมจะเปิดไว้ไม่เกิน 1 ชั่วโมง</li></ul>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"1024\" height=\"634\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-1-1024x634.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-1-1024x634.png 1024w, https://thanapon.info/wp-content/uploads/2022/09/image-1-300x186.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-1-768x476.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-1-1536x951.png 1536w, https://thanapon.info/wp-content/uploads/2022/09/image-1-2048x1269.png 2048w, https://thanapon.info/wp-content/uploads/2022/09/image-1-600x372.png 600w\" /></figure></div>\n\n\n<ul><li>เมื่อสร้าง Tunnel เสร็จแล้วก็ให้ Copy “Access token for source” ไว้ด้วยนะครับ</li></ul>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"1024\" height=\"492\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-2-1024x492.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-2-1024x492.png 1024w, https://thanapon.info/wp-content/uploads/2022/09/image-2-300x144.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-2-768x369.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-2-1536x738.png 1536w, https://thanapon.info/wp-content/uploads/2022/09/image-2-2048x984.png 2048w, https://thanapon.info/wp-content/uploads/2022/09/image-2-600x288.png 600w\" /></figure></div>\n\n\n<ul><li>เมื่อเราเข้ามาดูใน Tunnel ID ที่เราสร้างมาจะเห็นว่าตอนนี้ Destination connection state นั้น <mark>Connected</mark> แล้วเหลือแค่ส่วนของ Source connection state เท่านั้นที่ <mark>Disconnected</mark></li></ul>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"1024\" height=\"417\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-5-1024x417.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-5-1024x417.png 1024w, https://thanapon.info/wp-content/uploads/2022/09/image-5-300x122.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-5-768x313.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-5-1536x626.png 1536w, https://thanapon.info/wp-content/uploads/2022/09/image-5-2048x834.png 2048w, https://thanapon.info/wp-content/uploads/2022/09/image-5-600x244.png 600w\" /></figure></div>\n\n\n<h3>Setting up Localproxy</h3>\n\n\n\n<ul><li>ขั้นตอนตอนไปเราต้องมาติดตั้ง Local proxy ก่อนเพื่อให้มัน Relay ข้อมูลระหว่างเครื่อง Source กับ Destination โดยเราสามารถ Clone repository ได้จาก</li></ul>\n\n\n\n<blockquote><p><a href=\"https://github.com/aws-samples/aws-iot-securetunneling-localproxy.git\" target=\"_blank\">AWS Iot Secure Tunneling local proxy reference C++ implementation</a></p><cite>https://github.com/aws-samples/aws-iot-securetunneling-localproxy.git</cite></blockquote>\n\n\n\n<ul><li>หลังจากที่เรา Clone repository มาแล้ว ซึ่งถ้าสังเกตดูในไฟล์เราจะเห็น Bash script สำหรับสร้าง docker image อยู่ แสดงว่าเราสามารถให้มันรันบน docker ได้เลยไม่ต้องติดตั้ง dependencies ต่างๆ บนเครื่องเราด้วย สบายบรื้ออออ!!!!!</li></ul>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"1024\" height=\"418\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-6-1024x418.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-6-1024x418.png 1024w, https://thanapon.info/wp-content/uploads/2022/09/image-6-300x123.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-6-768x314.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-6-600x245.png 600w, https://thanapon.info/wp-content/uploads/2022/09/image-6.png 1270w\" /></figure></div>\n\n\n<ul><li>รัน<mark> “docker-build.sh”</mark> สำหรับสร้าง Docker image กันนะจ๊ะ อาจจะต้องใช้เวลาสักพักถึงจะสร้าง Docker image เสร็จ</li></ul>\n\n\n\n<div><pre><code>./docker-build.sh</code></pre></div>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"1024\" height=\"220\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-7-1024x220.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-7-1024x220.png 1024w, https://thanapon.info/wp-content/uploads/2022/09/image-7-300x65.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-7-768x165.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-7-1536x331.png 1536w, https://thanapon.info/wp-content/uploads/2022/09/image-7-600x129.png 600w, https://thanapon.info/wp-content/uploads/2022/09/image-7.png 1626w\" /></figure></div>\n\n\n<ul><li>Build Docker Image เสร็จแล้ว ก็ถึงเวลาใช้งานกัน โดยที่เราจะรัน <mark>“docker-run.sh”</mark> ตามด้วย Port ที่เราจะ expose ออกมาให้เราสามารถ SSH เข้าไปยังเครื่อง Remote</li></ul>\n\n\n\n<div><pre><code>./docker-run.sh -p 5555</code></pre></div>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"1024\" height=\"98\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-4-1024x98.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-4-1024x98.png 1024w, https://thanapon.info/wp-content/uploads/2022/09/image-4-300x29.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-4-768x74.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-4-600x58.png 600w, https://thanapon.info/wp-content/uploads/2022/09/image-4.png 1175w\" /></figure></div>\n\n\n<ul><li>ลองรัน localproxy โลด</li></ul>\n\n\n\n<blockquote><p>-b: ให้ localproxy สามารถเรียกจากข้างนอก Container ได้</p><p>-r: Region ของ AWS ที่เราใช้งานอยู่</p><p>-s: Port ที่เรา expose ออกไปก่อนหน้านี้</p><p>-t: Access token ที่มาจากขั้นตอนการสร้าง Tunnel ใน AWS Console</p></blockquote>\n\n\n\n<div><pre><code>./localproxy -b 0.0.0.0 -r ap-southeast-1 -s 5555 -t ${access_token}</code></pre></div>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"1024\" height=\"186\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-8-1024x186.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-8-1024x186.png 1024w, https://thanapon.info/wp-content/uploads/2022/09/image-8-300x55.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-8-768x140.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-8-1536x280.png 1536w, https://thanapon.info/wp-content/uploads/2022/09/image-8-600x109.png 600w, https://thanapon.info/wp-content/uploads/2022/09/image-8.png 1620w\" /></figure></div>\n\n\n<ul><li>เช็คดูสถานะใน AWS Console &gt; Manage &gt; Tunnels จะเห็นว่า <mark>Connected</mark></li></ul>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"1024\" height=\"309\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-10-1024x309.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-10-1024x309.png 1024w, https://thanapon.info/wp-content/uploads/2022/09/image-10-300x91.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-10-768x232.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-10-1536x464.png 1536w, https://thanapon.info/wp-content/uploads/2022/09/image-10-2048x619.png 2048w, https://thanapon.info/wp-content/uploads/2022/09/image-10-600x181.png 600w\" /></figure></div>\n\n\n<h3>SSH from local machine</h3>\n\n\n\n<ul><li>ลอง SSH ผ่าน Terminal ดูสิ</li></ul>\n\n\n\n<div><pre><code>ssh pi@localhost -p 5555</code></pre></div>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"767\" height=\"394\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-11.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-11.png 767w, https://thanapon.info/wp-content/uploads/2022/09/image-11-300x154.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-11-600x308.png 600w\" /></figure></div>\n\n\n<ul><li>ลองดู Log ของ Greengrass บ้างสิ</li></ul>\n\n\n\n<div><pre><code>sudo tail -f /greengrass/v2/logs/greengrass.log</code></pre></div>\n\n\n<div>\n<figure><img loading=\"lazy\" width=\"918\" height=\"517\" src=\"https://thanapon.info/wp-content/uploads/2022/09/image-12.png\" srcset=\"https://thanapon.info/wp-content/uploads/2022/09/image-12.png 918w, https://thanapon.info/wp-content/uploads/2022/09/image-12-300x169.png 300w, https://thanapon.info/wp-content/uploads/2022/09/image-12-768x433.png 768w, https://thanapon.info/wp-content/uploads/2022/09/image-12-600x338.png 600w\" /></figure></div>\n\n\n<h4><strong>สรุปสามารถใช้งานได้จ้าาา หวังว่าจะเป็นประโยชน์กับผู้ที่สนใจที่จะมาศึกษา AWS IoT กันนะครับ</strong> ขอบคุณที่ติดตาม สวัสดีครับ</h4>\n\n\n\n<blockquote><p><a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/secure-tunneling.html\" target=\"_blank\">AWS IoT secure tunneling</a></p><cite>https://docs.aws.amazon.com/iot/latest/developerguide/secure-tunneling.html</cite></blockquote>\n\n\n\n<blockquote><p><a href=\"https://github.com/aws-samples/aws-iot-securetunneling-localproxy\" target=\"_blank\">AWS Iot Secure Tunneling local proxy reference C++ implementation</a></p><cite>https://github.com/aws-samples/aws-iot-securetunneling-localproxy</cite></blockquote><p>The post <a href=\"https://thanapon.info/aws-iot-secure-tunneling/\">[AWS-IoT] Manage Greengrass ผ่าน Secure Tunneling Component</a> first appeared on <a href=\"https://thanapon.info\">Thanapon</a>.</p>","author":"thanapon.tap","siteTitle":"Thanapon","siteHash":"6a039c2f54d76e4c49227d80968f2a30de5427cc57525c047c383ea3563cde5f","entryHash":"e26f70f514c3c32b83cfe63659deb64144165c1e3cf763d1f5415dd40cc500a4","category":"Thai"}