{"title":"Native OPA Support in Terraform Cloud Is Now Generally Available","link":"https://www.hashicorp.com/blog/native-opa-support-in-terraform-cloud-is-now-generally-available","date":1675195200000,"content":"<p>We are excited to announce native <a href=\"https://www.openpolicyagent.org/\">Open Policy Agent</a> (OPA) support for <a href=\"https://cloud.hashicorp.com/products/terraform\">Terraform Cloud</a> is now generally available. <a href=\"https://www.hashicorp.com/blog/terraform-gains-visibility-self-service-and-compliance-upgrades\">First launched</a> as a public beta during HashiConf Global 2022, this feature extends the policy as code capabilities of Terraform Cloud to support OPA. OPA is based on the <a href=\"https://www.openpolicyagent.org/docs/latest/policy-language/\">Rego policy language</a> and works alongside <a href=\"https://docs.hashicorp.com/sentinel/language\">Sentinel</a> to increase the number of supported ways customers can adopt a policy as code framework for secure multi-cloud provisioning. Native OPA support helps simplify adopting and maintaining policy enforcement workflows in Terraform Cloud.</p>\n<h2><a href=\"#policy-as-code-approaches\">»</a><a></a>Policy as Code Approaches</h2>\n<p>Open Policy Agent is an open source general-purpose policy engine. OPA uses a high-level declarative language called Rego that, much like Sentinel, is used to enforce controls using policy as code. HashiCorp Sentinel is a powerful policy as code framework that has been part of Terraform Cloud and Enterprise since their inception. However, organizations that have already invested in OPA may want to leverage those existing skills and policies. Previously, this required Terraform users to create their own tooling to incorporate OPA into their Terraform Cloud workflows. Maintaining these solutions required significant time and effort, potentially reducing focus on security and resource compliance. The native OPA support in Terraform Cloud removes the need for that custom tooling.</p>\n<h2><a href=\"#native-opa-benefits\">»</a><a></a>Native OPA Benefits</h2>\n<p>The native OPA integration allows customers to migrate their existing Rego-based policies into Terraform Cloud with minimal engineering effort. As with Terraform and infrastructure as code, OPA allows users to rely on a single language for policy as code for different configurations and resources. This makes it easy to create and share reusable policies with the rest of the organization.</p>\n<p>Teams can now choose their desired policy framework and collaborate seamlessly across their organization. Native OPA support also allows Terraform Cloud users to take advantage of the platform’s mature policy workflows. These workflows help simplify policy enforcement and free users from the burden of using custom or third-party tools to connect OPA and Terraform Cloud.</p>\n<h2><a href=\"#native-opa-support-for-terraform-cloud\">»</a><a></a>Native OPA Support for Terraform Cloud</h2>\n<p>Adding native OPA support to Terraform Cloud allows teams to have an additional framework choice when adopting a policy as code approach. In some organizations, multiple teams are responsible for different policies, such as compliance or operational best practices. Limiting these teams to a single policy framework can cause less than optimal policy enforcement processes. OPA and Sentinel can operate side-by-side so each team can choose its preferred framework and work together seamlessly.</p>\n<p>The native OPA support in Terraform Cloud includes:</p>\n<ul>\n<li><strong>Individually managed or VCS-connected policies:</strong> Edit policy code directly in the UI, or use the recommended approach of connecting to a version control repository containing your policies.</li>\n<li><strong>Policy sets</strong>: Group policies and enforce them on workspaces.</li>\n<li><strong>Enforcement levels:</strong> Define behavior for when policies fail as part of a policy check.</li>\n<li><strong>Policy overrides:</strong> Enable users to override a failed policy check and continue the execution of a run.</li>\n<li><strong>Role-based access control (RBAC):</strong> Grant team permissions to manage policies and override policy failures.</li>\n<li><strong>Auditing:</strong> Policy results are included in audit logs, enabling centralized visibility.</li>\n</ul><img src=\"https://www.datocms-assets.com/2885/1675184032-opa-failure.png\" alt=\"OPA\" /><h2><a href=\"#next-steps\">»</a><a></a>Next Steps</h2>\n<p>Native OPA support gives users more flexibility to adopt a policy as code framework in Terraform Cloud. This integration helps simplify and accelerate policy enforcement workflows across multi-cloud environments.</p>\n<p>To learn more about OPA support for Terraform Cloud, check out the <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/policy-enforcement/opa\">documentation on Defining OPA Policies</a> and our <a href=\"https://developer.hashicorp.com/terraform/tutorials/policy/drift-and-opa\">tutorial on how to Detect Infrastructure Drift and Enforce OPA Policies</a>.</p>\n<p>Get started with <a href=\"https://cloud.hashicorp.com/products/terraform\">Terraform Cloud</a> for free to begin provisioning and managing your infrastructure in any environment.</p>","author":"Mitchell Ross","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"887b50158b9a6a814d574f47f06afc881d6c305b7bcf5181c17b8e6c707e8239","category":"Tech"}