{"title":"Accelerating AI adoption on Azure with Terraform","link":"https://www.hashicorp.com/blog/accelerating-ai-adoption-on-azure-with-terraform","date":1694793600000,"content":"<p>HashiCorp and Microsoft have partnered to create <a href=\"https://developer.hashicorp.com/terraform/tutorials/modules/module\">Terraform modules</a> that follow Microsoft's <a href=\"https://learn.microsoft.com/en-us/azure/architecture/framework/\">Azure Well-Architected Framework</a> and best practices. In previous blog posts, we’ve demonstrated how to <a href=\"https://www.hashicorp.com/blog/building-a-secure-azure-reference-architecture-with-terraform\">build a secure Azure reference architecture</a> and <a href=\"https://www.hashicorp.com/blog/deploying-securely-into-azure-architecture-with-terraform-cloud-and-hcp-vault\">deploy securely into Azure with HashiCorp Terraform and Vault</a>, as well as <a href=\"https://www.hashicorp.com/blog/manage-post-deployment-microsoft-azure-policy-operations-with-terraform\">how to manage post-deployment operations</a>. This post looks at how HashiCorp and Microsoft have created building blocks that allow you to repeatedly, securely, and cost-effectively accelerate AI adoption on Azure with Terraform. Specifically, it covers how to do this by using Terraform to provision Azure OpenAI services. </p>\n\n<h2>The state of artificial intelligence</h2>\n\n<p>In its report on<a href=\"https://www.mckinsey.com/capabilities/quantumblack/our-insights/the-state-of-ai-in-2023-generative-ais-breakout-year\"> the state of AI in 2023</a>, McKinsey states that “AI has risen from a topic relegated to tech employees to a focus of company leaders: nearly one-quarter of surveyed C-suite executives say they are personally using generative AI tools for work, and more than one-quarter of respondents from companies using AI say generative AI is already on their boards’ agendas.” The report also highlights the potential risks from AI, including cybersecurity,  compliance, re-skilling, and inaccuracy. </p>\n\n<p>In this post, we use Terraform to solve some of the challenges mentioned, such as security and compliance, while looking at key AI use cases and their deployments on the Azure platform.</p>\n<img src=\"https://www.datocms-assets.com/2885/1694792825-mkins-2-charts.png\" alt=\"McKinsey\" /><h2>Artificial intelligence building blocks</h2>\n\n<p>Before you dive into AI, you’ll want to understand how two key subtopics — machine learning and deep learning — fit under it. The diagram below shows the relationship between AI, machine learning, and deep learning. </p>\n<img src=\"https://www.datocms-assets.com/2885/1694792820-deep-learning-ai-ml.png\" alt=\"AI\" /><p>Generative AI is a subset of AI that was recently popularized by Open AI’s ChatGPT and falls into the category of deep learning. This encompasses the ability of a computer to simulate human-like behavior and create new content.  </p>\n\n<p>OpenAI is a project that uses data sets called <a href=\"https://en.wikipedia.org/wiki/Large_language_model\">large language models (LLMs)</a>, which OpenAI has provided an interface to via ChatGPT. The model is the “engine” of deep learning algorithms, capable of recognizing, summarizing, translating, predicting, and generating text and other content. </p>\n\n<h3>Azure OpenAI and AI Services</h3>\n\n<p>Azure AI services is Microsoft's suite of out-of-the-box and customizable AI tools that fall under machine learning. They provide a wide range of functionality, including natural language processing, computer vision, and speech recognition. These services let organizations extract insights from data, automate processes, enhance customer experiences, and make more informed decisions through the integration of intelligent algorithms and models into their applications and workflows. </p>\n\n<p><a href=\"https://azure.microsoft.com/en-us/products/ai-services/openai-service\">Azure OpenAI Service</a> focuses on applying LLMs and generative AI to a variety of use cases. Azure OpenAI Service provides REST API access to OpenAI's powerful language models including the GPT-4, GPT-35-Turbo, and Embeddings model series.</p>\n\n<h2>Accelerated OpenAI and Azure AI Service deployments</h2>\n\n<p><a href=\"https://developer.hashicorp.com/terraform/language/modules\">Terraform modules</a> are collections of configuration files located within a single directory. These modules serve to encapsulate sets of resources designed for specific tasks, streamlining the development process by minimizing the amount of code required for similar infrastructure components. Leveraging Terraform modules can significantly expedite the deployment of an AI service on Azure. </p>\n\n<p>The <a href=\"https://registry.terraform.io/modules/Azure/openai/azurerm/latest\">Terraform module for deploying Azure OpenAI Service</a> is a community-built module that has been developed to quickly deploy the Azure OpenAI Service with Terraform. Additional modules for Microsoft Azure can be found in the <a href=\"https://registry.terraform.io/namespaces/Azure\">Terraform Registry</a>.</p>\n\n<h2>Open AI</h2>\n\n<p>Many customers want to learn more about getting started with OpenAI.  A quickstart for kicking this off is to use a pre-built module like the Terraform module for Azure OpenAI. As you get more familiar with the module and your unique requirements, you can construct your own module based on this <a href=\"https://registry.terraform.io/modules/Azure/openai/azurerm/latest?tab=resources\">module</a> to achieve a custom starting point.</p>\n\n<p>Using the simple code snippet below, you can leverage the module to deploy an environment that takes advantage of the GPT or DALL-E (which is an AI system that can create realistic images and art from a description in natural language). (Please note that to use this your Azure subscription has to apply for and be approved to use OpenAI.)</p>\n<pre><code>terraform {\nrequired_providers {\n azurerm = {\n  source  = \"hashicorp/azurerm\"\n  version = \"~&gt; 3.0\"\n}\n\nprovider \"azurerm\" {\n features {}\n}\n\nresource \"azurerm_resource_group\" \"rg\" {\n name     = \"OpenAI\"\n location = \"East US\"\n}\n\nmodule \"openai\" {\n depends_on          = [ azurerm_resource_group.rg ]\n Source              = \"Azure/openai/azurerm\"\n Version             = \"0.1.1\"\n location            = azurerm_resource_group.rg.location\n resource_group_name = azurerm_resource_group.rg.name\n}</code></pre><h3>Microsoft tech community examples</h3>\n\n<p>Microsoft's technical community has developed content that can help you understand AI use cases and provides code examples. Here are two that cover OpenAI integrations, one for a specific application integration with Azure Kubernetes Service (AKS) and the second focusing more on creating a repeatable landing zone</p>\n\n<h4>Deploy an Azure OpenAI/ChatGPT app on AKS with Terraform</h4>\n\n<p>Here’s an example of how to <a href=\"https://techcommunity.microsoft.com/t5/fasttrack-for-azure/deploy-and-run-a-azure-openai-chatgpt-app-on-aks-with-terraform/ba-p/3839611\">Deploy and run a Azure OpenAI/ChatGPT app on AKS with Terraform</a>. This sample shows how to deploy an<a href=\"https://docs.microsoft.com/en-us/azure/aks/intro-kubernetes\">AKS</a> cluster and <a href=\"https://learn.microsoft.com/en-us/azure/cognitive-services/openai/overview\">Azure OpenAI Service</a> using <a href=\"https://www.terraform.io/\">Terraform</a> modules with the <a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs\">Azure provider</a>. It uses the Terraform provider to deploy a Python chatbot that authenticates against Azure OpenAI using <a href=\"https://learn.microsoft.com/en-us/azure/aks/workload-identity-overview\">Azure AD workload identity</a> and calls the <a href=\"https://platform.openai.com/docs/api-reference/chat\">Chat Completion API</a> of a <a href=\"https://learn.microsoft.com/en-us/azure/cognitive-services/openai/concepts/models#chatgpt-gpt-35-turbo\">ChatGPT model</a>.</p>\n\n<h4>Deploy an Azure AI landing zone with Terraform</h4>\n\n<p>Using Terraform as the Infrastructure as Code tool, you can deploy the Azure OpenAI in a repeatable way leveraging a Landing Zone architecture. This means that customer get access to best practices from the Azure Cloud Adoption Framework (CAF), a comprehensive guide by Microsoft to ensure successful cloud adoption and alignment with business goals. Combining the landing zone construct and the resources it builds, organizations can create a repeatable pattern that accelerates their AI initiatives and simplifies the building of Azure services.</p>\n\n<p>In this <a href=\"https://techcommunity.microsoft.com/t5/azure-architecture-blog/empowering-ai-building-and-deploying-azure-ai-landing-zones-with/ba-p/3891249\">article</a>, Microsoft explores in more detail how to deploy the Azure OpenAI landing zone architecture. </p>\n\n<h2>Azure AI Services</h2>\n\n<p>Customers are trying to understand how to scale AI in their organization. This encompasses a wide range of services including machine learning. The Azure Machine Learning workspace is the top-level resource for Azure Machine Learning, providing a centralized place to work with all the artifacts you create when you use Azure Machine Learning. </p>\n\n<p>The workspace keeps a history of all jobs, including logs, metrics, output, and a snapshot of your scripts. The workspace stores references to resources like data stores and compute. It also holds all assets, including models, environments, components and data assets, making it easy to collaborate with colleagues to create machine learning artifacts and group-related work.</p>\n\n<p>The <a href=\"https://learn.microsoft.com/en-us/azure/architecture/reference-architectures/hybrid-networking/hub-spoke?tabs=cli\">Hub-spoke network topology in Azure</a> is a reference architecture that implements a pattern where the hub-virtual network acts as a central point of connectivity to many spoke virtual networks. The spoke virtual networks connect with the hub and can be used to isolate workloads. You can also enable cross-premises scenarios by using the hub to connect to on-premises networks. If you want to start with a bare hub and spoke deployment, the code can be found <a href=\"https://github.com/dawright22/hub-spoke-network-topology-architecture\">here</a>. </p>\n<img src=\"https://www.datocms-assets.com/2885/1694792807-azure-arch-diagram1.png\" alt=\"Azure\" /><p>Download a <a href=\"https://arch-center.azureedge.net/hub-spoke-network-topology-architecture.vsdx\">Visio file</a> of this architecture from Microsoft</p>\n\n<p>Using the code that creates an Azure machine learning workspace, you can combine it with the secure hub-and-spoke environment above to create a collaborative shared and secure environment across your organization. </p>\n<pre><code># Dependent resources for Azure Machine Learning\nresource \"azurerm_application_insights\" \"default\" {\n  name                = \"${random_pet.prefix.id}-appi\"\n  location            = azurerm_resource_group.default.location\n  resource_group_name = azurerm_resource_group.default.name\n  application_type    = \"web\"\n}\n\nresource \"azurerm_key_vault\" \"default\" {\n  name                     = \"${var.prefix}${var.environment}${random_integer.suffix.result}kv\"\n  location                 = azurerm_resource_group.default.location\n  resource_group_name      = azurerm_resource_group.default.name\n  tenant_id                = data.azurerm_client_config.current.tenant_id\n  sku_name                 = \"premium\"\n  purge_protection_enabled = false\n}\n\nresource \"azurerm_storage_account\" \"default\" {\n  name                            = \"${var.prefix}${var.environment}${random_integer.suffix.result}st\"\n  location                        = azurerm_resource_group.default.location\n  resource_group_name             = azurerm_resource_group.default.name\n  account_tier                    = \"Standard\"\n  account_replication_type        = \"GRS\"\n  allow_nested_items_to_be_public = false\n}\n\nresource \"azurerm_container_registry\" \"default\" {\n  name                = \"${var.prefix}${var.environment}${random_integer.suffix.result}cr\"\n  location            = azurerm_resource_group.default.location\n  resource_group_name = azurerm_resource_group.default.name\n  sku                 = \"Premium\"\n  admin_enabled       = true\n}\n\n# Machine Learning workspace\nresource \"azurerm_machine_learning_workspace\" \"default\" {\n  name                          = \"${random_pet.prefix.id}-mlw\"\n  location                      = azurerm_resource_group.default.location\n  resource_group_name           = azurerm_resource_group.default.name\n  application_insights_id       = azurerm_application_insights.default.id\n  key_vault_id                  = azurerm_key_vault.default.id\n  storage_account_id            = azurerm_storage_account.default.id\n  container_registry_id         = azurerm_container_registry.default.id\n  public_network_access_enabled = true\n\n  identity {\n    type = \"SystemAssigned\"\n  }\n}</code></pre><p>Leveraging the base hub and spoke allows you to deploy Azure services in the hub, which offers access via API endpoints to resources in the spoke endpoints, making an “AI hub” that you can use to share the service with other virtual networks that users can access, build applications in, and experiment with, allowing for faster sharing of resources to create new business outcomes. </p>\n\n<h2>Secure Azure machine learning workspace</h2>\n\n<p>To get started with the <a href=\"https://github.com/dawright22/secure-azure-machine-learning-workspace.git\">full example</a>, clone the repository change into the newly created directory, initialize Terraform within this new directory, and apply a build run. This will create a full secure hub-and-spoke Azure Machine Learning workspace.</p>\n\n<p>Copy these commands in order:</p>\n\n<pre><code>➜ Code# Git clonehttps://github.com/dawright22/secure-azure-machine-learning-workspace.git\n\n➜ Code# cd secure-azure_machine_learning_workspace\n\n➜ Code# terraform init\n\n➜ Code# terraform plan \n\n➜ Code# terraform apply\n</code></pre>\n<p>At this point, you should have a configuration that describes the full set of resources you require to get started with Azure machine learning in a network-isolated setup. This configuration creates new network components so please be aware of the costs. </p>\n\n<p>You can now use Azure Bastion to securely connect to the Windows Data Science Virtual Machine (DSVM). With many popular data science tools pre-installed and pre-configured to jumpstart building intelligent applications for advanced analytics, the DSVM can set you up with the tools you need to start your machine learning journey.</p>\n\n<h2>Next steps</h2>\n\n<p>There are endless ways practitioners can use Terraform to scale the adoption of artificial intelligence in an Azure environment.. Be sure to check out our <a href=\"https://www.hashicorp.com/campaign/security-webinar-series-with-hashicorp-and-microsoft-azure-emea\">ongoing webinar series</a> where HashiCorp and Microsoft cover how to build, deploy and secure resources.</p>\n","author":"David Wright","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"ad52cb25d242a795718c7c070fa3fefbe27ecaaa490f1fbd902b82167df1e856","category":"Tech"}