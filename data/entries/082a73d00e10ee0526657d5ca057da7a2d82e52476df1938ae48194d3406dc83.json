{"title":"Amazon Route 53 Resolver Now Available on AWS Outposts Rack","link":"https://aws.amazon.com/blogs/aws/amazon-route-53-resolver-now-available-on-aws-outposts-rack/","date":1689890624000,"content":"<p>Starting today, <a href=\"https://aws.amazon.com/route53/\">Amazon Route 53</a> Resolver is now available on <a href=\"https://aws.amazon.com/outposts/rack/\">AWS Outposts rack</a>, providing your on-premises services and applications with local DNS resolution directly from Outposts. Local Route 53 Resolver endpoints also enable DNS resolution between Outposts and your on-premises DNS server. Route 53 Resolver on Outposts helps to improve your on-premises applications availability and performance.</p> \n<p>AWS Outposts provides a hybrid cloud solution that allows you to extend your AWS infrastructure and services to your on-premises data centers. This enables you to build and operate hybrid applications that seamlessly integrate with your existing on-premises infrastructure. Your applications deployed on Outposts benefit from low-latency access to on-premises systems. You also get a consistent management experience across AWS Regions and your on-premises environments. This includes access to the same AWS management tools, APIs, and services that you use when managing AWS services in a Region. Outposts uses the same security controls and policies as AWS in the cloud, providing you with a consistent security posture across your hybrid cloud environment. This includes data encryption, identity and access management, and network security.</p> \n<p>One of the typical use cases for Outposts is to deploy applications that require low-latency access to on-premises systems, such as factory equipment, high-frequency trading applications, or medical diagnosis systems.</p> \n<p>DNS stands for Domain Name System, which is the system that translates human-readable domain names like “example.com” into IP addresses like “93.184.216.34” that computers use to communicate with each other on the internet. A Route 53 Resolver is a component that is responsible for resolving domain names to IP addresses.</p> \n<p>Until today, applications and services running on an Outpost forwarded their DNS queries to the parent AWS Region the Outpost is connected to. But remember, as Amazon CTO Dr Werner Vogels says: everything fails all the time. There can be temporary site disconnections—think about fiber cuts or weather events. When the on-premises facility becomes temporarily disconnected from the internet, local DNS resolution fails, making it difficult for applications and services to discover other services, even when they are running on the same Outposts rack. For example, applications running locally on the Outpost won’t be able to discover the IP address of a local database running on the same Outpost, or a microservice won’t be able to locate other microservices running locally.</p> \n<p>Starting today, when you opt in for local Route 53 Resolvers on Outposts, applications and services will continue to benefit from local DNS resolution to discover other services—even in a parent AWS Region connectivity loss event. Local Resolvers also help to reduce latency for DNS resolutions as query results are cached and served locally from the Outposts, eliminating unnecessary round-trips to the parent AWS Region. All the DNS resolutions for applications in Outposts VPCs using <a href=\"https://aws.amazon.com/about-aws/whats-new/2014/11/05/amazon-route-53-now-supports-private-dns-with-amazon-vpc/\">private DNS</a> are served locally.</p> \n<p>In addition to local Resolvers, this launch also enables local <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-overview-DSN-queries-to-vpc.html\">Resolver endpoints</a>. Route 53 Resolver endpoints are not new; creating inbound or outbound Resolver endpoints in a VPC has been available <a href=\"https://aws.amazon.com/about-aws/whats-new/2018/11/amazon-route-53-announces-resolver-with-support-for-dns-resolution-over-direct-connect-and-vpn/\">since November 2018</a>. Today, you can also create endpoints inside the VPC on Outposts. Route 53 Resolver outbound endpoints enable Route 53 Resolvers to forward DNS queries to DNS resolvers that you manage, for example, on your on-premises network. In contrast, Route 53 Resolver inbound endpoints forward the DNS queries they receive from outside the VPC to the Resolver running on Outposts. It allows sending DNS queries for services deployed on a private Outposts VPC from outside of that VPC.</p> \n<p><span><strong>Let’s See It in Action<br /> </strong></span>To create and test a local Resolver on Outposts, I first connect to the Outpost section of the <a href=\"https://console.aws.amazon.com\">AWS Management Console</a>. I navigate to the <strong>Route 53 Outposts</strong> section and select <strong>Create Resolver</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/27/Image-3-6-23-at-8.58-PM.jpeg\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/27/Image-3-6-23-at-8.58-PM.jpeg\" alt=\"Create local resolver on outpost\" width=\"810\" height=\"183\" /></a></p> \n<p>I select the <strong>Outpost</strong> on which I want to create the Resolver and enter a <strong>Resolver name</strong>. Then, I select the size of the instances to deploy the Resolver and the number of instances. The selection of instance size impacts the performance of the Resolver (the number of resolutions it can process per second). The default is an <code>m5.large</code> instance able to handle up to 7,000 queries per second. The number of instances impacts the availability of the Resolver, the default is four instances. I select <strong>Create Resolver</strong> to create the Resolver instances.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-6-23-at-9.01-PM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-6-23-at-9.01-PM.png\" alt=\"Create local resolver - choose instance type and number\" width=\"810\" height=\"894\" /></a></p> \n<p>After a few minutes, I should see the Resolver status becoming <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/2705.png\" alt=\"✅\" /> <strong><span>Operational</span></strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-8-23-at-8.26-PM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-8-23-at-8.26-PM.png\" alt=\"Local resolver is operational\" width=\"810\" height=\"113\" /></a>The next step is to create the Resolver endpoint. Inbound endpoints allow to forward external DNS queries to the local Resolver on the Outpost. Outbound endpoints allow to forward locally initiated DNS queries to external DNS resolvers you manage. For this demo, I choose to create an inbound endpoint.</p> \n<p>Under the <strong>Inbound endpoints</strong> section, I select <strong>Create inbound endpoint</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-9-23-at-10.31-PM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-9-23-at-10.31-PM.png\" alt=\"Local resolver - create inbound endpoint\" width=\"810\" height=\"369\" /></a></p> \n<p>I enter an <strong>Endpoint name</strong>, I choose the <strong>VPC in the Region</strong> to attach this endpoint to, and I select the previously created <strong>Security group for this endpoint</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-9-23-at-11.01-PM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-9-23-at-11.01-PM.png\" alt=\"Create inbound endpoint details\" width=\"810\" height=\"654\" /></a></p> \n<p>I select the IP address the endpoint will consume in each subnet. I can select to <strong>Use an IP address that is selected automatically</strong> or <strong>Use an IP address that I specify</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-9-23-at-11.02-PM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-9-23-at-11.02-PM.png\" alt=\"Create inbound endpoint - select an IP address\" width=\"810\" height=\"1021\" /></a>Finally, I select the instance type to bind to the inbound endpoint. The larger the instance, the more queries per second it will handle. The service creates two endpoint instances for high availability.</p> \n<p>When I am ready, I select the <strong>Create inbound endpoint</strong> to start the creation process.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-9-23-at-11.03-PM.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/Image-3-9-23-at-11.03-PM.png\" alt=\"Create inbound endpoint - select the instance type\" width=\"810\" height=\"595\" /></a></p> \n<p>After a few minutes, the endpoint <strong>Status</strong> becomes <img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/2705.png\" alt=\"✅\" /> <span><strong>Operational</strong></span>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/AF2C6C27-81E4-4976-B653-F1D4B0606989.png\"><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/05/28/AF2C6C27-81E4-4976-B653-F1D4B0606989.png\" alt=\"Create inbound endpoint sttaus operational\" width=\"810\" height=\"320\" /></a></p> \n<p>The setup is now ready to test. I therefore SSH-connect to an EC2 instance running on the Outpost, and I test the time it takes to resolve an external DNS name. Local Resolvers cache queries on the Outpost itself. I therefore expect my first query to take a few milliseconds and the second one to be served immediately from the cache.</p> \n<p>Indeed, the first query resolves in 13 ms (see the line <code>;; Query time: 13 msec</code>).</p> \n<pre><code>➜  ~ dig amazon.com\n\n; &lt;&lt;&gt;&gt; DiG 9.16.38-RH &lt;&lt;&gt;&gt; amazon.com\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 35859\n;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 1232\n;; QUESTION SECTION:\n;amazon.com.\t\t\tIN\tA\n\n;; ANSWER SECTION:\namazon.com.\t\t797\tIN\tA\t52.94.236.248\namazon.com.\t\t797\tIN\tA\t205.251.242.103\namazon.com.\t\t797\tIN\tA\t54.239.28.85\n\n;; Query time: 13 msec\n;; SERVER: 10.0.0.2#53(10.0.0.2)\n;; WHEN: Sun May 28 09:47:27 CEST 2023\n;; MSG SIZE  rcvd: 87</code></pre> \n<p>And when I repeat the same query, it resolves in zero milliseconds, showing it is now served from a local cache.</p> \n<pre><code>➜  ~ dig amazon.com\n\n; &lt;&lt;&gt;&gt; DiG 9.16.38-RH &lt;&lt;&gt;&gt; amazon.com\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 63500\n;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 1232\n;; QUESTION SECTION:\n;amazon.com.\t\t\tIN\tA\n\n;; ANSWER SECTION:\namazon.com.\t\t586\tIN\tA\t54.239.28.85\namazon.com.\t\t586\tIN\tA\t205.251.242.103\namazon.com.\t\t586\tIN\tA\t52.94.236.248\n\n;; Query time: 0 msec\n;; SERVER: 10.0.0.2#53(10.0.0.2)\n;; WHEN: Sun May 28 09:50:58 CEST 2023\n;; MSG SIZE  rcvd: 87</code></pre> \n<p><span><strong>Pricing and Availability<br /> </strong></span>Remember that only the Resolver and the VPC endpoints are deployed on your Outposts. You continue to manage your Route 53 zones and records from the AWS Regions. The local Resolver and its endpoints will consume some capacity on the Outposts. You will need to provide four EC2 instances from your Outposts for the Route 53 Resolver and two other instances for each Resolver endpoint.</p> \n<p>Your existing Outposts racks must have the latest Outposts software for you to use the local Route 53 Resolver and the Resolver endpoints. <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/case-management.html\">You can raise a ticket</a> with us to have your Outpost updated (the console will also remind you to do so when needed).</p> \n<p>The local Resolvers are provided without additional cost. The endpoints are charged per <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html\">elastic network interface</a> (ENI) per hour, as is already the case today. Our <a href=\"https://aws.amazon.com/outposts/rack/pricing/\">Outpost rack pricing page</a> has the details.</p> \n<p>You can configure local Resolvers and local endpoints in all AWS Regions where Outposts racks are available, except in AWS GovCloud (US) Regions. <a href=\"https://aws.amazon.com/outposts/rack/faqs/\">That’s a list of 22 AWS Regions</a> as of today.</p> \n<p><strong>Go and configure local Route 53 Resolvers on Outposts now!</strong></p> \n<a href=\"https://twitter.com/sebsto\">-- seb</a> \n<p> </p> \n<p>P.S. We’re focused on improving our content to provide a better customer experience, and we need your feedback to do so. Please take <a href=\"https://amazonmr.au1.qualtrics.com/jfe/form/SV_234fKSz305XaQpE\">this quick survey</a> to share insights on your experience with the AWS Blog. Note that this survey is hosted by an external company, so the link does not lead to our website. AWS handles your information as described in the <a href=\"https://aws.amazon.com/privacy/\">AWS Privacy Notice</a>.</p>","author":"Sébastien Stormacq","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"082a73d00e10ee0526657d5ca057da7a2d82e52476df1938ae48194d3406dc83","category":"Tech"}