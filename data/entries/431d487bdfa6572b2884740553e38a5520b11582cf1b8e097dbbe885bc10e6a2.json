{"title":"GitHub ออกเครื่องมือช่วยสแกนหาช่องโหว่ Log4j ในซอร์สโค้ด-โปรเจคต์","link":"https://www.blognone.com/node/126342","date":1639619248000,"content":"<div><div><div><p>GitHub ออกตัวช่วยสแกน<a href=\"https://www.blognone.com/node/126257\">ช่องโหว่ Log4j</a> ในโปรเจคต์ซอฟต์แวร์</p>\n<p>ผู้ใช้งานสามารถเปิดใช้ Dependabot ซึ่งเป็นบ็อตช่วยตรวจหาเวอร์ชันของแพ็กเกจซอฟต์แวร์ที่ใช้งาน (<a href=\"https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/enabling-and-disabling-dependabot-version-updates#enabling-dependabot-version-updates\">เอกสารวิธีเปิดใช้</a>) หากมีแพ็กเกจ Log4j เวอร์ชันที่มีช่องโหว่ ก็จะได้รับคำเตือนให้อัพเกรดเป็นเวอร์ชันที่อุดแพตช์แล้ว</p>\n<p>GitHub ระบุว่าส่งคำเตือนเรื่อง Log4j ไปแล้วว่า 175,000 ครั้ง อย่างไรก็ตาม Dependabot ใช้ได้เฉพาะโค้ด Java ที่จัดการด้วย Maven เท่านั้น ยังไม่สามารถใช้กับ Gradle ได้ในตอนนี้</p>\n<p>นอกจาก Dependabot ที่ใช้ตรวจสอบ dependency แล้ว GitHub ยังมีเครื่องมืออีกตัวคือ CodeQL query (ใช้ได้ฟรีกับ repository สาธารณะ หรือลูกค้าจ่ายเงินที่ซื้อ GitHub Advanced Security) เพื่อตรวจหาบรรทัดในซอร์สโค้ดที่มีความเสี่ยงจากการเรียกใช้ Log4j ให้ด้วย</p>\n<p><img src=\"https://www.blognone.com/sites/default/files/externals/0ee87c1aef1294f7df025a1571eae6e5.png\" /></p>\n<p>ที่มา - <a href=\"https://github.blog/2021-12-14-using-githubs-security-features-identify-log4j-exposure-codebase/\">GitHub</a></p>\n</div></div></div><div><div>Topics: </div><div><div><a href=\"/topics/github\">GitHub</a></div><div><a href=\"/topics/log4j\">Log4j</a></div><div><a href=\"/topics/security\">Security</a></div></div></div>","author":"mk","siteTitle":"Blognone","siteHash":"ededadcf18490b3937e7dd89ebe8c00dc129addbdf1ebe4aff1f458146693da0","entryHash":"431d487bdfa6572b2884740553e38a5520b11582cf1b8e097dbbe885bc10e6a2","category":"Thai"}