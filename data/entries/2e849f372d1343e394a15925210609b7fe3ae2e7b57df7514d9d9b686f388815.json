{"title":"Secure Boot is completely broken on 200+ models from 5 big device makers","link":"https://arstechnica.com/?p=2039140","date":1721930410000,"content":"<div>\n<figure>\n  <img src=\"https://cdn.arstechnica.net/wp-content/uploads/2020/10/rootkit-800x533.jpg\" alt=\"Secure Boot is completely broken on 200+ models from 5 big device makers\" />\n      <p><a href=\"https://cdn.arstechnica.net/wp-content/uploads/2020/10/rootkit.jpg\">Enlarge</a> (credit: sasha85ru | Getty Imates)</p>  </figure>\n\n\n\n\n\n\n<div><a name=\"page-1\"></a></div>\n<p>In 2012, an industry-wide coalition of hardware and software makers adopted <a href=\"https://uefi.org/press-release/UEFI_Forum_Releases_UEFI_2.3.1_Specification_Update_and_Schedules_July_3_2012\">Secure Boot</a> to protect against a long-looming security threat. The threat was the specter of malware that could infect the BIOS, the firmware that loaded the operating system each time a computer booted up. From there, it could remain immune to detection and removal and could load even before the OS and security apps did.</p>\n<p>The threat of such BIOS-dwelling malware was largely theoretical and fueled in large part by the creation of <a href=\"https://blog.csdn.net/icelord/article/details/1604884\">ICLord Bioskit</a> by a Chinese researcher in 2007. ICLord was a <a href=\"https://en.wikipedia.org/wiki/Rootkit\">rootkit</a>, a class of malware that gains and maintains stealthy root access by subverting key protections built into the operating system. The proof of concept demonstrated that such BIOS rootkits weren't only feasible; they were also powerful. In 2011, the threat became a reality with the discovery of <a href=\"https://www.theregister.com/2011/09/14/bios_rootkit_discovered/\">Mebromi</a>, the first-known BIOS rootkit to be used in the wild.</p>\n<p>Keenly <a href=\"https://uefi.org/sites/default/files/resources/UEFI_Plugfest_2011Q4_P5_Insyde.pdf\">aware of Mebromi</a> and its potential for a devastating new class of attack, the Secure Boot architects hashed out a complex new way to shore up security in the pre-boot environment. Built into UEFI—the Unified Extensible Firmware Interface that would become the successor to BIOS—Secure Boot used <a href=\"https://en.wikipedia.org/wiki/Public-key_cryptography\">public-key cryptography</a> to block the loading of any code that wasn’t signed with a pre-approved digital signature. To this day, key players in security—among them <a href=\"https://www.microsoft.com/en-us/surface/do-more-with-surface/what-is-secure-boot\" target=\"_blank\">Microsoft</a> and the <a href=\"https://media.defense.gov/2020/Sep/15/2002497594/-1/-1/0/CTR-UEFI-SECURE-BOOT-CUSTOMIZATION-20200915.PDF/CTR-UEFI-SECURE-BOOT-CUSTOMIZATION-20200915.PDF\" target=\"_blank\">US National Security Agency</a>—regard Secure Boot as an important, if not essential, foundation of trust in securing devices in some of the most critical environments, including in industrial control and enterprise networks.</p></div><p><a href=\"https://arstechnica.com/?p=2039140#p3\">Read 36 remaining paragraphs</a> | <a href=\"https://arstechnica.com/?p=2039140&amp;comments=1\">Comments</a></p>","author":"Dan Goodin","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"2e849f372d1343e394a15925210609b7fe3ae2e7b57df7514d9d9b686f388815","category":"Tech"}