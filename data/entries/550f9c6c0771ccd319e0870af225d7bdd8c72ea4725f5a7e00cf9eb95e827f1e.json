{"title":"Achieving PCI compliance: Leveraging HashiCorp Vault to protect payment data","link":"https://www.hashicorp.com/blog/achieving-pci-compliance-leveraging-hashicorp-vault-to-protect-payment-data","date":1698244200000,"content":"<p>PCI DSS (Payment Card Industry Data Security Standard) is a global standard that establishes technical and operational criteria for protecting payment data. The PCI Security Standards Council announced <a href=\"https://www.pcisecuritystandards.org/about_us/press_releases/securing-the-future-of-payments-pci-ssc-publishes-pci-data-security-standard-v4-0/\">PCI DSS v4.0</a> on March 31, 2022. Now organizations have until March 31, 2025 to comply with the new standard. </p>\n\n<p>HashiCorp Vault can play a significant role in helping your organization attain PCI DSS certification by providing secure and compliant management of sensitive data, including cardholder data. This post will give a brief overview of the areas where Vault can help your organization comply with the new standards in time.</p>\n\n<h2>What is HashiCorp Vault?</h2>\n\n<p><a href=\"https://developer.hashicorp.com/vault/docs/what-is-vault\">Vault</a> is an identity-based secrets and encryption management system that provides encryption services gated by authentication and authorization methods to help ensure secure, auditable, and restricted access to secrets. Some of <a href=\"https://www.hashicorp.com/resources?products=Vault&amp;contentType=Case%20Study\">the world’s largest organizations use Vault</a> to secure, store, and protect secrets and other sensitive data using a UI, CLI, or HTTP API.</p>\n\n<p>A secret is anything that you want to tightly control access to, such as tokens, API keys, passwords, encryption keys, or certificates. Vault provides a unified interface to any secret, while providing tight access control and recording a detailed audit log. Vault validates and authorizes clients (users, machines, applications) before providing them access to secrets or stored sensitive data.</p>\n\n<h2>Vault secrets management can help meet PCI requirements</h2>\n\n<p>HashiCorp Vault can help organizations meet several PCI requirements, including:</p>\n\n<ol>\n<li><strong>Secrets management</strong>: HashiCorp Vault can securely store and manage sensitive data, such as API keys, passwords, and encryption keys. This ensures that cardholder data (CHD) and other sensitive information are protected from unauthorized access or exposure.</li>\n<li><strong>Data encryption</strong>: Vault provides strong encryption capabilities, including encryption-as-a-service. You can use Vault to manage the encryption keys required for protecting data at rest and in-transit, which can help meet PCI requirements for compliance when storing CHD or secrets related to the cardholder data environment (CDE).</li>\n<li><strong>Dynamic secrets</strong>: Vault can generate dynamic secrets on-demand and automatically refresh and rotate them frequently, reducing the risk of long-lived secrets being compromised. This aligns with PCI DSS requirements for secure key management and data access.</li>\n<li><strong>Data masking</strong>: Vault can be used to mask sensitive data, such as credit card numbers, by doing irreversible transformations with the format preserved, replacing all characters with user-specified ones, and other forms of pseudonymization. This may help reduce the scope of PCI requirements by limiting the exposure of cardholder data.</li>\n<li><strong>Format-preserving encryption:</strong> Vault can transform secret data via FF3-1 to encode input values while maintaining its data format and length.</li>\n<li><strong>Tokenization</strong>: Vault can substitute sensitive data elements such as cardholder data with a non-sensitive and mathematically irreversible equivalent, replacing the data rather than encrypting it.</li>\n<li><strong>Automated secret rotation</strong>: Vault can automate the rotation of encryption keys, database credentials, and other secrets, ensuring that they are changed in accordance with organizational policy and in alignment with security best practices.</li>\n<li><strong>Access control</strong>: Vault offers fine-grained access controls, allowing you to define and enforce access policies based on roles and permissions. This helps ensure that only authorized personnel can access sensitive data, which directly supports PCI DSS requirements.</li>\n<li><strong>Audit logging</strong>: Vault maintains comprehensive audit logs of all access and operations, providing accountability for access to secrets stored within Vault and supporting the compliance with PCI requirements. Vault logs provide the visibility needed to track who accessed what data and when, helping meet PCI’s audit trail requirements.</li>\n<li><strong>Integration with other tools</strong>: Vault can <a href=\"https://developer.hashicorp.com/vault/docs/partnerships\">integrate with a large ecosystem</a> of mainstream IT tooling, as well as various cloud platforms and hardware security modules (HSMs), mitigating any integration gaps that might obstruct end-to-end compliance. Vault also has a plugin-based architecture that allows organizations to build custom integrations.</li>\n<li><strong>Third-party integrations</strong>: Vault offers integrations with multiple leading identity and access management (IAM) systems, including various identity providers and authentication mechanisms These integrations enable unified access controls and centralized roles, which can support PCI compliance.</li>\n<li><strong>Compliance as code</strong>: <a href=\"https://www.terraform.io/\">HashiCorp Terraform</a> can be used in conjunction with Vault to define <a href=\"https://www.hashicorp.com/resources/what-is-infrastructure-as-code\">infrastructure as code</a> (IaC) and ensure that compliance requirements are met from the moment infrastructure gets provisioned. This includes setting up Vault policies and configurations as code.</li>\n</ol>\n\n<h2>Meeting specific PCI requirements</h2>\n\n<p>HashiCorp Vault features can be mapped to 3 of the 12 key <a href=\"https://docs-prv.pcisecuritystandards.org/PCI%20DSS/Supporting%20Document/PCI_DSS-QRG-v4_0.pdf\">PCI requirements listed in the PCI DSS v4.0 Quick Reference Guide</a>; specifically requirements 2, 3, and 4 on pages 24-27 in the reference guide:</p>\n\n<h3>PCI requirement #2: Apply secure configurations to all system components</h3>\n\n<p><strong>The requirement:</strong> Processes and mechanisms for applying secure configurations to all system components must be defined and understood, and system components must be configured and managed securely.</p>\n\n<p><strong>How Vault addresses it:</strong> Vault secrets management securely stores and manages access to secrets and systems based on trusted sources of application and user identity. With dynamic secrets, Vault can generate time-based access credentials.</p>\n\n<h3>PCI requirement #3: Protect stored account data</h3>\n\n<p><strong>The requirement:</strong> Protect stored IT system account data and secure the cryptographic keys to protect stored account data. Where cryptography is used to protect stored account data, key management processes and procedures covering all aspects of the key lifecycle must be defined and implemented. In addition, access to displays of full primary account numbers (PAN) and the ability to copy cardholder data must be restricted. PANs must be secured wherever they are stored.</p>\n\n<p><strong>How Vault addresses it:</strong> Vault secures credentials and secrets used by people and applications. It updates and rotates credentials and secrets automatically based on policy. Vault's <a href=\"https://www.hashicorp.com/blog/how-to-choose-a-data-protection-method\">Advanced Data Protection</a> features include the <a href=\"https://developer.hashicorp.com/vault/docs/secrets/transform\">Transform secrets engine</a>, which supports handling cardholder data with non-decipherable, format-preserving, or stateful encryption capabilities, such as data masking, format-preserving encryption, and tokenization.</p>\n\n<h3>PCI requirement #4: Protect cardholder data with strong cryptography during transmission over open, public networks</h3>\n\n<p><strong>The requirement</strong>: Define and document processes and mechanisms to protect cardholder data with strong cryptography during transmission over open, public networks.</p>\n\n<p><strong>How Vault addresses it:</strong> Vault provides encryption-as-a-service in-transit and at-rest to secure customer data. Its KMIP secrets engine lets Vault act as a Key Management Interoperability Protocol (KMIP) server for clients to receive cryptographic keys and encrypt data using KMIP. Vault also supports SSH keys and certificate management to help protect CHD in transit.</p>\n\n<h2>Using Vault for PCI DSS compliance</h2>\n\n<p>Leveraging HashiCorp Vault effectively for PCI DSS compliance requires several steps:</p>\n\n<ol>\n<li>Identify and document how Vault will be used to meet specific PCI requirements.</li>\n<li>Develop and implement policies and procedures for using Vault in a PCI-compliant manner.</li>\n<li>Ensure Vault is located in the proper network location and access from Vault to CDE systems is limited to what is necessary.</li>\n<li>Regularly monitor and audit Vault to ensure ongoing compliance.</li>\n<li>Keep track of changes in PCI DSS requirements and adjust your Vault configurations and policies accordingly.</li>\n</ol>\n\n<p>Lastly, achieving PCI compliance requires a comprehensive approach covering people, processes, and technology. HashiCorp Vault can be a valuable tool within that approach, but it must be integrated into a broader compliance strategy that includes training, regular audits, and ongoing monitoring of your systems and processes.</p>\n\n<p>To get started with HashiCorp Vault, visit the <a href=\"https://www.hashicorp.com/products/vault/features\">Vault product page</a>. To learn more about what’s new in Vault Enterprise, go to the <a href=\"https://developer.hashicorp.com/vault/docs\">Vault Enterprise release page</a>.</p>\n\n<p>HashiCorp is no stranger to working with large customers that have strict PCI requirements. Check out the case study <a href=\"https://www.hashicorp.com/resources/managing-pci-compliant-architectures-at-scale-with-terraform-and-vault\">Managing PCI compliant architectures at scale with Terraform &amp; Vault</a> for further insights and see <a href=\"https://www.hashicorp.com/resources/transformation-tokenization-secret-engine-for-pci-dss\">Vault tokenization for PCI DSS</a> in action. Feel free to <a href=\"https://www.hashicorp.com/contact-sales\">contact us</a> if you’d like to discuss your PCI compliance journey.</p>\n","author":"Sahil Khanna","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"550f9c6c0771ccd319e0870af225d7bdd8c72ea4725f5a7e00cf9eb95e827f1e","category":"Tech"}