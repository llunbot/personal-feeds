{"title":"An Efficient Design-to-Code Handoff Process Using Uno Platform For Figma","link":"https://smashingmagazine.com/2023/11/design-to-code-handoff-process-uno-platform-figma/","date":1700215200000,"content":"<p>Effective collaboration between designers and developers is vital for creating a positive user experience, but bridging the gap between design and code can be challenging at the best of times. The handoff process often leads to communication gaps, inconsistencies, and, most importantly, lost productivity, causing frustration for both designers and developers.</p>\n<p>When we try to understand where most of the time is spent building software applications, we will notice that a significant amount of it is lost due to a lack of true collaboration, miscommunication, and no single “source of truth.” As a result, we see designers creating great user experiences for clients and passing on their approved designs with little input from the developers. They then attempt to recreate the designs with their developer tools, resulting in a complicated, cost-intensive process and often unimplementable designs.</p>\n<p>Developers and integrators are supposed to closely inspect a design and try to analyze all there is to it: the margins, spacing, alignments, the types of controls, and the different visual states that the user interface might go through (a loading state, a partial state, an error state, and so on) during the interactions with it, and then try to figure out how to write the code for this interface. Traditionally, this is the <strong>design handoff process</strong> and has long become the norm.</p>\n<p>We at Uno Platform believe that a better, more pragmatic approach must exist. So, we focused on improving the workflow and adding the option to generate the code for the user interface straight from the design while allowing developers to build upon the generated code’s foundation and further expand it.</p>\n<blockquote>“When designers are fully satisfied with their designs, they create a document with all the details and digital assets required for the development team to bring the product to life. This is the design handoff process.”<br /><br />— UX Design Institute, “<a href=\"https://www.uxdesigninstitute.com/blog/design-handoff-developers/\">How to create a design handoff for developers</a>”</blockquote>\n\n<p>Let’s look at some of the problems associated with the handoff process and how the <a href=\"https://platform.uno/unofigma/\"><strong>Uno Platform for Figma Plugin</strong></a> may help alleviate the pitfalls traditionally seen in this process.</p>\n<p><strong>Note</strong>: <em>The <a href=\"https://aka.platform.uno/uno-figma-plugin\">Uno Platform Plugin</a> for Figma is free, so if you’d like to try it while reading this article, you can <a href=\"https://aka.platform.uno/uno-figma-plugin\">install it right away</a>. Uno Platform is a developer productivity platform that enables the creation of native mobile, web, desktop, and embedded apps using a single codebase. As part of its comprehensive tooling, Uno Platform offers the Uno Figma plugin, enabling easy translation of designs to code. (While Uno Platform is free and open-source, the plugin itself is free but not open-source.) If you want to explore the code or contribute to the Uno project, please visit the <a href=\"https://github.com/unoplatform/uno\">Uno Platform GitHub</a> repository.</em></p>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/1-uno-platform-github-screenshot.jpg\" /></p>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/2-uno-figma-plugin-cover.png\" /></p>\n<p>A significant factor in choosing our current development path lies in the belief that Figma outperforms the <a href=\"https://medium.com/sketch-app-sources/how-i-use-sketch-with-zeplin-to-design-and-specify-apps-71979ccf8f72\">Sketch + Zeplin combination</a> (and not only) because of its platform-agnostic nature. Being a web-based tool, Figma is more universal, while Sketch is limited to MacOS, and sharing designs with non-Mac developers necessitates using third-party software. Figma offers an all-in-one solution, making it a more convenient option.</p>\n<p>In addition, Figma now also supports plugins, many of them assisting with the handoff process specifically. For example, Rogie King <a href=\"https://twitter.com/ozanoz/status/1690694746661089280\">recently launched</a> a plugin “<a href=\"https://www.figma.com/community/plugin/1270403910069102271/Clippy-%E2%80%94%C2%A0Add-attachments-to-your-Figma-files!\">Clippy — add attachments</a>” that allows attachments to your Figma files, which is very useful during the handoff process. Of course, there are many others.</p>\n<p>This and other factors “weighed” us towards Figma Design. And <a href=\"https://blog.zomato.com/why-we-switched-to-figma-as-a-primary-design-tool-at-zomato\">we aren’t alone</a>; others have picked up Figma as <a href=\"https://medium.com/purplebricks-digital/why-we-chose-figma-as-our-primary-design-tool-e89d371f6eec\">their key design tool</a> after doing some research and then trying things in practice.</p>\n<blockquote>“Comparing the must-haves against the features of a list of possible design apps we compiled (including Sketch, Axure RP, Framer, and more), Figma came out as the clear forerunner. We decided to proceed with a short-term trial to test Figma’s suitability, and we haven’t looked back since. It met all of our key feature requirements but surprised us with a lot of other things along the way.”<br /><br />— Simon Harper, “<a href=\"https://medium.com/purplebricks-digital/why-we-chose-figma-as-our-primary-design-tool-e89d371f6eec\">Why we chose Figma as our primary design tool</a>”</blockquote>\n\n\n\nWorking with the Uno Figma Plugin\n<h3>1: Get Started with Uno Platform for Figma Plugin</h3>\n<p>Uno for Figma presents a significant advantage for teams that rely on Figma as their primary design tool.</p>\n<p>By combining the familiarity and efficiency of Figma with the capabilities of the Uno Platform, designers can seamlessly continue working in a familiar environment that they are already comfortable with while knowing their designs will be integrated practically by their development team.</p>\n<p>Getting started with the Uno Figma plugin is a straightforward process:</p>\n<ol>\n<li>Install the <strong><a href=\"https://aka.platform.uno/uno-figma-plugin\">Uno Platform (Figma to C# or XAML)</a> plugin.</strong></li>\n<li>Open the <strong><a href=\"https://aka.platform.uno/uno-figma-material-toolkit\">Uno Platform Material Toolkit</a></strong> design file available from the Figma Community.</li>\n</ol>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/3-uno-material-toolkit-file.png\" /></p>\n<p>With the <strong>Uno Material Toolkit</strong>, you no longer need to design many of the components from scratch as the toolkit provides UI (user interface) controls designed specifically for multi-platform, responsive applications.</p>\n<p><strong>Note</strong>: <em>To use the plugin, you must create your design</em> <strong><em>inside</em></strong> <em>the Uno Material Toolkit Figma file, using its components. Without it, the plugin won’t be able to generate any output, making it incompatible with existing Figma designs.</em></p>\n<h3>2: Setting Up Your Design</h3>\n<p>Once you have installed the Uno Platform for Figma plugin and opened the Material Toolkit design file, you can use the “Getting Started” page in the file layers to set up your design. The purpose of this page is to simplify the process of defining your application’s theme, colors, and font styles.</p>\n<p>You can also use <a href=\"https://platform.uno/docs/articles/external/uno.themes/doc/material-dsp.htmlTooling%20in%20Uno.Material\">DSP Tooling in Uno.Material</a> for Uno Platform applications. This feature has been one of the top requests from the Uno Platform community, and it is now available both as a package and as part of the App Template Wizard.</p>\n<p>If you’re unfamiliar with <strong><a href=\"https://github.com/AdobeXD/design-system-package-dsp\">DSP</a> (Design System Packages)</strong>, it’s essentially a repository of design assets, including icons, buttons, and other UI elements, accompanied by JSON files containing design system information. With a DSP, you can craft a personalized theme that aligns with your brand, effortlessly integrate it into your Uno Platform application through the Figma plugin, and implement theme changes across the entire user interface of your application.</p>\n<p>The ability to import custom Design System Packages (DSPs) is a significant development for Uno Platform. With this feature, designers can create and manage their own design systems, which can be shared across projects and teams. This not only saves time but also ensures consistency across all design work. Additionally, it allows designers to maintain control over the design assets, making it easier to make updates and changes as needed.</p>\n<p><strong>Note</strong>: <em>The “Getting Started” page offers step-by-step instructions for modifying the colors and fonts of the user interface, including previewing your overall theme. While you can modify these later, I’d recommend doing this right at the beginning of your project for better organization.</em></p>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/4-getting-started-page-material-toolkit.png\" /></p>\n<p>Afterward, create a new page and ensure that you begin by using the <strong>Standard Page Template</strong> provided in the Uno Toolkit components to start the design of your application. It’s essential to remember that you will have to <strong>detach the instance</strong> from the template to utilize it.</p>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/5-detach-Instance.png\" /></p>\n<h3>3: Start Creating The Design</h3>\n<p>Most Toolkit Components have variants that will act as time savers, allowing a single component to contain its various states and variations, with specific attributes that you may toggle on and off.</p>\n<p>For example, button components have a Leading Icon variant so you can use the same element with or without icons throughout the design.</p>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/5b-leading-icon-variants.png\" /></p>\n<p>The Uno Toolkit provides a comprehensive library of pre-built components and templates that come with the appropriate layer structures to generate <strong>XAML</strong> (eXtensible Application Markup Language is <a href=\"https://wpf-tutorial.com/xaml/what-is-xaml/\">Microsoft’s variant of XML</a> for describing a graphic user interface) and <strong>C#</strong> markup and allows designers to preview their designs using the Uno plugin. This helps synchronize design and development efforts, maintain project consistency, and optimize code output. Furthermore, these components can be reused, making creating and managing consistent designs across multiple projects easier.</p>\n<h3>4: Live Preview Your App</h3>\n<p>The <strong>Previewer</strong> in the Uno Platform is a powerful tool that enables designers to troubleshoot their designs and catch issues before the handoff process starts, avoiding redundancy in communications with developers. It provides a live interactive preview of the translated look, behavior, and code of the application’s design, including all styling and layout properties. Designers can interact with their design as if it is a running app, scrolling through content and testing components to see how they behave.</p>\n<p>To preview the designed user interface, follow these steps:</p>\n<ol>\n<li>In Figma, select the screen you want to preview.</li>\n<li>Right-click the screen → <strong>Plugins</strong> → <strong>Uno Platform (Figma to C# or XAML)</strong>.</li>\n<li>Once the plugin has launched, select the <strong>Preview</strong> tab.</li>\n<li>Press the <strong>Refresh</strong> button.</li>\n</ol>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/9-uno-flights-cover.png\" /></p>\n<h3>Getting Started With The Tutorial: First Steps</h3>\n<p>If you’re new to using the Uno Platform for Figma plugin, the first step is to <a href=\"https://aka.platform.uno/uno-figma-plugin\">install it from the Figma community</a>. After downloading the plugin, proceed with the following steps:</p>\n<ol>\n<li>Navigate to the <a href=\"https://aka.platform.uno/uno-figma-material-toolkit\"><strong>Uno Material Toolkit File</strong></a> in the Figma community and select <strong>Open in Figma</strong> to start a new project.</li>\n<li>Setting up your project theme <em>first</em> is optional but recommended. You can set your desired theme from the <strong>Getting Started</strong> page (included in the file) or import a DSP (Design System Package) file to quickly transform your theme.</li>\n<li>Create a new page. Within the <strong>Resources</strong> tab of the menu, under Components, find and select the “<strong>Standard Page Template</strong>.”</li>\n<li>Right-click on the template and select <strong>Detach the instance</strong>.</li>\n</ol>\n<p>These are the initial steps for all new projects using the Uno Platform for Figma plugin and Uno Material Toolkit — not only the steps for this tutorial. This workflow will set you on the right path to creating various mobile app designs effectively.</p>\n<h3>Designing With Uno Material Toolkit</h3>\n<p>You can follow along here with the <a href=\"https://www.figma.com/community/file/1263207005263866464\">Uno Flights file template</a>, which you can use for reference. Please note that when building your UI design, you should only <strong>use components that are part of the material toolkit file</strong>. Refer to the components page to see the list of available components.</p>\n<h4>Step 1: Search Results, Sort, And Filter</h4>\n<p>First, implement the search results and the <strong>Sort and Filter</strong> action buttons by following these steps:</p>\n<ol>\n<li>Add a <strong>TextBox</strong> and change the placeholder text.</li>\n<li>In the <strong>TextBox properties</strong>, toggle on a leading/trailing icon. <em>(optional)</em></li>\n<li>Add <strong>Text</strong> to display the number of results and the associated text. (Use Shift + A to add them to an Auto Layout.)</li>\n<li>Add an <strong>IconButton</strong> (use the components provided by the Material Toolkit) and swap the default icon to a Filter icon. Include accompanying Text for the icon, and group them within a frame with a horizontal Auto Layout.</li>\n<li>Repeat the previous step for the filter action, adding an <strong>IconButton</strong> with a filter icon accompanied by Text and placing them in an Auto Layout.</li>\n<li>Nest both actions within another Auto Layout.</li>\n<li>Finally, group the three sections (number of results, sort action, and filter action) into an Auto Layout.</li>\n<li>Add the <strong>SearchBox</strong> and your final Layout and nest them inside <strong>Content.Scrollable</strong>.</li>\n</ol>\n<p>By following these steps, you should see a result similar to the example below:</p>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/10-step1-results.png\" /></p>\n<h4>Step 2: Flight Information</h4>\n<p>The <strong>Flight Itinerary</strong> block can be divided into three sections:</p>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/11-card-componenet.png\" /></p>\n<ul>\n<li>Flight Times and the ProgressBar are included in the first Auto Layout.</li>\n<li>Airport and Flight Information are organized in a separate Auto Layout.</li>\n<li>Airline Information and Flight Costs are presented in a third Auto Layout.</li>\n</ul>\n<p><strong>Flight Times and ProgressBar</strong></p>\n<ol>\n<li>Insert two <strong>Text</strong> elements for arrival and departure times.</li>\n<li>Locate the <strong>ProgressBar</strong> component in the <strong>Resources</strong> tab and add it between the two times created.</li>\n<li>Group the three components (arrival time, ProgressBar, departure time) into an Auto Layout.</li>\n<li>Add an icon and swap the instance with a plane icon.</li>\n<li>Select the absolute position and place the plane icon at the beginning of the <strong>ProgressBar</strong>.</li>\n</ol>\n<p><strong>Flight Info</strong></p>\n<ol>\n<li>Insert <strong>Text</strong> for your flight time and flight status.</li>\n<li>Apply an <strong>Auto Layout</strong> to organize them and set it to <strong>Fill</strong>.</li>\n<li>Proceed to add <strong>Text</strong> for the Airport initials.</li>\n<li>Combine the two Texts and the previously created Auto Layout into a new <strong>horizontal Auto Layout</strong>.</li>\n</ol>\n<p><strong>Airline Information</strong></p>\n<ol>\n<li>Add the necessary <strong>Text</strong> for Airline Information and pricing.</li>\n<li>Select both Text elements and apply an <strong>Auto Layout</strong> to them.</li>\n<li>Set the frame of the Auto Layout to <strong>Fill</strong>.</li>\n<li>Adjust the <strong>horizontal gap</strong> as desired.</li>\n</ol>\n<p>Select the three sections you want to modify:</p>\n<ol>\n<li>Add a new <strong>Auto Layout</strong>.</li>\n<li>Apply a Fill color to the new layout.</li>\n<li>Adjust the vertical and horizontal spacing according to your preference.</li>\n<li>Move your component to the Standard Page Template by dragging it below the <strong>content.Scrollable</strong> layer.</li>\n</ol>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/12-step2-result.png\" /></p>\n<h4>Step 3. Bottom TabBar</h4>\n<p>The <strong>Bottom TabBar</strong> is relatively simple to modify and is part of the Standard Page Template. To complete this section:</p>\n<ol>\n<li>Select each item from the Bottom <strong>TabBar</strong>.</li>\n<li>Expand it to the lowest icon layer.</li>\n<li>In the <strong>Design</strong> tab, replace the current instance with the appropriate one.</li>\n<li>Next, select the associated Text and update it to match the corresponding menu item.</li>\n</ol>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/13-step3.png\" /></p>\n<h4>Step 4. Preview, Export, And Transition From Figma To Visual Studio</h4>\n<p>Once the user interface design is finalized in Figma, the Uno Platform Plugin enables us to render and preview our application with the click of a button. Within the <strong>Previewer</strong>, you can interact with the components, such as clicking the buttons, scrolling, toggling various functionalities, and so on.</p>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/14-step4-result.png\" /></p>\n<p>After previewing the app, we can examine the XAML code generated in the <strong>Export</strong> tab. </p>\n<p>Open the Uno Figma Plugin (right-click the screen → <strong>Plugins</strong> → <strong>Uno Platform (Figma to C# or XAML</strong>).</p>\n<p><strong>For XAML</strong></p>\n<ol>\n<li>You can change your namespace in the first tab (<strong>Properties</strong>) under <strong>Application</strong> (optional).</li>\n<li>Go to the <strong>Export</strong> tab and select <strong>Copy to Clipboard</strong> (bottom right button).</li>\n<li>Open Visual Studio and create a new project using the Uno App Template Wizard (this is where you will choose between using XAML or C# Markup for your user interface).</li>\n<li>Open your <code>MainPage.xaml</code> file, remove the existing code, and paste your exported code from the Uno Figma Plugin.</li>\n<li>Change your <code>x:class</code> and <code>xmlns:local</code> namespaces.</li>\n<li>Export the color override file and paste it into your <code>ColorPaletteOverride.xaml</code>.</li>\n</ol>\n<p><strong>For C# Markup</strong></p>\n<ol>\n<li>Go to the <strong>Export</strong> tab and select all contents from the line after <code>this</code> to the semicolon <code>;</code> at the end. (See the screenshot below.)</li>\n<li>Copy the selected code to the clipboard (Ctrl/Cmd + C on Win/Mac).</li>\n<li>In Visual Studio, create a new project using the Uno App Template Wizard. (This is where you will choose between using XAML or C# Markup for your user interface.)</li>\n<li>Open <code>MainPage.cs</code> and replace all the Page contents with the copied code.</li>\n<li>To set the appropriate font size for all buttons, access the <code>MaterialFontsOverride.cs</code> file in the <code>Style</code> folder. Go to the Figma Plugin, and in the <strong>Export</strong> tab, select <strong>Fonts Override File</strong> from the dropdown menu. Copy the content in the <strong>ResourceDictionary</strong> and replace it in your <code>MaterialFontsOverride.cs</code>.</li>\n</ol>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/16-figma-export-csharp.png\" /></p>\n<p>Here’s an example of the generated <strong>XAML</strong> (and also <strong>C#</strong>) code that you can import into Microsoft Visual Studio:</p>\n<p>⏬ <a href=\"https://www.smashingmagazine.com/provide/flightXAML.txt\">flightXAML.txt</a> (38 kB)</p>\n<p>⏬ <a href=\"https://www.smashingmagazine.com/provide/flightCsharp.txt\">flightCsharp.txt</a> (56 kB)</p>\n<p><img src=\"https://files.smashing.media/articles/design-to-code-handoff-process-uno-platform-figma/15-design-code-ide.png\" /></p>\nConclusion\n<p>Harmonizing design and development is no easy task, and the nuances between teams make it so there is no one-size-fits-all solution. However, by focusing on the areas that most often affect productivity, the Uno Platform for Figma tool helps enhance designer-developer workflows. It facilitates the efficient creation of high-fidelity designs, interactive prototypes, and the export of responsive code, making the entire process more efficient.</p>\n<p>The examples provided in the article primarily showcase working with mobile design versions. However, there are no limitations in the document or the generated code that restrict you from creating suitable versions for desktops, laptops, tablets, and just the world of the World Wide Web. Specify the desired resolutions and responsive elements (and how they should behave), and the designs you create should be easily adaptable across different platforms and screen sizes.</p>\n<h3>Further Reading</h3>\n<ul>\n<li>“<a href=\"https://platform.uno/blog/uno-platform-5-0/\">Five is for 5X productivity. Announcing Uno Platform 5.0</a>,” <em>(Uno Platform )</em><br />This article provides an overview of all the new features available in the Uno Platform, including the new Figma to C# Markup plugin feature.</li>\n<li>“<a href=\"https://platform.uno/blog/intro-to-figma-for-net-developers/\">Intro to Figma for .NET Developers</a>,” <em>(Uno Platform )</em><br />This article provides an overview of Figma and its features and how .NET developers can use it together with the Uno Platform to streamline their design-to-development workflows.</li>\n<li>“<a href=\"https://www.youtube.com/watch?v=t05lQ4ej47k\">Uno Platform 5.0 — Figma plugin, C# Markup, and Hot Reload showcase via Uno Tube Player sample app</a>,” <em>(YouTube)</em><br />This is a short video highlight for Uno Platform v. 5.0, edited from the following steps in the <a href=\"https://www.figma.com/community/file/1301577692003051222/tube-player-workshop\">Tube Player workshop</a> (this is a Figma Design file which is part of the Tube Player workshop and is tailored to .NET developers specifically).</li>\n<li>“<a href=\"https://www.youtube.com/watch?v=8b2oH-BQgms\">Uno Platform for Figma — Uno Flight speed build</a>,” <em>(YouTube)</em><br />A short video that shows the making of the Uno Flight app UI compressed into only a minute and a half.</li>\n<li>“<a href=\"https://platform.uno/blog/building-a-login-page-with-uno-platform-and-figma/\">Building a Login Page with Uno Platform and Figma</a>,” <em>(Uno Platform)</em><br />The Uno Platform’s plugin and toolkit offer a large library of ready-to-use components, allowing developers and designers to take advantage of a set of higher-level user interface controls designed specifically for multi-platform, responsive applications.</li>\n<li>“<a href=\"https://platform.uno/blog/building-a-profile-page-with-uno-platform-for-figma/\">Building a Profile Page with Uno Platform for Figma</a>,” <em>(Uno Platform)</em><br />In this tutorial, you will learn how to build a completely functional Profile page using Figma and Uno Platform and how to generate responsive and extendable XAML code.</li>\n<li>“<a href=\"https://platform.uno/blog/replicating-pet-adoption-ui-with-uno-platform-and-figma/\">Replicating Pet Adoption UI with Uno Platform and Figma</a>,” <em>(Uno Platform)</em><br />This tutorial will walk you through creating a Pet Adopt user interface mobile screen and exporting your Figma designs into code, including setting up your Figma file and designing using Uno Material Toolkit components.</li>\n<li>“<a href=\"https://platform.uno/blog/from-figma-to-visual-studio-adding-back-end-logic-to-goodreads-app/\">From Figma to Visual Studio — Adding Back-End Logic to Goodreads App</a>,” <em>(Uno Platform)</em><br />The Uno Platform has an XAML tab (which houses the generated code for the page you created in Figma) and a Themes tab (which houses the Resource Dictionary for the page you created). This tutorial contains a working Goodreads sample and provides many details as to using the XAML and Themes tabs.</li>\n<li>“<a href=\"https://platform.uno/blog/replicating-a-dating-app-ui-with-net-uno-platform-and-figma/\">Replicating a Dating App UI with .NET, Uno Platform and Figma</a>,” <em>(Uno Platform)</em><br />In this tutorial, you’ll learn how to use Uno Platform to create a dating app user interface, covering in detail various sections and components of the interface; at the end, you’ll also be able to export the design into Visual Studio Code.</li>\n<li>“<a href=\"https://platform.uno/docs/articles/external/uno.toolkit.ui/doc/getting-started.html\">Getting Started with Uno Toolkit</a>,” <em>(Uno Platform)</em><br />Detailed developer documentation pages for working with Uno Platform.</li>\n<li>“<a href=\"https://www.techrepublic.com/article/best-ide-software/\">The 12 best IDEs for programming</a>,” Franklin Okeke<br />To keep up with the fast pace of emerging technologies, there has been an increasing demand for IDEs among software development companies. We will explore the 12 best IDEs that currently offer valuable solutions to programmers.</li>\n<li>“<a href=\"https://medium.com/purplebricks-digital/why-we-chose-figma-as-our-primary-design-tool-e89d371f6eec\">Why we chose Figma as our primary design tool</a>,” Simon Harper <em>(Purplebricks Digital)</em><br />Comparing the must-haves against the features of a list of possible design apps we compiled (including Sketch, Axure RP, Framer, and more), Figma came out as the clear forerunner. It met all of our key feature requirements but surprised us with a lot of other things along the way.</li>\n<li>“<a href=\"https://blog.zomato.com/why-we-switched-to-figma-as-a-primary-design-tool-at-zomato\">Why we switched to Figma as the primary design tool at Zomato</a>,” Vijay Verma<br />Before Figma, several other tools were used to facilitate the exchange of design mockups and updates; after Figma, the need to use other tools and services was reduced as everything comes in one single package.</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2023/03/best-handoff-is-no-handoff/\">The Best Handoff Is No Handoff</a>,” Vitaly Friedman <em>(Smashing Magazine)</em><br />Design handoffs are often inefficient and painful; they cause frustration, friction, and a lot of back and forth. Can we avoid them altogether? This article discusses in detail the “No Handoff” fluid model, where product and engineering teams work on the product iteratively all the time, with functional prototyping being the central method of working together.</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2023/05/designing-better-design-handoff-file-figma/\">Designing A Better Design Handoff File In Figma</a>,” Ben Shih <em>(Smashing Magazine)</em><br />Creating an effective handoff process from design to development is a critical step in any product development cycle. This article shares many practical tips to enhance the handoff process between design and development in product development, with guidelines for effective communication, documentation, design details, version control, and plugin usage.</li>\n<li>“<a href=\"https://medium.com/sketch-app-sources/how-i-use-sketch-with-zeplin-to-design-and-specify-apps-71979ccf8f72\">How I use Sketch with Zeplin to Design and Specify Apps</a>,” Marc Decerle<br />Sketch is a very powerful tool in combination with Zeplin. In this article, the author describes how he organizes his Sketch documents and how he uses Sketch in conjunction with Zeplin.</li>\n<li><a href=\"https://github.com/AdobeXD/design-system-package-dsp\">Design System Package (DSP)</a><br />This document describes the Design System Package structure, including details on how each internal file or folder should be used.</li>\n</ul>","author":"","siteTitle":"Articles on Smashing Magazine — For Web Designers And Developers","siteHash":"ab069ca35bf300e9db0da36f49701f66485a5b0d2db0471dfeee07cef6204939","entryHash":"f4d1c7be981dbfc33ca311155707341a96b3a70d95b561f2d142004792952642","category":"Tech"}