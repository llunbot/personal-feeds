{"title":"Container Insights with enhanced observability now available in Amazon ECS","link":"https://aws.amazon.com/blogs/aws/container-insights-with-enhanced-observability-now-available-in-amazon-ecs/","date":1733110136000,"content":"<p>Last year, we announced <a href=\"https://aws.amazon.com/blogs/mt/new-container-insights-with-enhanced-observability-for-amazon-eks/\">enhanced observability in Amazon CloudWatch Container Insights</a>, a new capability to improve your observability for <a href=\"https://aws.amazon.com/eks/\">Amazon Elastic Kubernetes Service (Amazon EKS)</a>. This capability helps you detect and fix container issues faster by providing detailed performance metrics and logs.</p> \n<p>Expanding this capability, today we’re launching enhanced observability for your container workloads running on <a href=\"https://aws.amazon.com/ecs/\">Amazon Elastic Container Service (Amazon ECS)</a>. This new capability will help reduce your mean time to detect (MTTD) and mean time to repair (MTTR) for your overall applications, helping prevent issues that could negatively impact your user experience.</p> \n<p>Here’s a quick look at Container Insights with enhanced observability for Amazon ECS.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-2-1.png\" width=\"3840\" height=\"1935\" /></p> \n<p>Container Insights with enhanced observability addresses a critical gap in container monitoring. Previously, correlating metrics with logs and events was a time-consuming process, often requiring manual searches and expertise in application architecture. Now, with this capability, CloudWatch and Amazon ECS automatically collect granular performance metrics such as CPU utilization at both the task and container levels while providing visual drill downs enabling easy root-cause analysis.</p> \n<p>This new capability enables the following use cases:</p> \n<ul> \n <li>Quickly identify root causes by viewing granular resource usage patterns and correlating telemetry data.</li> \n <li>Proactively manage your ECS resources using curated dashboards based on AWS best practices.</li> \n <li>Track your recent deployments and root causes of your deployment failures with the matching infrastructure anomalies enabling faster issue detection and quicker rollbacks when necessary.</li> \n <li>Effortlessly monitor resources across multiple accounts without manual setup. Built-in cross-account support reduces operational overhead with single pane of glass observability.</li> \n <li>Integration with other CloudWatch services such as Application Signals and CloudWatch Logs provides a seamless experience to correlate infrastructure with the services running and identify the impacted services.</li> \n</ul> \n<p><span><strong>Using container insights with enhanced observability for Amazon ECS<br /></strong></span>There are two ways to enable Container Insights with enhanced observability:</p> \n<ol> \n <li><strong>Cluster-level onboarding</strong> – You can enable it for specific clusters individually.</li> \n <li><strong>Account-level onboarding</strong> – You can also enable it at the account level, which automatically enables observability for all new clusters created in your account. This approach saves time and effort by eliminating the need to manually enable it for each new cluster.</li> \n</ol> \n<p>To enable this feature at the account level, I navigate to the Amazon ECS console and select <strong>Account settings</strong>. Under the <strong>CloudWatch Container Insights observability</strong> section, I can see it’s currently disabled. I choose <strong>Update</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-1.png\" width=\"3840\" height=\"1935\" /></p> \n<p>On this page, I find a new option called <strong>Container Insights with enhanced observability</strong>. I select this option and then choose <strong>Save changes</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-2-copy.png\" width=\"3840\" height=\"1935\" /></p> \n<p>If I need to enable this capability at the cluster level, I can do so when creating a new cluster.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-3-1.png\" width=\"3134\" height=\"2616\" /></p> \n<p>I can also enable this capability for my existing clusters. To do so, I select <strong>Update cluster</strong>, and then choose the option.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-4.png\" width=\"3840\" height=\"1934\" /></p> \n<p>Once enabled, I can see task-level metrics by navigating to the <strong>Metrics</strong> tab in my cluster overview console. To access health and performance metrics across my clusters, I can select <strong>View Container Insights</strong>, which will redirect me to the Container Insights page.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-5-1.png\" width=\"3840\" height=\"1869\" /></p> \n<p>To get a big picture of all my workloads across different clusters, I can navigate to Amazon CloudWatch and then to <strong>Container Insights</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/25/news-2024-eci-ecs-19.png\" width=\"3840\" height=\"1935\" /></p> \n<p>This view addresses the challenge of effectively monitoring clusters, services, tasks, and containers by providing a honeycomb visualization that offers an intuitive, high-level summary of cluster health. The dashboard employs a dual-state monitoring approach:</p> \n<ol> \n <li><strong>Alarm state (red or green)</strong> – Reflects customer-defined thresholds and alerts, allowing teams to configure monitoring based on their specific requirements</li> \n <li><strong>Utilization state (dark blue or light blue)</strong> – Uses CloudWatch built-in best practices to monitor resource usage patterns across containers. The darker blue indicates clusters operating under higher utilization, enabling teams to proactively identify potential resource constraints before they impact performance</li> \n</ol> \n<p>Let’s say there’s an issue in one of my clusters. I can hover over the cluster to display all the alarms created under that cluster at different layers, from the cluster layer down to the container layer.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-8.png\" width=\"3840\" height=\"1935\" /></p> \n<p>I also have the option to view all clusters in a list format. The list format is essential for cross-account observability, displaying account IDs and labels for cluster ownership. This helps DevOps engineers quickly identify and collaborate with account owners to resolve potential application issues.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/28/news-2024-eci-ecs-r20-1.png\" width=\"2342\" height=\"1235\" /></p> \n<p>Now, I’d like to explore further. I select my cluster link, which redirects me to the Container Insights detailed dashboard view. Here, I can see a spike in memory utilization for this cluster.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-10.png\" width=\"3840\" height=\"1935\" /></p> \n<p>I can dive deeper into container-level details, which help me quickly identify which services are causing this issue.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-11.png\" width=\"3840\" height=\"1934\" /></p> \n<p>Another useful feature I found is the <strong>Filters</strong> option, which helps me conduct more thorough investigations across containers, services, or tasks in this cluster.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-12.png\" width=\"3840\" height=\"1935\" /></p> \n<p>If I need to delve deeper into the application logs to understand the root cause of this issue, I can select the task, choose Actions, and choose which logs I would like to view.</p> \n<p>On top of using <a href=\"https://aws.amazon.com/x-ray/\">AWS X-Ray</a> traces, I can investigate another two types of logs here. First, I can use performance logs—structured logs containing metric data—to drill down and identify container-level root causes. Second, I examine collected application or container logs . These logs give me detailed insights into application behavior within the container, helping me trace the sequence of events that led to any issues.</p> \n<p>In this case, I use application logs.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-17.png\" width=\"3840\" height=\"1935\" /></p> \n<p>This streamlines my journey to troubleshoot my application. In this case, the issue is on the downstream calls to third-party applications, which return timeouts.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-18.png\" width=\"3114\" height=\"2587\" /></p> \n<p>This enhanced capability also works with <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Application-Monitoring-Sections.html\">Amazon CloudWatch Application Signals</a> to automatically instrument my application. I can monitor current application health and track long-term application performance against <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-ServiceLevelObjectives.html\">service-level objectives</a>.</p> \n<p>I select the <strong>Application Signals</strong> tab.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-15.png\" width=\"3840\" height=\"1934\" /></p> \n<p>This integration with Amazon CloudWatch Application Signals provides me with end-to-end visibility, helping me correlate container performance with end-user experience.</p> \n<p>When I select datapoints in the graphs, I can see associated traces, which show me all correlated services and their impact. I can also access relevant logs to understand root causes.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/11/13/news-2024-eci-ecs-13.png\" width=\"3840\" height=\"1935\" /></p> \n<p><span><strong>Additional things to know</strong></span> <br />Here are a couple of important points to note:</p> \n<ul> \n <li><strong>Availability</strong> – Container Insights with enhanced observability for ECS is now available in all AWS Regions including the China Regions.</li> \n <li><strong>Pricing</strong> – Container Insights with enhanced observability for ECS comes with a flat metric pricing, visit the <a href=\"https://aws.amazon.com/cloudwatch/pricing/\">Amazon CloudWatch Pricing</a> page.</li> \n</ul> \n<p>Get started today and experience improved observability for your container workloads. Learn more on the <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html\">Amazon CloudWatch documentation</a> page.</p> \n<p>Happy monitoring, <br />— <a href=\"https://linkedin.com/in/donnieprakoso\">Donnie Prakoso</a></p>","author":"Donnie Prakoso","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"80180296ba73019e33f94716b055a3e1a620e2c45c99314f354748579f584552","category":"Tech"}