{"title":"Announcing Llama 3.1 405B, 70B, and 8B models from Meta in Amazon Bedrock","link":"https://aws.amazon.com/blogs/aws/announcing-llama-3-1-405b-70b-and-8b-models-from-meta-in-amazon-bedrock/","date":1721751618000,"content":"<p>Today, we are announcing the general availability of <a href=\"https://aws.amazon.com/bedrock/llama/\">Llama 3.1 models in Amazon Bedrock</a>. The Llama 3.1 models are Meta’s most advanced and capable models to date. The Llama 3.1 models are a collection of 8B, 70B, and 405B parameter size models that demonstrate state-of-the-art performance on a wide range of industry benchmarks and offer new capabilities for your <a href=\"https://aws.amazon.com/generative-ai/\">generative artificial intelligence (generative AI)</a> applications.</p> \n<p>All Llama 3.1 models support a 128K context length (an increase of 120K tokens from Llama 3) that has 16 times the capacity of <a href=\"https://aws.amazon.com/blogs/aws/metas-llama-3-models-are-now-available-in-amazon-bedrock/\">Llama 3 models</a> and improved reasoning for multilingual dialogue use cases in eight languages, including English, German, French, Italian, Portuguese, Hindi, Spanish, and Thai.</p> \n<p>You can now use three new Llama 3.1 models from Meta in <a href=\"https://aws.amazon.com/bedrock\">Amazon Bedrock</a> to build, experiment, and responsibly scale your generative AI ideas:</p> \n<ul> \n <li><strong>Llama 3.1 405B</strong> is the world’s largest publicly available <a href=\"https://aws.amazon.com/what-is/large-language-model/\">large language model (LLM)</a> according to Meta. The model sets a new standard for AI and is ideal for enterprise-level applications and research and development (R&amp;D). It is ideal for tasks like <a href=\"https://aws.amazon.com/what-is/synthetic-data/\">synthetic data generation</a> where the outputs of the model can be used to improve smaller Llama models and <a href=\"https://en.wikipedia.org/wiki/Knowledge_distillation\">model distillations</a> to transfer knowledge to smaller models from the 405B model. This model excels at general knowledge, long-form text generation, multilingual translation, machine translation, coding, math, tool use, enhanced contextual understanding, and advanced reasoning and decision-making. To learn more, visit the AWS Machine Learning Blog about <a href=\"https://aws.amazon.com/blogs/machine-learning/use-llama-3-1-405b-to-generate-synthetic-data-for-fine-tuning-tasks\">using Llama 3.1 405B to generate synthetic data for model distillation</a>.</li> \n <li><strong>Llama 3.1 70B </strong>is ideal for content creation, conversational AI, language understanding, R&amp;D, and enterprise applications. The model excels at text summarization and accuracy, text classification, sentiment analysis and nuance reasoning, language modeling, dialogue systems, code generation, and following instructions.</li> \n <li><strong>Llama 3.1 8B</strong> is best suited for limited computational power and resources. The model excels at text summarization, text classification, sentiment analysis, and language translation requiring low-latency inferencing.</li> \n</ul> \n<p>Meta measured the performance of Llama 3.1 on over 150 benchmark datasets that span a wide range of languages and extensive human evaluations. As you can see in the following chart, Llama 3.1 outperforms Llama 3 in every major benchmarking category.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/07/23/2024-llama3.1-in-bedrock-benchmark.png\" width=\"1440\" height=\"980\" /></p> \n<p>To learn more about Llama 3.1 features and capabilities, visit the <a href=\"https://github.com/meta-llama/llama-models/blob/main/models/llama3_1/MODEL_CARD.md\">Llama 3.1 Model Card</a> from Meta and <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters-meta.html\">Llama models</a> in the AWS documentation.</p> \n<p>You can take advantage of Llama 3.1’s <a href=\"https://aws.amazon.com/machine-learning/responsible-ai/\">responsible AI</a> capabilities, combined with the data governance and model evaluation features of Amazon Bedrock to build secure and reliable generative AI applications with confidence.</p> \n<ul> \n <li><strong>Guardrails for Amazon Bedrock</strong> – By creating multiple guardrails with different configurations tailored to specific use cases, you can use Guardrails to promote safe interactions between users and your generative AI applications by implementing safeguards customized to your use cases and responsible AI policies. With <a href=\"https://aws.amazon.com/bedrock/guardrails/\">Guardrails for Amazon Bedrock</a>, you can continually monitor and analyze user inputs and model responses that might violate customer-defined policies, detect hallucination in model responses that are not grounded in enterprise data or are irrelevant to the user’s query, and evaluate across different models including custom and third-party models. To get started, visit <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails-create.html\">Create a guardrail</a> in the AWS documentation.</li> \n <li><strong>Model evaluation on Amazon Bedrock</strong> – You can evaluate, compare, and select the best Llama models for your use case in just a few steps using either automatic evaluation or human evaluation. With <a href=\"https://aws.amazon.com/blogs/aws/amazon-bedrock-model-evaluation-is-now-generally-available/\">model evaluation on Amazon Bedrock</a>, you can choose automatic evaluation with predefined metrics such as accuracy, robustness, and toxicity. Alternatively, you can choose human evaluation workflows for subjective or custom metrics such as relevance, style, and alignment to brand voice. Model evaluation provides built-in curated datasets or you can bring in your own datasets. To get started, visit <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-type.html\">Get started with model evaluation</a> in the AWS documentation.</li> \n</ul> \n<p>To learn more about how to keep your data and applications secure and private in AWS, visit the <a href=\"https://aws.amazon.com/bedrock/security-compliance/\">Amazon Bedrock Security and Privacy</a> page.</p> \n<p><strong><u>Getting started with Llama 3.1 models in Amazon Bedrock</u></strong><br /> If you are new to using Llama models from Meta, go to the <a href=\"https://us-west-2.console.aws.amazon.com/bedrock/home?region=us-west-2#/modelaccess\">Amazon Bedrock console</a> in the US West (Oregon) Region and choose <strong>Model access </strong>on the bottom left pane. To access the latest Llama 3.1 models from Meta, request access separately for <strong>Llama 3.1 8B Instruct</strong>, <strong>Llama 3.1 70B Instruct</strong>, or <strong>Llama 3.1 450B Instruct</strong>.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/07/22/2024-bedrock-llama-3.1-model-1-access-1.png\" width=\"2270\" height=\"1136\" /></p> \n<p>To test the Llama 3.1 models in the Amazon Bedrock console, choose <strong>Text </strong>or <strong>Chat </strong>under <strong>Playgrounds </strong>in the left menu pane. Then choose <strong>Select model</strong> and select <strong>Meta</strong> as the category and <strong>Llama 3.1 8B Instruct</strong>, <strong>Llama 3.1 70B Instruct</strong>, or <strong>Llama 3.1 405B Instruct</strong> as the model.</p> \n<p>In the following example I selected the <strong>Llama 3.1 405B Instruct</strong> model.</p> \n<p><img loading=\"lazy\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2024/07/22/2024-llama3.1-in-bedrock-2-text-playground-1.jpg\" width=\"2560\" height=\"1221\" /></p> \n<p>By choosing <strong>View API request</strong>, you can also access the model using code examples in the <a href=\"https://aws.amazon.com/cli/\">AWS Command Line Interface (AWS CLI)</a> and AWS SDKs. You can use model IDs such as <code>meta.llama3-1-8b-instruct-v1</code>, <code>meta.llama3-1-70b-instruct-v1</code> , or <code>meta.llama3-1-405b-instruct-v1</code>.</p> \n<p>Here is a sample of the AWS CLI command:</p> \n<pre><code>aws bedrock-runtime invoke-model \\\n  --model-id meta.llama3-1-405b-instruct-v1:0 \\\n--body \"{\\\"prompt\\\":\\\" [INST]You are a very intelligent bot with exceptional critical thinking[/INST] I went to the market and bought 10 apples. I gave 2 apples to your friend and 2 to the helper. I then went and bought 5 more apples and ate 1. How many apples did I remain with? Let's think step by step.\\\",\\\"max_gen_len\\\":512,\\\"temperature\\\":0.5,\\\"top_p\\\":0.9}\" \\\n  --cli-binary-format raw-in-base64-out \\\n  --region us-west-2 \\\n  invoke-model-output.txt</code></pre> \n<p>You can use <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/service_code_examples_bedrock-runtime_meta_llama.html\">code examples for Llama models in Amazon Bedrock</a> using AWS SDKs to build your applications using various programming languages. The following Python code examples show how to send a text message to Llama using the Amazon Bedrock Converse API for text generation.</p> \n<pre><code>import boto3\nfrom botocore.exceptions import ClientError\n\n# Create a Bedrock Runtime client in the AWS Region you want to use.\nclient = boto3.client(\"bedrock-runtime\", region_name=\"us-west-2\")\n\n# Set the model ID, e.g., Llama 3 8b Instruct.\nmodel_id = \"meta.llama3-1-405b-instruct-v1:0\"\n\n# Start a conversation with the user message.\nuser_message = \"Describe the purpose of a 'hello world' program in one line.\"\nconversation = [\n    {\n        \"role\": \"user\",\n        \"content\": [{\"text\": user_message}],\n    }\n]\n\ntry:\n    # Send the message to the model, using a basic inference configuration.\n    response = client.converse(\n        modelId=model_id,\n        messages=conversation,\n        inferenceConfig={\"maxTokens\": 512, \"temperature\": 0.5, \"topP\": 0.9},\n    )\n\n    # Extract and print the response text.\n    response_text = response[\"output\"][\"message\"][\"content\"][0][\"text\"]\n    print(response_text)\n\nexcept (ClientError, Exception) as e:\n    print(f\"ERROR: Can't invoke '{model_id}'. Reason: {e}\")\n    exit(1)</code></pre> \n<p>You can also use all Llama 3.1 models (8B, 70B, and 405B) in <a href=\"https://aws.amazon.com/sagemaker/jumpstart/\">Amazon SageMaker JumpStart</a>. You can discover and deploy Llama 3.1 models with a few clicks in <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/studio.html\">Amazon SageMaker Studio</a> or programmatically through the SageMaker Python SDK. You can operate your models with SageMaker features such as <a href=\"https://aws.amazon.com/sagemaker/pipelines/\">SageMaker Pipelines</a>, <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/train-debugger.html\">SageMaker Debugger</a>, or container logs under your virtual private cloud (VPC) controls, which help provide data security.</p> \n<p>The fine-tuning for Llama 3.1 models in Amazon Bedrock and Amazon SageMaker JumpStart will be coming soon. When you build fine-tuned models in SageMaker JumpStart, you will also be able to <a href=\"https://aws.amazon.com/blogs/aws/import-custom-models-in-amazon-bedrock-preview/\">import your custom models</a> into Amazon Bedrock. To learn more, visit <a href=\"https://aws.amazon.com/blogs/machine-learning/meta-llama-3-1-models-are-now-available-in-amazon-sagemaker-jumpstart/\">Meta Llama 3.1 models are now available in Amazon SageMaker JumpStart</a> on the AWS Machine Learning Blog.</p> \n<p>For customers who want to deploy Llama 3.1 models on AWS through self-managed machine learning workflows for greater flexibility and control of underlying resources, <a href=\"https://aws.amazon.com/machine-learning/trainium/\">AWS Trainium</a> and <a href=\"https://aws.amazon.com/machine-learning/inferentia/\">AWS Inferentia</a>-powered <a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud (Amazon EC2)</a> instances enable high performance, cost-effective deployment of Llama 3.1 models on AWS. To learn more, visit <a href=\"https://aws.amazon.com/blogs/machine-learning/aws-ai-chips-deliver-high-performance-and-low-cost-for-meta-llama-3-1-models-on-aws/\">AWS AI chips deliver high performance and low cost for Meta Llama 3.1 models</a> on AWS in the AWS Machine Learning Blog.</p> \n<p><strong><u>Customer voices</u></strong><br /> To celebrate this launch, Parkin Kent, Business Development Manager at Meta, talks about the power of the Meta and Amazon collaboration, highlighting how Meta and Amazon are working together to push the boundaries of what’s possible with generative AI.</p> \n<p></p> \n<p>Discover how customer’s businesses are leveraging Llama models in Amazon Bedrock to harness the power of generative AI. Nomura, a global financial services group spanning 30 countries and regions, is democratizing generative AI across its organization using Llama models in Amazon Bedrock.</p> \n<p></p> \n<p>TaskUs, a leading provider of outsourced digital services and next-generation customer experience to the world’s most innovative companies, is helping clients represent, protect, and grow their brands using Llama models in Amazon Bedrock.</p> \n<p></p> \n<p><strong><u>Now available</u></strong><br /> Llama 3.1 405B, 70B, and 8B models from Meta are generally available today in Amazon Bedrock in the US West (Oregon) Region. Check the <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/models-regions.html\">full Region list</a> for future updates. To learn more, check out the <a href=\"https://aws.amazon.com/bedrock/llama/\">Llama in Amazon Bedrock product page</a> and the <a href=\"https://aws.amazon.com/bedrock/pricing/\">Amazon Bedrock pricing</a> page.</p> \n<p>Give Llama 3.1 a try in the <a href=\"https://console.aws.amazon.com/bedrock\">Amazon Bedrock console</a> today, and send feedback to <a href=\"https://repost.aws/tags/TAQeKlaPaNRQ2tWB6P7KrMag/amazon-bedrock\">AWS re:Post for Amazon Bedrock</a> or through your usual AWS Support contacts.</p> \n<p>Visit our <a href=\"https://community.aws/generative-ai?trk=e8665609-785f-4bbe-86e8-750a3d3e9e61&amp;sc_channel=el\">community.aws site</a> to find deep-dive technical content and to discover how our Builder communities are using Amazon Bedrock in their solutions. Let me know what you build with Llama 3.1 in Amazon Bedrock!</p> \n<p>— <a href=\"https://twitter.com/channyun\">Channy</a></p> \n<p><em><strong>July 23, 2024 </strong>– Updated post to add new screenshot for model access and customer video featuring TaskUs.</em><br /> <em><strong>July 25, 2024</strong> – Updated post to indicate that Llama 3.1 405B is now generally available.</em></p>","author":"Channy Yun","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"32dbb1007d2558c56a94d88e293db8f019279fd84c45cb3bb1db9e703264fa2c","category":"Tech"}