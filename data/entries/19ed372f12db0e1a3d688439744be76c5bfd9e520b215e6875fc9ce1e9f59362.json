{"title":"สวัสดี Swift Testing","link":"https://www.somkiat.cc/hello-swift-testing/","date":1720240613000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2024/07/swift-testing-150x150.jpg\" loading=\"lazy\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2024/07/swift-testing-150x150.jpg 150w, https://www.somkiat.cc/wp-content/uploads/2024/07/swift-testing-75x75.jpg 75w\" /></p>\n<figure><a href=\"https://www.somkiat.cc/wp-content/uploads/2024/07/swift-testing.jpg\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2024/07/swift-testing-1024x587.jpg\" width=\"636\" height=\"364\" /></a></figure>\n\n\n\n<p>ทาง Apple ได้เปิดตัว <strong><a href=\"https://developer.apple.com/xcode/swift-testing/\" target=\"_blank\">Swift Testing</a></strong> ซึ่งเป็น unit test framework ตัวใหม่<br />ซึ่งมาพร้อมกับ Xcode 16<br />โดยที่มี syntax และรูปแบบการใช้งานที่ง่ายและสะดวกขึ้น<br />มีการ assert ที่ดีขึ้น<br />อีกทั้งยังมี parameterized testing เป็นต้น<br />ดังนั้นมาทำความรู้จักและลองใช้งานกันหน่อย</p>\n\n\n\n<span></span>\n\n\n\n<p>ก่อนหน้านี้ในการเขียน test ด้วย Swift บน Xcode นั้น<br />จะใช้งาน XCTest ซึ่งเป็น test framework ที่เก่ามาก ๆ<br />เทียบกับ JUnit 3 ได้เลย<br />โดยชื่อ test case ต้องขึ้นด้วยคำว่า test </p>\n\n\n\n<p>ใน Swift Testing เขียนง่าย ๆ ได้แบบนี้<br />แต่ละ test case ขึ้นต้นด้วย <strong>@test</strong><br />และสามารถใส่ชื่อที่อธิบายได้ง่าย ๆ เช่น <strong>@test(\"human readtable\")</strong><br />ทำไมมันเหมือน ๆ Junit 5 เลย<br />ในส่วนของการ assert จะใช้ <strong>#assert </strong><br />เป็น feature ใหม่ ชื่อว่า <a href=\"https://github.com/swiftlang/swift-evolution/blob/main/proposals/0382-expression-macros.md\" target=\"_blank\">Expression macros</a></p>\n\n\n\n<p>รวมทั้งยังแบ่งกลุ่มของ test case ด้วย tag แบบง่าย ๆ ได้อีก (ไม่ใช่ของใหม่อะไรเลย)<br />ดังนี้</p>\n\n\n\n[gist id=\"75065e64e58acf4928105a8d40996af4\" file=\"1.swift\"]\n\n\n\n<p>ในการ run นั้น จะเป็นการ run แบบ parallel โดย default<br />นั่นหมายความว่าแต่ละ test case/method จะถูก run แยก instance กัน<br />ดังนั้นทำให้แต่ละ test case/method ทำงานเป็นอิสระแก่กันไปเลย</p>\n\n\n\n<p><strong>ถ้าต้องการทดสอบพวก Exception ต่าง ๆ ทำได้ดังนี้</strong></p>\n\n\n\n[gist id=\"75065e64e58acf4928105a8d40996af4\" file=\"2.swift\"]\n\n\n\n<p>สำหรับการทดสอบด้วย data-driven testing หรือ parameterized นั้น<br />ก็สามารถทำได้ง่าย ด้วยการใส่ arguments เข้าไปใน @Test ได้เลย</p>\n\n\n\n[gist id=\"75065e64e58acf4928105a8d40996af4\" file=\"3.swift\"]\n\n\n\n<p>ศึกษาเพิ่มเติมได้ที่ </p>\n\n\n\n<p><a href=\"https://github.com/apple/swift-testing\" target=\"_blank\">GitHub :: Swift Testing</a><br /><a href=\"https://swiftpackageindex.com/apple/swift-testing\" target=\"_blank\">Getting started</a><br /><a href=\"https://developer.apple.com/news/?id=a693fazi\" target=\"_blank\">WWDC24 Developer Tools guide</a><br /><a href=\"https://xp123.com/swift-testing-a-new-unit-testing-framework/\" target=\"_blank\">Swift Testing – A New Unit Testing Framework</a></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"19ed372f12db0e1a3d688439744be76c5bfd9e520b215e6875fc9ce1e9f59362","category":"Thai"}