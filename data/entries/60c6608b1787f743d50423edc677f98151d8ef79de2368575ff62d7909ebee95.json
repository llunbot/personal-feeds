{"title":"Google’s “Web Integrity” Android API could kill “alternative” media clients","link":"https://arstechnica.com/?p=1981663","date":1699304972000,"content":"<div>\n<figure>\n  <img src=\"https://cdn.arstechnica.net/wp-content/uploads/2020/07/android-spying-800x450.jpg\" alt=\"A man laughs at his smartphone while a cartoon characters peaks over his shoulder.\" />\n      <p><a href=\"https://cdn.arstechnica.net/wp-content/uploads/2020/07/android-spying.jpg\">Enlarge</a> <span>/</span> The little Android robot is watching everything you do. (credit: <a href=\"https://arstechnica.com/author/aurich-lawson/\">Aurich Lawson / Getty Images</a>)</p>  </figure>\n\n\n\n\n\n\n<div><a name=\"page-1\"></a></div>\n<p>Google is <a href=\"https://android-developers.googleblog.com/2023/11/increasing-trust-for-embedded-media.html\">killing off</a> its proposal for \"Web Environment Integrity API\" as a new web standard, though Android phones may still have to deal with it. According to <a href=\"https://github.com/RupertBenWiser/Web-Environment-Integrity/blob/main/explainer.md\">Google's proposal document,</a> the primary goal of the project was to \"allow web servers to evaluate the authenticity of the device and honest representation of the software stack\"—basically Google wanted a DRM gatekeeper for the web. The project got <a href=\"https://arstechnica.com/gadgets/2023/07/googles-web-integrity-api-sounds-like-drm-for-the-web/\">widespread coverage</a> in July and <a href=\"https://github.com/RupertBenWiser/Web-Environment-Integrity/issues/134\">was</a> <a href=\"https://github.com/RupertBenWiser/Web-Environment-Integrity/issues/127\">widely</a> <a href=\"https://www.youtube.com/watch?v=0i0Ho-x7s_U\">panned</a>.</p>\n<p>The ominously vague plan was to allow web browsers to detect if your computer was \"modified\" in a way that the webpage didn't like. Presumably, this could be anything from a rooted/jailbroken phone to having an undesirable plug-in (read: ad blockers) installed. When you tried to access some protected content, a browser supporting the Web Integrity API would first contact a third-party \"environment attestation\" server, and your computer would have to pass some kind of test. After having your local environment uh... scanned? passing environments receive a signed \"IntegrityToken\" that points to the content you wanted unlocked. You would bring this back to the web server and would finally get the content unlocked.</p>\n<p>Google's proposal did not go over well. The explainer was full of conflicting information about just how invasive it wanted to be and what its goals were. Google pinky-promised it wasn't meant to \"enforce or interfere with browser functionality, including plugins and extensions\"—this is a vague reference to ad blockers—but also the proposal's very first example had to do with more accurately measuring ad impressions. Even more alarming was that this wasn't a discussion—Google never publicized the feature for any kind of feedback, and the company was already actively prototyping the feature in Chrome before the Internet really found out about it.</p></div><p><a href=\"https://arstechnica.com/?p=1981663#p3\">Read 5 remaining paragraphs</a> | <a href=\"https://arstechnica.com/?p=1981663&amp;comments=1\">Comments</a></p>","author":"Ron Amadeo","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"60c6608b1787f743d50423edc677f98151d8ef79de2368575ff62d7909ebee95","category":"Tech"}