{"title":"Terraform 1.4 improves the CLI experience for Terraform Cloud","link":"https://www.hashicorp.com/blog/terraform-1-4-improves-the-cli-experience-for-terraform-cloud","date":1678294800000,"content":"<p>We’re excited to announce the release of HashiCorp Terraform 1.4, now immediately <a href=\"https://developer.hashicorp.com/terraform/downloads\">available for download</a> and ready for use in <a href=\"https://cloud.hashicorp.com/products/terraform\">HashiCorp Terraform Cloud</a>. Terraform is widely adopted as the standard for multi-cloud provisioning and automation for individuals and teams at any scale. This release introduces improvements for CLI interactions with Terraform Cloud and a new native replacement for the “null” resource.</p>\n<h2><a href=\"#enhanced-terraform-cloud-output-for-cli-driven-runs\">»</a><a></a>Enhanced Terraform Cloud output for CLI-driven runs</h2>\n<p>One of the many benefits of Terraform Cloud is an enhanced user interface for visualizing and exploring run results. But this <a href=\"https://www.hashicorp.com/blog/terraform-enterprise-introduces-new-visibility-and-security-enhancements\">structured run output</a> experience has been limited to runs initiated from the UI, version control integrations, or the API. Terraform runs <a href=\"https://developer.hashicorp.com/terraform/cloud-docs/run/cli\">initiated from the CLI</a> continued to display raw console output in the Terraform Cloud UI.</p>\n<p>Now, Terraform Cloud runs initiated using Terraform 1.4 can also enjoy this enhanced UI experience. Instead of scrolling through a stream of text, you can quickly see the impact of your changes no matter how the run was started.</p><img src=\"https://www.datocms-assets.com/2885/1678222124-sro-cli-oldandnew.png\" alt=\"Enhanced\" /><h2><a href=\"#opa-policy-results-in-cli\">»</a><a></a>OPA policy results in CLI</h2>\n<p>Terraform 1.4 also adds support for Open Policy Agent (OPA) results in CLI-driven runs with Terraform Cloud. Native OPA support, <a href=\"https://www.hashicorp.com/blog/native-opa-support-in-terraform-cloud-is-now-generally-available\">now generally available</a>, enhances Terraform Cloud’s policy as code capabilities by integrating the OPA policy engine alongside our own Sentinel policy engine. With Terraform 1.4, CLI-driven runs for workspaces with OPA policies applied now have parity with Sentinel policies. If a policy rule fails and overrides are allowed, interactive runs will include an override prompt as you can see in this screenshot:</p><img src=\"https://www.datocms-assets.com/2885/1678222144-opa-cli.png\" alt=\"CLI-driven\" /><p>Learn how to enforce OPA policies in Terraform Cloud with the <a href=\"https://developer.hashicorp.com/terraform/tutorials/cloud/drift-and-opa\">Detect Infrastructure Drift and Enforce OPA Policies</a> tutorial.</p>\n<h2><a href=\"#native-replacement-for-null_resource\">»</a><a></a>Native replacement for null_resource</h2>\n<p>The <code>null</code> utility provider implements a single resource (<code>null_resource</code>) which, as the name implies, does nothing. As strange as that sounds, this is intentional. The null resource is often used to help orchestrate tricky resource lifecycle situations. In fact it’s so widely used, it’s the 3rd most-downloaded provider in the Terraform Registry.</p>\n<p>Terraform 1.4 introduces a new <code>terraform_data</code> resource as a built-in replacement for the null resource. This removes the need to include the null provider in your configuration and supports all the same capabilities as <code>null_resource</code>. Here’s an example using <code>terraform_data</code> to trigger the replacement of a resource:</p><pre><code>variable \"revision\" {\n  default = 1\n}\n\nresource \"terraform_data\" \"replacement\" {\n  input = var.revision\n}\n\n# This resource has no convenient attribute which forces replacement,\n# but can now be replaced by any change to the revision variable value.\nresource \"example_database\" \"test\" {\n  lifecycle {\n    replace_triggered_by = [terraform_data.replacement]\n  }\n}</code></pre><p>You can learn more about the new <code>terraform_data</code> resource including its syntax and usage examples in the <a href=\"https://developer.hashicorp.com/terraform/language/resources/terraform-data\">Terraform language docs</a>.</p>\n<h2><a href=\"#getting-started-with-terraform-1-4\">»</a><a></a>Getting started with Terraform 1.4</h2>\n<p>For more details and to learn about all of the enhancements in Terraform 1.4, please see the full HashiCorp Terraform 1.4 <a href=\"https://github.com/hashicorp/terraform/releases/tag/v1.4.0\">changelog</a>.</p>\n<ul>\n<li><a href=\"https://developer.hashicorp.com/terraform/downloads\">Download the Terraform 1.4 release</a></li>\n<li><a href=\"https://app.terraform.io/public/signup/account\">Sign up for a free Terraform Cloud account</a></li>\n<li>Review the <a href=\"https://developer.hashicorp.com/terraform/language/v1.4.x/upgrade-guides\">Terraform 1.4 upgrade guide</a></li>\n<li>Get hands-on with tutorials at <a href=\"https://developer.hashicorp.com/terraform/tutorials\">HashiCorp Developer</a></li>\n</ul>\n<p>As always, this release wouldn't have been possible without all of the great community feedback we've received via GitHub issues and from our customers. Thank you!</p>","author":"Dan Barr","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"c5ddc81c0487b056efdfeeebf65de22d476f398f862d9d0beb41d2480e616fb9","category":"Tech"}